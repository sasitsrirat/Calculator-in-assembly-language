
6413112.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  00001dbe  00001e52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001dbe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800130  00800130  00001e82  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001e82  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ee0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00001f20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001297  00000000  00000000  00001fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000087f  00000000  00000000  00003257  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008f5  00000000  00000000  00003ad6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000244  00000000  00000000  000043cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000576  00000000  00000000  00004610  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000105f  00000000  00000000  00004b86  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00005be5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 10 01 	jmp	0x220	; 0x220 <__ctors_end>
       4:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
       8:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
       c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      10:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      14:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      18:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      1c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      20:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      24:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      28:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      2c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      30:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      34:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      38:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      3c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      40:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      44:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      48:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      4c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      50:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      54:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      58:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      5c:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      60:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      64:	0c 94 2d 01 	jmp	0x25a	; 0x25a <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__trampolines_end>:
      ea:	4e 41       	sbci	r20, 0x1E	; 30
      ec:	4e 49       	Address 0x000000ec is out of bounds.
.word	0xffff	; ????

000000ed <pstr_inity>:
      ed:	49 4e 49 54 59                                      INITY

000000f2 <pstr_inf>:
      f2:	49 4e 46                                            INF

000000f5 <pwr_m10>:
      f5:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     105:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000010d <pwr_p10>:
     10d:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     11d:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
     12d:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
     13d:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
     14d:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
     15d:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
     16d:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     17d:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     18d:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     19d:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     1ad:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     1bd:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     1cd:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     1dd:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     1ed:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     1fd:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     20d:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     21d:	3d 27 00                                            ='.

00000220 <__ctors_end>:
     220:	11 24       	eor	r1, r1
     222:	1f be       	out	0x3f, r1	; 63
     224:	cf ef       	ldi	r28, 0xFF	; 255
     226:	d8 e0       	ldi	r29, 0x08	; 8
     228:	de bf       	out	0x3e, r29	; 62
     22a:	cd bf       	out	0x3d, r28	; 61

0000022c <__do_copy_data>:
     22c:	11 e0       	ldi	r17, 0x01	; 1
     22e:	a0 e0       	ldi	r26, 0x00	; 0
     230:	b1 e0       	ldi	r27, 0x01	; 1
     232:	ee eb       	ldi	r30, 0xBE	; 190
     234:	fd e1       	ldi	r31, 0x1D	; 29
     236:	02 c0       	rjmp	.+4      	; 0x23c <__do_copy_data+0x10>
     238:	05 90       	lpm	r0, Z+
     23a:	0d 92       	st	X+, r0
     23c:	a0 33       	cpi	r26, 0x30	; 48
     23e:	b1 07       	cpc	r27, r17
     240:	d9 f7       	brne	.-10     	; 0x238 <__do_copy_data+0xc>

00000242 <__do_clear_bss>:
     242:	21 e0       	ldi	r18, 0x01	; 1
     244:	a0 e3       	ldi	r26, 0x30	; 48
     246:	b1 e0       	ldi	r27, 0x01	; 1
     248:	01 c0       	rjmp	.+2      	; 0x24c <.do_clear_bss_start>

0000024a <.do_clear_bss_loop>:
     24a:	1d 92       	st	X+, r1

0000024c <.do_clear_bss_start>:
     24c:	a3 33       	cpi	r26, 0x33	; 51
     24e:	b2 07       	cpc	r27, r18
     250:	e1 f7       	brne	.-8      	; 0x24a <.do_clear_bss_loop>
     252:	0e 94 46 05 	call	0xa8c	; 0xa8c <main>
     256:	0c 94 dd 0e 	jmp	0x1dba	; 0x1dba <_exit>

0000025a <__bad_interrupt>:
     25a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000025e <lcd_putValue>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     25e:	9b b1       	in	r25, 0x0b	; 11
     260:	9f 70       	andi	r25, 0x0F	; 15
     262:	9b b9       	out	0x0b, r25	; 11
     264:	9b b1       	in	r25, 0x0b	; 11
     266:	28 2f       	mov	r18, r24
     268:	20 7f       	andi	r18, 0xF0	; 240
     26a:	92 2b       	or	r25, r18
     26c:	9b b9       	out	0x0b, r25	; 11
     26e:	98 b1       	in	r25, 0x08	; 8
     270:	92 60       	ori	r25, 0x02	; 2
     272:	98 b9       	out	0x08, r25	; 8
     274:	00 00       	nop
     276:	98 b1       	in	r25, 0x08	; 8
     278:	9d 7f       	andi	r25, 0xFD	; 253
     27a:	98 b9       	out	0x08, r25	; 8
     27c:	31 e2       	ldi	r19, 0x21	; 33
     27e:	3a 95       	dec	r19
     280:	f1 f7       	brne	.-4      	; 0x27e <lcd_putValue+0x20>
     282:	00 00       	nop
     284:	9b b1       	in	r25, 0x0b	; 11
     286:	9f 70       	andi	r25, 0x0F	; 15
     288:	9b b9       	out	0x0b, r25	; 11
     28a:	2b b1       	in	r18, 0x0b	; 11
     28c:	30 e1       	ldi	r19, 0x10	; 16
     28e:	83 9f       	mul	r24, r19
     290:	c0 01       	movw	r24, r0
     292:	11 24       	eor	r1, r1
     294:	82 2b       	or	r24, r18
     296:	8b b9       	out	0x0b, r24	; 11
     298:	88 b1       	in	r24, 0x08	; 8
     29a:	82 60       	ori	r24, 0x02	; 2
     29c:	88 b9       	out	0x08, r24	; 8
     29e:	00 00       	nop
     2a0:	88 b1       	in	r24, 0x08	; 8
     2a2:	8d 7f       	andi	r24, 0xFD	; 253
     2a4:	88 b9       	out	0x08, r24	; 8
     2a6:	81 e2       	ldi	r24, 0x21	; 33
     2a8:	8a 95       	dec	r24
     2aa:	f1 f7       	brne	.-4      	; 0x2a8 <lcd_putValue+0x4a>
     2ac:	00 00       	nop
     2ae:	08 95       	ret

000002b0 <lcdCommand>:
     2b0:	98 b1       	in	r25, 0x08	; 8
     2b2:	9e 7f       	andi	r25, 0xFE	; 254
     2b4:	98 b9       	out	0x08, r25	; 8
     2b6:	0e 94 2f 01 	call	0x25e	; 0x25e <lcd_putValue>
     2ba:	08 95       	ret

000002bc <lcdData>:
     2bc:	98 b1       	in	r25, 0x08	; 8
     2be:	91 60       	ori	r25, 0x01	; 1
     2c0:	98 b9       	out	0x08, r25	; 8
     2c2:	0e 94 2f 01 	call	0x25e	; 0x25e <lcd_putValue>
     2c6:	08 95       	ret

000002c8 <lcd_clear>:
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	0e 94 58 01 	call	0x2b0	; 0x2b0 <lcdCommand>
     2ce:	88 ea       	ldi	r24, 0xA8	; 168
     2d0:	91 e0       	ldi	r25, 0x01	; 1
     2d2:	01 97       	sbiw	r24, 0x01	; 1
     2d4:	f1 f7       	brne	.-4      	; 0x2d2 <lcd_clear+0xa>
     2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <lcd_clear+0x10>
     2d8:	00 00       	nop
     2da:	08 95       	ret

000002dc <lcd_hideCursor>:
	lcdCommand(0x0E);
	_delay_us(50);
}

void lcd_hideCursor() {
	lcdCommand(0x0C);
     2dc:	8c e0       	ldi	r24, 0x0C	; 12
     2de:	0e 94 58 01 	call	0x2b0	; 0x2b0 <lcdCommand>
     2e2:	80 e1       	ldi	r24, 0x10	; 16
     2e4:	8a 95       	dec	r24
     2e6:	f1 f7       	brne	.-4      	; 0x2e4 <lcd_hideCursor+0x8>
     2e8:	00 c0       	rjmp	.+0      	; 0x2ea <lcd_hideCursor+0xe>
     2ea:	08 95       	ret

000002ec <lcd_init>:
	_delay_us(50);
}

void lcd_init() {
	LCD_DDDR |= 0xF0;
     2ec:	8a b1       	in	r24, 0x0a	; 10
     2ee:	80 6f       	ori	r24, 0xF0	; 240
     2f0:	8a b9       	out	0x0a, r24	; 10
	LCD_CDDR |= (1 << LCD_RS) | (1 << LCD_EN);
     2f2:	87 b1       	in	r24, 0x07	; 7
     2f4:	83 60       	ori	r24, 0x03	; 3
     2f6:	87 b9       	out	0x07, r24	; 7

	LCD_CPRT &= ~(1 << LCD_EN);
     2f8:	88 b1       	in	r24, 0x08	; 8
     2fa:	8d 7f       	andi	r24, 0xFD	; 253
     2fc:	88 b9       	out	0x08, r24	; 8
     2fe:	83 ef       	ldi	r24, 0xF3	; 243
     300:	91 e0       	ldi	r25, 0x01	; 1
     302:	01 97       	sbiw	r24, 0x01	; 1
     304:	f1 f7       	brne	.-4      	; 0x302 <lcd_init+0x16>
     306:	00 c0       	rjmp	.+0      	; 0x308 <lcd_init+0x1c>
     308:	00 00       	nop
	_delay_us(2000);

	lcdCommand(0x33);
     30a:	83 e3       	ldi	r24, 0x33	; 51
     30c:	0e 94 58 01 	call	0x2b0	; 0x2b0 <lcdCommand>
	lcdCommand(0x32);
     310:	82 e3       	ldi	r24, 0x32	; 50
     312:	0e 94 58 01 	call	0x2b0	; 0x2b0 <lcdCommand>
	lcdCommand(0x28);
     316:	88 e2       	ldi	r24, 0x28	; 40
     318:	0e 94 58 01 	call	0x2b0	; 0x2b0 <lcdCommand>
	lcdCommand(0x0E);
     31c:	8e e0       	ldi	r24, 0x0E	; 14
     31e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <lcdCommand>
	lcdCommand(0x06);
     322:	86 e0       	ldi	r24, 0x06	; 6
     324:	0e 94 58 01 	call	0x2b0	; 0x2b0 <lcdCommand>

	lcd_clear();
     328:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_clear>
     32c:	08 95       	ret

0000032e <lcd_gotoxy>:
}

void lcd_gotoxy(unsigned char x, unsigned char y) {
     32e:	cf 93       	push	r28
     330:	df 93       	push	r29
     332:	00 d0       	rcall	.+0      	; 0x334 <lcd_gotoxy+0x6>
     334:	00 d0       	rcall	.+0      	; 0x336 <lcd_gotoxy+0x8>
     336:	cd b7       	in	r28, 0x3d	; 61
     338:	de b7       	in	r29, 0x3e	; 62
	const unsigned char firstCharAdr[] = { 0x80, 0xC0, 0x94, 0xD4 };
     33a:	90 e8       	ldi	r25, 0x80	; 128
     33c:	99 83       	std	Y+1, r25	; 0x01
     33e:	90 ec       	ldi	r25, 0xC0	; 192
     340:	9a 83       	std	Y+2, r25	; 0x02
     342:	94 e9       	ldi	r25, 0x94	; 148
     344:	9b 83       	std	Y+3, r25	; 0x03
     346:	94 ed       	ldi	r25, 0xD4	; 212
     348:	9c 83       	std	Y+4, r25	; 0x04
	lcdCommand(firstCharAdr[y - 1] + x - 1);
     34a:	e6 2f       	mov	r30, r22
     34c:	f0 e0       	ldi	r31, 0x00	; 0
     34e:	31 97       	sbiw	r30, 0x01	; 1
     350:	21 e0       	ldi	r18, 0x01	; 1
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	2c 0f       	add	r18, r28
     356:	3d 1f       	adc	r19, r29
     358:	e2 0f       	add	r30, r18
     35a:	f3 1f       	adc	r31, r19
     35c:	90 81       	ld	r25, Z
     35e:	89 0f       	add	r24, r25
     360:	81 50       	subi	r24, 0x01	; 1
     362:	0e 94 58 01 	call	0x2b0	; 0x2b0 <lcdCommand>
     366:	31 e2       	ldi	r19, 0x21	; 33
     368:	3a 95       	dec	r19
     36a:	f1 f7       	brne	.-4      	; 0x368 <lcd_gotoxy+0x3a>
     36c:	00 00       	nop
	_delay_us(100);
}
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	0f 90       	pop	r0
     374:	0f 90       	pop	r0
     376:	df 91       	pop	r29
     378:	cf 91       	pop	r28
     37a:	08 95       	ret

0000037c <lcd_print>:

void lcd_print(const char* str) {
     37c:	0f 93       	push	r16
     37e:	1f 93       	push	r17
     380:	cf 93       	push	r28
     382:	df 93       	push	r29
     384:	8c 01       	movw	r16, r24
	for (int i = 0; str[i] != '\0'; i++) {
     386:	c0 e0       	ldi	r28, 0x00	; 0
     388:	d0 e0       	ldi	r29, 0x00	; 0
     38a:	03 c0       	rjmp	.+6      	; 0x392 <lcd_print+0x16>
		lcdData(str[i]);
     38c:	0e 94 5e 01 	call	0x2bc	; 0x2bc <lcdData>
	lcdCommand(firstCharAdr[y - 1] + x - 1);
	_delay_us(100);
}

void lcd_print(const char* str) {
	for (int i = 0; str[i] != '\0'; i++) {
     390:	21 96       	adiw	r28, 0x01	; 1
     392:	f8 01       	movw	r30, r16
     394:	ec 0f       	add	r30, r28
     396:	fd 1f       	adc	r31, r29
     398:	80 81       	ld	r24, Z
     39a:	81 11       	cpse	r24, r1
     39c:	f7 cf       	rjmp	.-18     	; 0x38c <lcd_print+0x10>
		lcdData(str[i]);
	}
}
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	1f 91       	pop	r17
     3a4:	0f 91       	pop	r16
     3a6:	08 95       	ret

000003a8 <keyboard_init>:
	{ '7', '8', '9', '*' },
	{ '=', '0', '^', '/' }
};

void keyboard_init() {
	KEY_DDR = 0xF0;
     3a8:	80 ef       	ldi	r24, 0xF0	; 240
     3aa:	84 b9       	out	0x04, r24	; 4
	KEY_PRT = 0xFF;
     3ac:	8f ef       	ldi	r24, 0xFF	; 255
     3ae:	85 b9       	out	0x05, r24	; 5
     3b0:	08 95       	ret

000003b2 <keyboard>:

void keyboard() {
	unsigned char colloc, rowloc;

	do {
		KEY_PRT &= 0x0F;
     3b2:	85 b1       	in	r24, 0x05	; 5
     3b4:	8f 70       	andi	r24, 0x0F	; 15
     3b6:	85 b9       	out	0x05, r24	; 5
		asm("NOP");
     3b8:	00 00       	nop
		colloc = (KEY_PIN & 0x0F);
     3ba:	83 b1       	in	r24, 0x03	; 3
     3bc:	8f 70       	andi	r24, 0x0F	; 15
	} while (colloc != 0x0F);
     3be:	8f 30       	cpi	r24, 0x0F	; 15
     3c0:	c1 f7       	brne	.-16     	; 0x3b2 <keyboard>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3c2:	87 e8       	ldi	r24, 0x87	; 135
     3c4:	93 e1       	ldi	r25, 0x13	; 19
     3c6:	01 97       	sbiw	r24, 0x01	; 1
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <keyboard+0x14>
     3ca:	00 c0       	rjmp	.+0      	; 0x3cc <keyboard+0x1a>
     3cc:	00 00       	nop

	do {
		_delay_ms(20);
		colloc = (KEY_PIN & 0x0F);
     3ce:	83 b1       	in	r24, 0x03	; 3
     3d0:	8f 70       	andi	r24, 0x0F	; 15
	} while (colloc == 0x0F);
     3d2:	8f 30       	cpi	r24, 0x0F	; 15
     3d4:	b1 f3       	breq	.-20     	; 0x3c2 <keyboard+0x10>
     3d6:	87 e8       	ldi	r24, 0x87	; 135
     3d8:	93 e1       	ldi	r25, 0x13	; 19
     3da:	01 97       	sbiw	r24, 0x01	; 1
     3dc:	f1 f7       	brne	.-4      	; 0x3da <keyboard+0x28>
     3de:	00 c0       	rjmp	.+0      	; 0x3e0 <keyboard+0x2e>
     3e0:	00 00       	nop

	_delay_ms(20);
	colloc = (KEY_PIN & 0x0F);
     3e2:	83 b1       	in	r24, 0x03	; 3

	while (1) {
		KEY_PRT = 0x7F;
     3e4:	8f e7       	ldi	r24, 0x7F	; 127
     3e6:	85 b9       	out	0x05, r24	; 5
     3e8:	87 e8       	ldi	r24, 0x87	; 135
     3ea:	93 e1       	ldi	r25, 0x13	; 19
     3ec:	01 97       	sbiw	r24, 0x01	; 1
     3ee:	f1 f7       	brne	.-4      	; 0x3ec <keyboard+0x3a>
     3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <keyboard+0x40>
     3f2:	00 00       	nop
		_delay_ms(20);
		colloc = (KEY_PIN & 0x0F);
     3f4:	83 b1       	in	r24, 0x03	; 3
     3f6:	8f 70       	andi	r24, 0x0F	; 15

		if (colloc != 0x0F) {
     3f8:	8f 30       	cpi	r24, 0x0F	; 15
     3fa:	21 f5       	brne	.+72     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
			rowloc = 0;
			break;
		}

		KEY_PRT = 0xBF;
     3fc:	8f eb       	ldi	r24, 0xBF	; 191
     3fe:	85 b9       	out	0x05, r24	; 5
     400:	87 e8       	ldi	r24, 0x87	; 135
     402:	93 e1       	ldi	r25, 0x13	; 19
     404:	01 97       	sbiw	r24, 0x01	; 1
     406:	f1 f7       	brne	.-4      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
     408:	00 c0       	rjmp	.+0      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     40a:	00 00       	nop
		_delay_ms(20);
		colloc = (KEY_PIN & 0x0F);
     40c:	83 b1       	in	r24, 0x03	; 3
     40e:	8f 70       	andi	r24, 0x0F	; 15

		if (colloc != 0x0F) {
     410:	8f 30       	cpi	r24, 0x0F	; 15
     412:	d1 f4       	brne	.+52     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
			rowloc = 1;
			break;
		}

		KEY_PRT = 0xDF;
     414:	8f ed       	ldi	r24, 0xDF	; 223
     416:	85 b9       	out	0x05, r24	; 5
     418:	87 e8       	ldi	r24, 0x87	; 135
     41a:	93 e1       	ldi	r25, 0x13	; 19
     41c:	01 97       	sbiw	r24, 0x01	; 1
     41e:	f1 f7       	brne	.-4      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
     420:	00 c0       	rjmp	.+0      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
     422:	00 00       	nop
		_delay_ms(20);
		colloc = (KEY_PIN & 0x0F);
     424:	83 b1       	in	r24, 0x03	; 3
     426:	8f 70       	andi	r24, 0x0F	; 15

		if (colloc != 0x0F) {
     428:	8f 30       	cpi	r24, 0x0F	; 15
     42a:	81 f4       	brne	.+32     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
			rowloc = 2;
			break;
		}

		KEY_PRT = 0xEF;
     42c:	8f ee       	ldi	r24, 0xEF	; 239
     42e:	85 b9       	out	0x05, r24	; 5
     430:	87 e8       	ldi	r24, 0x87	; 135
     432:	93 e1       	ldi	r25, 0x13	; 19
     434:	01 97       	sbiw	r24, 0x01	; 1
     436:	f1 f7       	brne	.-4      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
     438:	00 c0       	rjmp	.+0      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
     43a:	00 00       	nop
		_delay_ms(20);
		colloc = (KEY_PIN & 0x0F);
     43c:	83 b1       	in	r24, 0x03	; 3
     43e:	8f 70       	andi	r24, 0x0F	; 15
		rowloc = 3;
     440:	e3 e0       	ldi	r30, 0x03	; 3
		break;
     442:	05 c0       	rjmp	.+10     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
		KEY_PRT = 0x7F;
		_delay_ms(20);
		colloc = (KEY_PIN & 0x0F);

		if (colloc != 0x0F) {
			rowloc = 0;
     444:	e0 e0       	ldi	r30, 0x00	; 0
     446:	03 c0       	rjmp	.+6      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
		KEY_PRT = 0xBF;
		_delay_ms(20);
		colloc = (KEY_PIN & 0x0F);

		if (colloc != 0x0F) {
			rowloc = 1;
     448:	e1 e0       	ldi	r30, 0x01	; 1
     44a:	01 c0       	rjmp	.+2      	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
		KEY_PRT = 0xDF;
		_delay_ms(20);
		colloc = (KEY_PIN & 0x0F);

		if (colloc != 0x0F) {
			rowloc = 2;
     44c:	e2 e0       	ldi	r30, 0x02	; 2
		colloc = (KEY_PIN & 0x0F);
		rowloc = 3;
		break;
	}

	if (colloc == 0x0E) keyvalue = keypad[rowloc][0];
     44e:	8e 30       	cpi	r24, 0x0E	; 14
     450:	59 f4       	brne	.+22     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     452:	f0 e0       	ldi	r31, 0x00	; 0
     454:	ee 0f       	add	r30, r30
     456:	ff 1f       	adc	r31, r31
     458:	ee 0f       	add	r30, r30
     45a:	ff 1f       	adc	r31, r31
     45c:	e1 5e       	subi	r30, 0xE1	; 225
     45e:	fe 4f       	sbci	r31, 0xFE	; 254
     460:	80 81       	ld	r24, Z
     462:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
     466:	08 95       	ret
	else if (colloc == 0x0D) keyvalue = keypad[rowloc][1];
     468:	8d 30       	cpi	r24, 0x0D	; 13
     46a:	59 f4       	brne	.+22     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     46c:	f0 e0       	ldi	r31, 0x00	; 0
     46e:	ee 0f       	add	r30, r30
     470:	ff 1f       	adc	r31, r31
     472:	ee 0f       	add	r30, r30
     474:	ff 1f       	adc	r31, r31
     476:	e1 5e       	subi	r30, 0xE1	; 225
     478:	fe 4f       	sbci	r31, 0xFE	; 254
     47a:	81 81       	ldd	r24, Z+1	; 0x01
     47c:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
     480:	08 95       	ret
	else if (colloc == 0x0B) keyvalue = keypad[rowloc][2];
     482:	8b 30       	cpi	r24, 0x0B	; 11
     484:	59 f4       	brne	.+22     	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
     486:	f0 e0       	ldi	r31, 0x00	; 0
     488:	ee 0f       	add	r30, r30
     48a:	ff 1f       	adc	r31, r31
     48c:	ee 0f       	add	r30, r30
     48e:	ff 1f       	adc	r31, r31
     490:	e1 5e       	subi	r30, 0xE1	; 225
     492:	fe 4f       	sbci	r31, 0xFE	; 254
     494:	82 81       	ldd	r24, Z+2	; 0x02
     496:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
     49a:	08 95       	ret
	else if (colloc == 0x07) keyvalue = keypad[rowloc][3];
     49c:	87 30       	cpi	r24, 0x07	; 7
     49e:	51 f4       	brne	.+20     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
     4a0:	f0 e0       	ldi	r31, 0x00	; 0
     4a2:	ee 0f       	add	r30, r30
     4a4:	ff 1f       	adc	r31, r31
     4a6:	ee 0f       	add	r30, r30
     4a8:	ff 1f       	adc	r31, r31
     4aa:	e1 5e       	subi	r30, 0xE1	; 225
     4ac:	fe 4f       	sbci	r31, 0xFE	; 254
     4ae:	83 81       	ldd	r24, Z+3	; 0x03
     4b0:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
     4b4:	08 95       	ret

000004b6 <lcd_printNumber>:
}
/*==============================================================================*/
void lcd_printNumber(long long num) {
     4b6:	0f 93       	push	r16
     4b8:	1f 93       	push	r17
     4ba:	cf 93       	push	r28
     4bc:	df 93       	push	r29
     4be:	cd b7       	in	r28, 0x3d	; 61
     4c0:	de b7       	in	r29, 0x3e	; 62
     4c2:	60 97       	sbiw	r28, 0x10	; 16
     4c4:	0f b6       	in	r0, 0x3f	; 63
     4c6:	f8 94       	cli
     4c8:	de bf       	out	0x3e, r29	; 62
     4ca:	0f be       	out	0x3f, r0	; 63
     4cc:	cd bf       	out	0x3d, r28	; 61
	char buffer[MAX_EXPRESSION_LENGTH];
	dtostrf(num, 5, 2, buffer);  // Adjust the parameters based on your needs
     4ce:	0e 94 d1 05 	call	0xba2	; 0xba2 <__floatdisf>
     4d2:	8e 01       	movw	r16, r28
     4d4:	0f 5f       	subi	r16, 0xFF	; 255
     4d6:	1f 4f       	sbci	r17, 0xFF	; 255
     4d8:	22 e0       	ldi	r18, 0x02	; 2
     4da:	45 e0       	ldi	r20, 0x05	; 5
     4dc:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <dtostrf>
	lcd_print(buffer);
     4e0:	c8 01       	movw	r24, r16
     4e2:	0e 94 be 01 	call	0x37c	; 0x37c <lcd_print>
}
     4e6:	60 96       	adiw	r28, 0x10	; 16
     4e8:	0f b6       	in	r0, 0x3f	; 63
     4ea:	f8 94       	cli
     4ec:	de bf       	out	0x3e, r29	; 62
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	cd bf       	out	0x3d, r28	; 61
     4f2:	df 91       	pop	r29
     4f4:	cf 91       	pop	r28
     4f6:	1f 91       	pop	r17
     4f8:	0f 91       	pop	r16
     4fa:	08 95       	ret

000004fc <lcd_printError>:

// Function to handle error printing
void lcd_printError(const char* errorMessage) {
     4fc:	cf 93       	push	r28
     4fe:	df 93       	push	r29
     500:	ec 01       	movw	r28, r24
	lcd_clear();
     502:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_clear>
	lcd_gotoxy(1, 4);
     506:	64 e0       	ldi	r22, 0x04	; 4
     508:	81 e0       	ldi	r24, 0x01	; 1
     50a:	0e 94 97 01 	call	0x32e	; 0x32e <lcd_gotoxy>
	lcd_print(errorMessage);
     50e:	ce 01       	movw	r24, r28
     510:	0e 94 be 01 	call	0x37c	; 0x37c <lcd_print>
     514:	2f e7       	ldi	r18, 0x7F	; 127
     516:	8a e1       	ldi	r24, 0x1A	; 26
     518:	96 e0       	ldi	r25, 0x06	; 6
     51a:	21 50       	subi	r18, 0x01	; 1
     51c:	80 40       	sbci	r24, 0x00	; 0
     51e:	90 40       	sbci	r25, 0x00	; 0
     520:	e1 f7       	brne	.-8      	; 0x51a <lcd_printError+0x1e>
     522:	00 c0       	rjmp	.+0      	; 0x524 <lcd_printError+0x28>
     524:	00 00       	nop
	_delay_ms(2000);
	lcd_clear();
     526:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_clear>
	lcd_gotoxy(1, 1);
     52a:	61 e0       	ldi	r22, 0x01	; 1
     52c:	81 e0       	ldi	r24, 0x01	; 1
     52e:	0e 94 97 01 	call	0x32e	; 0x32e <lcd_gotoxy>
}
     532:	df 91       	pop	r29
     534:	cf 91       	pop	r28
     536:	08 95       	ret

00000538 <getPrecedence>:

int getPrecedence(char op) {
	switch (op) {
     538:	8d 32       	cpi	r24, 0x2D	; 45
     53a:	69 f0       	breq	.+26     	; 0x556 <getPrecedence+0x1e>
     53c:	28 f4       	brcc	.+10     	; 0x548 <getPrecedence+0x10>
     53e:	8a 32       	cpi	r24, 0x2A	; 42
     540:	81 f0       	breq	.+32     	; 0x562 <getPrecedence+0x2a>
     542:	8b 32       	cpi	r24, 0x2B	; 43
     544:	41 f0       	breq	.+16     	; 0x556 <getPrecedence+0x1e>
     546:	0a c0       	rjmp	.+20     	; 0x55c <getPrecedence+0x24>
     548:	8f 32       	cpi	r24, 0x2F	; 47
     54a:	59 f0       	breq	.+22     	; 0x562 <getPrecedence+0x2a>
     54c:	8e 35       	cpi	r24, 0x5E	; 94
     54e:	31 f4       	brne	.+12     	; 0x55c <getPrecedence+0x24>
		case '^':
		return 3;
     550:	83 e0       	ldi	r24, 0x03	; 3
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	08 95       	ret
		case '*':
		case '/':
		return 2;
		case '+':
		case '-':
		return 1;
     556:	81 e0       	ldi	r24, 0x01	; 1
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	08 95       	ret
		default:
		return 0;  // Default for numbers
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	08 95       	ret
	switch (op) {
		case '^':
		return 3;
		case '*':
		case '/':
		return 2;
     562:	82 e0       	ldi	r24, 0x02	; 2
     564:	90 e0       	ldi	r25, 0x00	; 0
		case '-':
		return 1;
		default:
		return 0;  // Default for numbers
	}
}
     566:	08 95       	ret

00000568 <performOperation>:

// Function to perform arithmetic operation
long long performOperation(long long operand1, long long operand2, char operator) {
     568:	2f 92       	push	r2
     56a:	3f 92       	push	r3
     56c:	4f 92       	push	r4
     56e:	5f 92       	push	r5
     570:	6f 92       	push	r6
     572:	7f 92       	push	r7
     574:	8f 92       	push	r8
     576:	9f 92       	push	r9
     578:	af 92       	push	r10
     57a:	bf 92       	push	r11
     57c:	cf 92       	push	r12
     57e:	df 92       	push	r13
     580:	ef 92       	push	r14
     582:	ff 92       	push	r15
     584:	0f 93       	push	r16
     586:	1f 93       	push	r17
     588:	cf 93       	push	r28
     58a:	df 93       	push	r29
     58c:	cd b7       	in	r28, 0x3d	; 61
     58e:	de b7       	in	r29, 0x3e	; 62
	switch (operator) {
     590:	ed e2       	ldi	r30, 0x2D	; 45
     592:	8e 16       	cp	r8, r30
     594:	c1 f0       	breq	.+48     	; 0x5c6 <performOperation+0x5e>
     596:	e8 2d       	mov	r30, r8
     598:	99 2e       	mov	r9, r25
     59a:	78 2e       	mov	r7, r24
     59c:	67 2e       	mov	r6, r23
     59e:	56 2e       	mov	r5, r22
     5a0:	45 2e       	mov	r4, r21
     5a2:	34 2e       	mov	r3, r20
     5a4:	23 2e       	mov	r2, r19
     5a6:	82 2e       	mov	r8, r18
     5a8:	ee 32       	cpi	r30, 0x2E	; 46
     5aa:	28 f4       	brcc	.+10     	; 0x5b6 <performOperation+0x4e>
     5ac:	ea 32       	cpi	r30, 0x2A	; 42
     5ae:	71 f0       	breq	.+28     	; 0x5cc <performOperation+0x64>
     5b0:	eb 32       	cpi	r30, 0x2B	; 43
     5b2:	31 f0       	breq	.+12     	; 0x5c0 <performOperation+0x58>
     5b4:	4f c0       	rjmp	.+158    	; 0x654 <performOperation+0xec>
     5b6:	ef 32       	cpi	r30, 0x2F	; 47
     5b8:	61 f0       	breq	.+24     	; 0x5d2 <performOperation+0x6a>
     5ba:	ee 35       	cpi	r30, 0x5E	; 94
     5bc:	71 f1       	breq	.+92     	; 0x61a <performOperation+0xb2>
     5be:	4a c0       	rjmp	.+148    	; 0x654 <performOperation+0xec>
		case '+':
		return operand1 + operand2;
     5c0:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__adddi3>
     5c4:	4f c0       	rjmp	.+158    	; 0x664 <performOperation+0xfc>
		case '-':
		return operand1 - operand2;
     5c6:	0e 94 bd 0a 	call	0x157a	; 0x157a <__subdi3>
     5ca:	4c c0       	rjmp	.+152    	; 0x664 <performOperation+0xfc>
		case '*':
		return operand1 * operand2;
     5cc:	0e 94 84 09 	call	0x1308	; 0x1308 <__muldi3>
     5d0:	49 c0       	rjmp	.+146    	; 0x664 <performOperation+0xfc>
		case '/':
		if (operand2 != 0) {
     5d2:	2a 2d       	mov	r18, r10
     5d4:	3b 2d       	mov	r19, r11
     5d6:	4c 2d       	mov	r20, r12
     5d8:	5d 2d       	mov	r21, r13
     5da:	6e 2d       	mov	r22, r14
     5dc:	7f 2d       	mov	r23, r15
     5de:	80 2f       	mov	r24, r16
     5e0:	91 2f       	mov	r25, r17
     5e2:	a0 e0       	ldi	r26, 0x00	; 0
     5e4:	0e 94 c6 0a 	call	0x158c	; 0x158c <__cmpdi2_s8>
     5e8:	59 f0       	breq	.+22     	; 0x600 <performOperation+0x98>
			return operand1 / operand2;
     5ea:	28 2d       	mov	r18, r8
     5ec:	32 2d       	mov	r19, r2
     5ee:	43 2d       	mov	r20, r3
     5f0:	54 2d       	mov	r21, r4
     5f2:	65 2d       	mov	r22, r5
     5f4:	76 2d       	mov	r23, r6
     5f6:	87 2d       	mov	r24, r7
     5f8:	99 2d       	mov	r25, r9
     5fa:	0e 94 df 09 	call	0x13be	; 0x13be <__divdi3>
     5fe:	32 c0       	rjmp	.+100    	; 0x664 <performOperation+0xfc>
			} else {
			int divisionError = 1;
			lcd_printError("Division by 0!");
     600:	80 e0       	ldi	r24, 0x00	; 0
     602:	91 e0       	ldi	r25, 0x01	; 1
     604:	0e 94 7e 02 	call	0x4fc	; 0x4fc <lcd_printError>
			return 0;  // Return a dummy value in case of error
     608:	20 e0       	ldi	r18, 0x00	; 0
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	40 e0       	ldi	r20, 0x00	; 0
     60e:	50 e0       	ldi	r21, 0x00	; 0
     610:	60 e0       	ldi	r22, 0x00	; 0
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	25 c0       	rjmp	.+74     	; 0x664 <performOperation+0xfc>
		}
		case '^':
		return pow(operand1, operand2); //pow(operand1, operand2);
     61a:	2a 2d       	mov	r18, r10
     61c:	3b 2d       	mov	r19, r11
     61e:	4c 2d       	mov	r20, r12
     620:	5d 2d       	mov	r21, r13
     622:	6e 2d       	mov	r22, r14
     624:	7f 2d       	mov	r23, r15
     626:	80 2f       	mov	r24, r16
     628:	91 2f       	mov	r25, r17
     62a:	0e 94 d1 05 	call	0xba2	; 0xba2 <__floatdisf>
     62e:	6b 01       	movw	r12, r22
     630:	7c 01       	movw	r14, r24
     632:	28 2d       	mov	r18, r8
     634:	32 2d       	mov	r19, r2
     636:	43 2d       	mov	r20, r3
     638:	54 2d       	mov	r21, r4
     63a:	65 2d       	mov	r22, r5
     63c:	76 2d       	mov	r23, r6
     63e:	87 2d       	mov	r24, r7
     640:	99 2d       	mov	r25, r9
     642:	0e 94 d1 05 	call	0xba2	; 0xba2 <__floatdisf>
     646:	a7 01       	movw	r20, r14
     648:	96 01       	movw	r18, r12
     64a:	0e 94 47 06 	call	0xc8e	; 0xc8e <pow>
     64e:	0e 94 95 05 	call	0xb2a	; 0xb2a <__fixsfdi>
     652:	08 c0       	rjmp	.+16     	; 0x664 <performOperation+0xfc>
		//break;
		default:
		return 0;  // Default case for unknown operators
     654:	20 e0       	ldi	r18, 0x00	; 0
     656:	30 e0       	ldi	r19, 0x00	; 0
     658:	40 e0       	ldi	r20, 0x00	; 0
     65a:	50 e0       	ldi	r21, 0x00	; 0
     65c:	60 e0       	ldi	r22, 0x00	; 0
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	1f 91       	pop	r17
     66a:	0f 91       	pop	r16
     66c:	ff 90       	pop	r15
     66e:	ef 90       	pop	r14
     670:	df 90       	pop	r13
     672:	cf 90       	pop	r12
     674:	bf 90       	pop	r11
     676:	af 90       	pop	r10
     678:	9f 90       	pop	r9
     67a:	8f 90       	pop	r8
     67c:	7f 90       	pop	r7
     67e:	6f 90       	pop	r6
     680:	5f 90       	pop	r5
     682:	4f 90       	pop	r4
     684:	3f 90       	pop	r3
     686:	2f 90       	pop	r2
     688:	08 95       	ret

0000068a <evaluateExpression>:

void evaluateExpression(char expression[]) {
     68a:	2f 92       	push	r2
     68c:	3f 92       	push	r3
     68e:	4f 92       	push	r4
     690:	5f 92       	push	r5
     692:	6f 92       	push	r6
     694:	7f 92       	push	r7
     696:	8f 92       	push	r8
     698:	9f 92       	push	r9
     69a:	af 92       	push	r10
     69c:	bf 92       	push	r11
     69e:	cf 92       	push	r12
     6a0:	df 92       	push	r13
     6a2:	ef 92       	push	r14
     6a4:	ff 92       	push	r15
     6a6:	0f 93       	push	r16
     6a8:	1f 93       	push	r17
     6aa:	cf 93       	push	r28
     6ac:	df 93       	push	r29
     6ae:	cd b7       	in	r28, 0x3d	; 61
     6b0:	de b7       	in	r29, 0x3e	; 62
     6b2:	c8 59       	subi	r28, 0x98	; 152
     6b4:	d1 09       	sbc	r29, r1
     6b6:	0f b6       	in	r0, 0x3f	; 63
     6b8:	f8 94       	cli
     6ba:	de bf       	out	0x3e, r29	; 62
     6bc:	0f be       	out	0x3f, r0	; 63
     6be:	cd bf       	out	0x3d, r28	; 61
     6c0:	1c 01       	movw	r2, r24
	int isNegative = 0;

	// Clear divisionError flag before starting evaluation
	int divisionError = 0;

	for (int i = 0; expression[i] != '\0'; i++) {
     6c2:	41 2c       	mov	r4, r1
     6c4:	51 2c       	mov	r5, r1
void evaluateExpression(char expression[]) {
	long long operands[MAX_EXPRESSION_LENGTH];
	char operators[MAX_EXPRESSION_LENGTH];
	int operandIndex = 0;
	int operatorIndex = 0;
	int isNegative = 0;
     6c6:	00 e0       	ldi	r16, 0x00	; 0
     6c8:	10 e0       	ldi	r17, 0x00	; 0

void evaluateExpression(char expression[]) {
	long long operands[MAX_EXPRESSION_LENGTH];
	char operators[MAX_EXPRESSION_LENGTH];
	int operandIndex = 0;
	int operatorIndex = 0;
     6ca:	e1 2c       	mov	r14, r1
     6cc:	f1 2c       	mov	r15, r1
}

void evaluateExpression(char expression[]) {
	long long operands[MAX_EXPRESSION_LENGTH];
	char operators[MAX_EXPRESSION_LENGTH];
	int operandIndex = 0;
     6ce:	61 2c       	mov	r6, r1
     6d0:	71 2c       	mov	r7, r1
	int isNegative = 0;

	// Clear divisionError flag before starting evaluation
	int divisionError = 0;

	for (int i = 0; expression[i] != '\0'; i++) {
     6d2:	41 c1       	rjmp	.+642    	; 0x956 <__stack+0x57>
		if (expression[i] >= '0' && expression[i] <= '9') {
     6d4:	90 ed       	ldi	r25, 0xD0	; 208
     6d6:	98 0f       	add	r25, r24
     6d8:	9a 30       	cpi	r25, 0x0A	; 10
     6da:	08 f0       	brcs	.+2      	; 0x6de <evaluateExpression+0x54>
     6dc:	63 c0       	rjmp	.+198    	; 0x7a4 <evaluateExpression+0x11a>
			long long number = atof(&expression[i]);
     6de:	cd 56       	subi	r28, 0x6D	; 109
     6e0:	df 4f       	sbci	r29, 0xFF	; 255
     6e2:	88 81       	ld	r24, Y
     6e4:	99 81       	ldd	r25, Y+1	; 0x01
     6e6:	c3 59       	subi	r28, 0x93	; 147
     6e8:	d0 40       	sbci	r29, 0x00	; 0
     6ea:	0e 94 01 0b 	call	0x1602	; 0x1602 <atof>
     6ee:	0e 94 95 05 	call	0xb2a	; 0xb2a <__fixsfdi>
     6f2:	92 2e       	mov	r9, r18
     6f4:	83 2e       	mov	r8, r19
     6f6:	a4 2e       	mov	r10, r20
     6f8:	b5 2e       	mov	r11, r21
     6fa:	b6 2f       	mov	r27, r22
     6fc:	a7 2f       	mov	r26, r23
     6fe:	cf 56       	subi	r28, 0x6F	; 111
     700:	df 4f       	sbci	r29, 0xFF	; 255
     702:	88 83       	st	Y, r24
     704:	c1 59       	subi	r28, 0x91	; 145
     706:	d0 40       	sbci	r29, 0x00	; 0
     708:	cd 56       	subi	r28, 0x6D	; 109
     70a:	df 4f       	sbci	r29, 0xFF	; 255
     70c:	98 83       	st	Y, r25
     70e:	c3 59       	subi	r28, 0x93	; 147
     710:	d0 40       	sbci	r29, 0x00	; 0

			if (isNegative) {
     712:	01 15       	cp	r16, r1
     714:	11 05       	cpc	r17, r1
     716:	a1 f0       	breq	.+40     	; 0x740 <evaluateExpression+0xb6>
				number = -number;
     718:	0e 94 6d 0a 	call	0x14da	; 0x14da <__negdi2>
     71c:	92 2e       	mov	r9, r18
     71e:	83 2e       	mov	r8, r19
     720:	a4 2e       	mov	r10, r20
     722:	b5 2e       	mov	r11, r21
     724:	b6 2f       	mov	r27, r22
     726:	a7 2f       	mov	r26, r23
     728:	cf 56       	subi	r28, 0x6F	; 111
     72a:	df 4f       	sbci	r29, 0xFF	; 255
     72c:	88 83       	st	Y, r24
     72e:	c1 59       	subi	r28, 0x91	; 145
     730:	d0 40       	sbci	r29, 0x00	; 0
     732:	cd 56       	subi	r28, 0x6D	; 109
     734:	df 4f       	sbci	r29, 0xFF	; 255
     736:	98 83       	st	Y, r25
     738:	c3 59       	subi	r28, 0x93	; 147
     73a:	d0 40       	sbci	r29, 0x00	; 0
				isNegative = 0;
     73c:	00 e0       	ldi	r16, 0x00	; 0
     73e:	10 e0       	ldi	r17, 0x00	; 0
			}

			operands[operandIndex++] = number;
     740:	63 01       	movw	r12, r6
     742:	2f ef       	ldi	r18, 0xFF	; 255
     744:	c2 1a       	sub	r12, r18
     746:	d2 0a       	sbc	r13, r18
     748:	66 0c       	add	r6, r6
     74a:	77 1c       	adc	r7, r7
     74c:	66 0c       	add	r6, r6
     74e:	77 1c       	adc	r7, r7
     750:	66 0c       	add	r6, r6
     752:	77 1c       	adc	r7, r7
     754:	e1 e0       	ldi	r30, 0x01	; 1
     756:	f0 e0       	ldi	r31, 0x00	; 0
     758:	ec 0f       	add	r30, r28
     75a:	fd 1f       	adc	r31, r29
     75c:	e6 0d       	add	r30, r6
     75e:	f7 1d       	adc	r31, r7
     760:	90 82       	st	Z, r9
     762:	81 82       	std	Z+1, r8	; 0x01
     764:	a2 82       	std	Z+2, r10	; 0x02
     766:	b3 82       	std	Z+3, r11	; 0x03
     768:	b4 83       	std	Z+4, r27	; 0x04
     76a:	a5 83       	std	Z+5, r26	; 0x05
     76c:	cf 56       	subi	r28, 0x6F	; 111
     76e:	df 4f       	sbci	r29, 0xFF	; 255
     770:	88 81       	ld	r24, Y
     772:	c1 59       	subi	r28, 0x91	; 145
     774:	d0 40       	sbci	r29, 0x00	; 0
     776:	86 83       	std	Z+6, r24	; 0x06
     778:	cd 56       	subi	r28, 0x6D	; 109
     77a:	df 4f       	sbci	r29, 0xFF	; 255
     77c:	98 81       	ld	r25, Y
     77e:	c3 59       	subi	r28, 0x93	; 147
     780:	d0 40       	sbci	r29, 0x00	; 0
     782:	97 83       	std	Z+7, r25	; 0x07

			while (expression[i] >= '0' && expression[i] <= '9') {
     784:	03 c0       	rjmp	.+6      	; 0x78c <evaluateExpression+0x102>
				i++;
     786:	ef ef       	ldi	r30, 0xFF	; 255
     788:	4e 1a       	sub	r4, r30
     78a:	5e 0a       	sbc	r5, r30
				isNegative = 0;
			}

			operands[operandIndex++] = number;

			while (expression[i] >= '0' && expression[i] <= '9') {
     78c:	f1 01       	movw	r30, r2
     78e:	e4 0d       	add	r30, r4
     790:	f5 1d       	adc	r31, r5
     792:	80 81       	ld	r24, Z
     794:	80 53       	subi	r24, 0x30	; 48
     796:	8a 30       	cpi	r24, 0x0A	; 10
     798:	b0 f3       	brcs	.-20     	; 0x786 <evaluateExpression+0xfc>
				i++;
			}
			i--;
     79a:	f1 e0       	ldi	r31, 0x01	; 1
     79c:	4f 1a       	sub	r4, r31
     79e:	51 08       	sbc	r5, r1
			if (isNegative) {
				number = -number;
				isNegative = 0;
			}

			operands[operandIndex++] = number;
     7a0:	36 01       	movw	r6, r12
     7a2:	d6 c0       	rjmp	.+428    	; 0x950 <__stack+0x51>

			while (expression[i] >= '0' && expression[i] <= '9') {
				i++;
			}
			i--;
			} else if (expression[i] == '+' || expression[i] == '-' || expression[i] == '*' || expression[i] == '/' || expression[i] == '^') {
     7a4:	8b 32       	cpi	r24, 0x2B	; 43
     7a6:	49 f0       	breq	.+18     	; 0x7ba <evaluateExpression+0x130>
     7a8:	8d 32       	cpi	r24, 0x2D	; 45
     7aa:	39 f0       	breq	.+14     	; 0x7ba <evaluateExpression+0x130>
     7ac:	8a 32       	cpi	r24, 0x2A	; 42
     7ae:	29 f0       	breq	.+10     	; 0x7ba <evaluateExpression+0x130>
     7b0:	8f 32       	cpi	r24, 0x2F	; 47
     7b2:	19 f0       	breq	.+6      	; 0x7ba <evaluateExpression+0x130>
     7b4:	8e 35       	cpi	r24, 0x5E	; 94
     7b6:	09 f0       	breq	.+2      	; 0x7ba <evaluateExpression+0x130>
     7b8:	cb c0       	rjmp	.+406    	; 0x950 <__stack+0x51>
			if (i == 0 || (i > 0 && (expression[i - 1] == '+' || expression[i - 1] == '-' || expression[i - 1] == '*' || expression[i - 1] == '/' || expression[i - 1] == '^'))) {
     7ba:	41 14       	cp	r4, r1
     7bc:	51 04       	cpc	r5, r1
     7be:	b9 f0       	breq	.+46     	; 0x7ee <evaluateExpression+0x164>
     7c0:	0c f4       	brge	.+2      	; 0x7c4 <evaluateExpression+0x13a>
     7c2:	6c c0       	rjmp	.+216    	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
     7c4:	c9 56       	subi	r28, 0x69	; 105
     7c6:	df 4f       	sbci	r29, 0xFF	; 255
     7c8:	e8 81       	ld	r30, Y
     7ca:	f9 81       	ldd	r31, Y+1	; 0x01
     7cc:	c7 59       	subi	r28, 0x97	; 151
     7ce:	d0 40       	sbci	r29, 0x00	; 0
     7d0:	31 97       	sbiw	r30, 0x01	; 1
     7d2:	e2 0d       	add	r30, r2
     7d4:	f3 1d       	adc	r31, r3
     7d6:	90 81       	ld	r25, Z
     7d8:	9b 32       	cpi	r25, 0x2B	; 43
     7da:	49 f0       	breq	.+18     	; 0x7ee <evaluateExpression+0x164>
     7dc:	9d 32       	cpi	r25, 0x2D	; 45
     7de:	39 f0       	breq	.+14     	; 0x7ee <evaluateExpression+0x164>
     7e0:	9a 32       	cpi	r25, 0x2A	; 42
     7e2:	29 f0       	breq	.+10     	; 0x7ee <evaluateExpression+0x164>
     7e4:	9f 32       	cpi	r25, 0x2F	; 47
     7e6:	19 f0       	breq	.+6      	; 0x7ee <evaluateExpression+0x164>
     7e8:	9e 35       	cpi	r25, 0x5E	; 94
     7ea:	09 f0       	breq	.+2      	; 0x7ee <evaluateExpression+0x164>
     7ec:	57 c0       	rjmp	.+174    	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
				if (expression[i] == '-') {
     7ee:	8d 32       	cpi	r24, 0x2D	; 45
     7f0:	09 f4       	brne	.+2      	; 0x7f4 <evaluateExpression+0x16a>
     7f2:	ac c0       	rjmp	.+344    	; 0x94c <__stack+0x4d>
					isNegative = 1;
					} else if (expression[i] == '+') {
     7f4:	8b 32       	cpi	r24, 0x2B	; 43
     7f6:	09 f4       	brne	.+2      	; 0x7fa <evaluateExpression+0x170>
     7f8:	ab c0       	rjmp	.+342    	; 0x950 <__stack+0x51>
					// Ignore leading '+' symbol
					} else {
					lcd_printError("Syntax Error");
     7fa:	8f e0       	ldi	r24, 0x0F	; 15
     7fc:	91 e0       	ldi	r25, 0x01	; 1
     7fe:	0e 94 7e 02 	call	0x4fc	; 0x4fc <lcd_printError>
					return;
     802:	2a c1       	rjmp	.+596    	; 0xa58 <__stack+0x159>
				}
				} else {
				while (operatorIndex > 0 && getPrecedence(operators[operatorIndex - 1]) >= getPrecedence(expression[i])) {
					long long operand2 = operands[--operandIndex];
     804:	c3 01       	movw	r24, r6
     806:	01 97       	sbiw	r24, 0x01	; 1
     808:	cb 56       	subi	r28, 0x6B	; 107
     80a:	df 4f       	sbci	r29, 0xFF	; 255
     80c:	99 83       	std	Y+1, r25	; 0x01
     80e:	88 83       	st	Y, r24
     810:	c5 59       	subi	r28, 0x95	; 149
     812:	d0 40       	sbci	r29, 0x00	; 0
     814:	fc 01       	movw	r30, r24
     816:	ee 0f       	add	r30, r30
     818:	ff 1f       	adc	r31, r31
     81a:	ee 0f       	add	r30, r30
     81c:	ff 1f       	adc	r31, r31
     81e:	ee 0f       	add	r30, r30
     820:	ff 1f       	adc	r31, r31
     822:	81 e0       	ldi	r24, 0x01	; 1
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	8c 0f       	add	r24, r28
     828:	9d 1f       	adc	r25, r29
     82a:	e8 0f       	add	r30, r24
     82c:	f9 1f       	adc	r31, r25
     82e:	a0 80       	ld	r10, Z
     830:	b1 80       	ldd	r11, Z+1	; 0x01
     832:	c2 80       	ldd	r12, Z+2	; 0x02
     834:	d3 80       	ldd	r13, Z+3	; 0x03
     836:	e4 80       	ldd	r14, Z+4	; 0x04
     838:	f5 80       	ldd	r15, Z+5	; 0x05
     83a:	06 81       	ldd	r16, Z+6	; 0x06
     83c:	17 81       	ldd	r17, Z+7	; 0x07
					long long operand1 = operands[--operandIndex];
     83e:	92 e0       	ldi	r25, 0x02	; 2
     840:	69 1a       	sub	r6, r25
     842:	71 08       	sbc	r7, r1
     844:	66 0c       	add	r6, r6
     846:	77 1c       	adc	r7, r7
     848:	66 0c       	add	r6, r6
     84a:	77 1c       	adc	r7, r7
     84c:	66 0c       	add	r6, r6
     84e:	77 1c       	adc	r7, r7
     850:	e1 e0       	ldi	r30, 0x01	; 1
     852:	f0 e0       	ldi	r31, 0x00	; 0
     854:	ec 0f       	add	r30, r28
     856:	fd 1f       	adc	r31, r29
     858:	6e 0e       	add	r6, r30
     85a:	7f 1e       	adc	r7, r31
     85c:	f3 01       	movw	r30, r6
     85e:	20 81       	ld	r18, Z
     860:	31 81       	ldd	r19, Z+1	; 0x01
     862:	42 81       	ldd	r20, Z+2	; 0x02
     864:	53 81       	ldd	r21, Z+3	; 0x03
     866:	64 81       	ldd	r22, Z+4	; 0x04
     868:	75 81       	ldd	r23, Z+5	; 0x05

					// Perform the operation
					long long result = performOperation(operand1, operand2, operators[--operatorIndex]);
     86a:	86 81       	ldd	r24, Z+6	; 0x06
     86c:	97 81       	ldd	r25, Z+7	; 0x07
     86e:	0e 94 b4 02 	call	0x568	; 0x568 <performOperation>
					// Handle division by zero error
					if (divisionError) {
						return;
					}

					operands[operandIndex++] = result;
     872:	f3 01       	movw	r30, r6
     874:	20 83       	st	Z, r18
     876:	31 83       	std	Z+1, r19	; 0x01
     878:	42 83       	std	Z+2, r20	; 0x02
     87a:	53 83       	std	Z+3, r21	; 0x03
     87c:	64 83       	std	Z+4, r22	; 0x04
     87e:	75 83       	std	Z+5, r23	; 0x05
     880:	86 83       	std	Z+6, r24	; 0x06
     882:	97 83       	std	Z+7, r25	; 0x07
				while (operatorIndex > 0 && getPrecedence(operators[operatorIndex - 1]) >= getPrecedence(expression[i])) {
					long long operand2 = operands[--operandIndex];
					long long operand1 = operands[--operandIndex];

					// Perform the operation
					long long result = performOperation(operand1, operand2, operators[--operatorIndex]);
     884:	cf 56       	subi	r28, 0x6F	; 111
     886:	df 4f       	sbci	r29, 0xFF	; 255
     888:	e8 80       	ld	r14, Y
     88a:	f9 80       	ldd	r15, Y+1	; 0x01
     88c:	c1 59       	subi	r28, 0x91	; 145
     88e:	d0 40       	sbci	r29, 0x00	; 0
					// Handle division by zero error
					if (divisionError) {
						return;
					}

					operands[operandIndex++] = result;
     890:	cb 56       	subi	r28, 0x6B	; 107
     892:	df 4f       	sbci	r29, 0xFF	; 255
     894:	68 80       	ld	r6, Y
     896:	79 80       	ldd	r7, Y+1	; 0x01
     898:	c5 59       	subi	r28, 0x95	; 149
     89a:	d0 40       	sbci	r29, 0x00	; 0
					} else {
					lcd_printError("Syntax Error");
					return;
				}
				} else {
				while (operatorIndex > 0 && getPrecedence(operators[operatorIndex - 1]) >= getPrecedence(expression[i])) {
     89c:	1e 14       	cp	r1, r14
     89e:	1f 04       	cpc	r1, r15
     8a0:	04 f5       	brge	.+64     	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
     8a2:	c7 01       	movw	r24, r14
     8a4:	01 97       	sbiw	r24, 0x01	; 1
     8a6:	cf 56       	subi	r28, 0x6F	; 111
     8a8:	df 4f       	sbci	r29, 0xFF	; 255
     8aa:	99 83       	std	Y+1, r25	; 0x01
     8ac:	88 83       	st	Y, r24
     8ae:	c1 59       	subi	r28, 0x91	; 145
     8b0:	d0 40       	sbci	r29, 0x00	; 0
     8b2:	e1 e8       	ldi	r30, 0x81	; 129
     8b4:	f0 e0       	ldi	r31, 0x00	; 0
     8b6:	ec 0f       	add	r30, r28
     8b8:	fd 1f       	adc	r31, r29
     8ba:	e8 0f       	add	r30, r24
     8bc:	f9 1f       	adc	r31, r25
     8be:	80 80       	ld	r8, Z
     8c0:	88 2d       	mov	r24, r8
     8c2:	0e 94 9c 02 	call	0x538	; 0x538 <getPrecedence>
     8c6:	8c 01       	movw	r16, r24
     8c8:	cd 56       	subi	r28, 0x6D	; 109
     8ca:	df 4f       	sbci	r29, 0xFF	; 255
     8cc:	e8 81       	ld	r30, Y
     8ce:	f9 81       	ldd	r31, Y+1	; 0x01
     8d0:	c3 59       	subi	r28, 0x93	; 147
     8d2:	d0 40       	sbci	r29, 0x00	; 0
     8d4:	80 81       	ld	r24, Z
     8d6:	0e 94 9c 02 	call	0x538	; 0x538 <getPrecedence>
     8da:	08 17       	cp	r16, r24
     8dc:	19 07       	cpc	r17, r25
     8de:	0c f0       	brlt	.+2      	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
     8e0:	91 cf       	rjmp	.-222    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
					}

					operands[operandIndex++] = result;
				}

				if ((expression[i] == '*' || expression[i] == '/') && (i == 0 || (i > 0 && (expression[i - 1] == '+' || expression[i - 1] == '-' || expression[i - 1] == '*' || expression[i - 1] == '/' || expression[i - 1] == '^')))) {
     8e2:	cd 56       	subi	r28, 0x6D	; 109
     8e4:	df 4f       	sbci	r29, 0xFF	; 255
     8e6:	e8 81       	ld	r30, Y
     8e8:	f9 81       	ldd	r31, Y+1	; 0x01
     8ea:	c3 59       	subi	r28, 0x93	; 147
     8ec:	d0 40       	sbci	r29, 0x00	; 0
     8ee:	80 81       	ld	r24, Z
     8f0:	8a 32       	cpi	r24, 0x2A	; 42
     8f2:	11 f0       	breq	.+4      	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
     8f4:	8f 32       	cpi	r24, 0x2F	; 47
     8f6:	e9 f4       	brne	.+58     	; 0x932 <__stack+0x33>
     8f8:	41 14       	cp	r4, r1
     8fa:	51 04       	cpc	r5, r1
     8fc:	a9 f0       	breq	.+42     	; 0x928 <__stack+0x29>
     8fe:	cc f0       	brlt	.+50     	; 0x932 <__stack+0x33>
     900:	c9 56       	subi	r28, 0x69	; 105
     902:	df 4f       	sbci	r29, 0xFF	; 255
     904:	e8 81       	ld	r30, Y
     906:	f9 81       	ldd	r31, Y+1	; 0x01
     908:	c7 59       	subi	r28, 0x97	; 151
     90a:	d0 40       	sbci	r29, 0x00	; 0
     90c:	31 97       	sbiw	r30, 0x01	; 1
     90e:	e2 0d       	add	r30, r2
     910:	f3 1d       	adc	r31, r3
     912:	90 81       	ld	r25, Z
     914:	9b 32       	cpi	r25, 0x2B	; 43
     916:	41 f0       	breq	.+16     	; 0x928 <__stack+0x29>
     918:	9d 32       	cpi	r25, 0x2D	; 45
     91a:	31 f0       	breq	.+12     	; 0x928 <__stack+0x29>
     91c:	9a 32       	cpi	r25, 0x2A	; 42
     91e:	21 f0       	breq	.+8      	; 0x928 <__stack+0x29>
     920:	9f 32       	cpi	r25, 0x2F	; 47
     922:	11 f0       	breq	.+4      	; 0x928 <__stack+0x29>
     924:	9e 35       	cpi	r25, 0x5E	; 94
     926:	29 f4       	brne	.+10     	; 0x932 <__stack+0x33>
					lcd_printError("Syntax Error");
     928:	8f e0       	ldi	r24, 0x0F	; 15
     92a:	91 e0       	ldi	r25, 0x01	; 1
     92c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <lcd_printError>
					return;
     930:	93 c0       	rjmp	.+294    	; 0xa58 <__stack+0x159>
				}

				operators[operatorIndex++] = expression[i];
     932:	e1 e8       	ldi	r30, 0x81	; 129
     934:	f0 e0       	ldi	r31, 0x00	; 0
     936:	ec 0f       	add	r30, r28
     938:	fd 1f       	adc	r31, r29
     93a:	ee 0d       	add	r30, r14
     93c:	ff 1d       	adc	r31, r15
     93e:	80 83       	st	Z, r24
     940:	c7 01       	movw	r24, r14
     942:	01 96       	adiw	r24, 0x01	; 1
     944:	7c 01       	movw	r14, r24
				isNegative = 0;
     946:	00 e0       	ldi	r16, 0x00	; 0
     948:	10 e0       	ldi	r17, 0x00	; 0
     94a:	02 c0       	rjmp	.+4      	; 0x950 <__stack+0x51>
			}
			i--;
			} else if (expression[i] == '+' || expression[i] == '-' || expression[i] == '*' || expression[i] == '/' || expression[i] == '^') {
			if (i == 0 || (i > 0 && (expression[i - 1] == '+' || expression[i - 1] == '-' || expression[i - 1] == '*' || expression[i - 1] == '/' || expression[i - 1] == '^'))) {
				if (expression[i] == '-') {
					isNegative = 1;
     94c:	01 e0       	ldi	r16, 0x01	; 1
     94e:	10 e0       	ldi	r17, 0x00	; 0
	int isNegative = 0;

	// Clear divisionError flag before starting evaluation
	int divisionError = 0;

	for (int i = 0; expression[i] != '\0'; i++) {
     950:	9f ef       	ldi	r25, 0xFF	; 255
     952:	49 1a       	sub	r4, r25
     954:	59 0a       	sbc	r5, r25
     956:	c9 56       	subi	r28, 0x69	; 105
     958:	df 4f       	sbci	r29, 0xFF	; 255
     95a:	59 82       	std	Y+1, r5	; 0x01
     95c:	48 82       	st	Y, r4
     95e:	c7 59       	subi	r28, 0x97	; 151
     960:	d0 40       	sbci	r29, 0x00	; 0
     962:	f1 01       	movw	r30, r2
     964:	e4 0d       	add	r30, r4
     966:	f5 1d       	adc	r31, r5
     968:	cd 56       	subi	r28, 0x6D	; 109
     96a:	df 4f       	sbci	r29, 0xFF	; 255
     96c:	f9 83       	std	Y+1, r31	; 0x01
     96e:	e8 83       	st	Y, r30
     970:	c3 59       	subi	r28, 0x93	; 147
     972:	d0 40       	sbci	r29, 0x00	; 0
     974:	80 81       	ld	r24, Z
     976:	81 11       	cpse	r24, r1
     978:	ad ce       	rjmp	.-678    	; 0x6d4 <evaluateExpression+0x4a>
     97a:	27 01       	movw	r4, r14
     97c:	48 c0       	rjmp	.+144    	; 0xa0e <__stack+0x10f>
			}
		}
	}

	while (operatorIndex > 0) {
		long long operand2 = operands[--operandIndex];
     97e:	13 01       	movw	r2, r6
     980:	f1 e0       	ldi	r31, 0x01	; 1
     982:	2f 1a       	sub	r2, r31
     984:	31 08       	sbc	r3, r1
     986:	f1 01       	movw	r30, r2
     988:	ee 0f       	add	r30, r30
     98a:	ff 1f       	adc	r31, r31
     98c:	ee 0f       	add	r30, r30
     98e:	ff 1f       	adc	r31, r31
     990:	ee 0f       	add	r30, r30
     992:	ff 1f       	adc	r31, r31
     994:	81 e0       	ldi	r24, 0x01	; 1
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	8c 0f       	add	r24, r28
     99a:	9d 1f       	adc	r25, r29
     99c:	e8 0f       	add	r30, r24
     99e:	f9 1f       	adc	r31, r25
     9a0:	a0 80       	ld	r10, Z
     9a2:	b1 80       	ldd	r11, Z+1	; 0x01
     9a4:	c2 80       	ldd	r12, Z+2	; 0x02
     9a6:	d3 80       	ldd	r13, Z+3	; 0x03
     9a8:	e4 80       	ldd	r14, Z+4	; 0x04
     9aa:	f5 80       	ldd	r15, Z+5	; 0x05
     9ac:	06 81       	ldd	r16, Z+6	; 0x06
     9ae:	17 81       	ldd	r17, Z+7	; 0x07
		long long operand1 = operands[--operandIndex];
     9b0:	92 e0       	ldi	r25, 0x02	; 2
     9b2:	69 1a       	sub	r6, r25
     9b4:	71 08       	sbc	r7, r1
     9b6:	66 0c       	add	r6, r6
     9b8:	77 1c       	adc	r7, r7
     9ba:	66 0c       	add	r6, r6
     9bc:	77 1c       	adc	r7, r7
     9be:	66 0c       	add	r6, r6
     9c0:	77 1c       	adc	r7, r7
     9c2:	e1 e0       	ldi	r30, 0x01	; 1
     9c4:	f0 e0       	ldi	r31, 0x00	; 0
     9c6:	ec 0f       	add	r30, r28
     9c8:	fd 1f       	adc	r31, r29
     9ca:	6e 0e       	add	r6, r30
     9cc:	7f 1e       	adc	r7, r31
     9ce:	f3 01       	movw	r30, r6
     9d0:	20 81       	ld	r18, Z
     9d2:	31 81       	ldd	r19, Z+1	; 0x01
     9d4:	42 81       	ldd	r20, Z+2	; 0x02
     9d6:	53 81       	ldd	r21, Z+3	; 0x03
     9d8:	64 81       	ldd	r22, Z+4	; 0x04
     9da:	75 81       	ldd	r23, Z+5	; 0x05

		// Perform the operation
		long long result = performOperation(operand1, operand2, operators[--operatorIndex]);
     9dc:	f1 e0       	ldi	r31, 0x01	; 1
     9de:	4f 1a       	sub	r4, r31
     9e0:	51 08       	sbc	r5, r1
     9e2:	e1 e8       	ldi	r30, 0x81	; 129
     9e4:	f0 e0       	ldi	r31, 0x00	; 0
     9e6:	ec 0f       	add	r30, r28
     9e8:	fd 1f       	adc	r31, r29
     9ea:	e4 0d       	add	r30, r4
     9ec:	f5 1d       	adc	r31, r5
     9ee:	80 80       	ld	r8, Z
     9f0:	f3 01       	movw	r30, r6
     9f2:	86 81       	ldd	r24, Z+6	; 0x06
     9f4:	97 81       	ldd	r25, Z+7	; 0x07
     9f6:	0e 94 b4 02 	call	0x568	; 0x568 <performOperation>
		// Handle division by zero error
		if (divisionError) {
			return;
		}

		operands[operandIndex++] = result;
     9fa:	f3 01       	movw	r30, r6
     9fc:	20 83       	st	Z, r18
     9fe:	31 83       	std	Z+1, r19	; 0x01
     a00:	42 83       	std	Z+2, r20	; 0x02
     a02:	53 83       	std	Z+3, r21	; 0x03
     a04:	64 83       	std	Z+4, r22	; 0x04
     a06:	75 83       	std	Z+5, r23	; 0x05
     a08:	86 83       	std	Z+6, r24	; 0x06
     a0a:	97 83       	std	Z+7, r25	; 0x07
     a0c:	31 01       	movw	r6, r2
				isNegative = 0;
			}
		}
	}

	while (operatorIndex > 0) {
     a0e:	14 14       	cp	r1, r4
     a10:	15 04       	cpc	r1, r5
     a12:	0c f4       	brge	.+2      	; 0xa16 <__stack+0x117>
     a14:	b4 cf       	rjmp	.-152    	; 0x97e <__stack+0x7f>

		operands[operandIndex++] = result;
	}

	// Display the result on the LCD
	lcd_clear();
     a16:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_clear>
	lcd_gotoxy(1, 2);
     a1a:	62 e0       	ldi	r22, 0x02	; 2
     a1c:	81 e0       	ldi	r24, 0x01	; 1
     a1e:	0e 94 97 01 	call	0x32e	; 0x32e <lcd_gotoxy>
	lcd_print("=:");
     a22:	8c e1       	ldi	r24, 0x1C	; 28
     a24:	91 e0       	ldi	r25, 0x01	; 1
     a26:	0e 94 be 01 	call	0x37c	; 0x37c <lcd_print>
	lcd_printNumber(operands[0]);
     a2a:	29 81       	ldd	r18, Y+1	; 0x01
     a2c:	3a 81       	ldd	r19, Y+2	; 0x02
     a2e:	4b 81       	ldd	r20, Y+3	; 0x03
     a30:	5c 81       	ldd	r21, Y+4	; 0x04
     a32:	6d 81       	ldd	r22, Y+5	; 0x05
     a34:	7e 81       	ldd	r23, Y+6	; 0x06
     a36:	8f 81       	ldd	r24, Y+7	; 0x07
     a38:	98 85       	ldd	r25, Y+8	; 0x08
     a3a:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <lcd_printNumber>
     a3e:	ff e7       	ldi	r31, 0x7F	; 127
     a40:	2a e1       	ldi	r18, 0x1A	; 26
     a42:	86 e0       	ldi	r24, 0x06	; 6
     a44:	f1 50       	subi	r31, 0x01	; 1
     a46:	20 40       	sbci	r18, 0x00	; 0
     a48:	80 40       	sbci	r24, 0x00	; 0
     a4a:	e1 f7       	brne	.-8      	; 0xa44 <__stack+0x145>
     a4c:	00 c0       	rjmp	.+0      	; 0xa4e <__stack+0x14f>
     a4e:	00 00       	nop
	_delay_ms(2000);
	lcd_gotoxy(1, 1);
     a50:	61 e0       	ldi	r22, 0x01	; 1
     a52:	81 e0       	ldi	r24, 0x01	; 1
     a54:	0e 94 97 01 	call	0x32e	; 0x32e <lcd_gotoxy>
}
     a58:	c8 56       	subi	r28, 0x68	; 104
     a5a:	df 4f       	sbci	r29, 0xFF	; 255
     a5c:	0f b6       	in	r0, 0x3f	; 63
     a5e:	f8 94       	cli
     a60:	de bf       	out	0x3e, r29	; 62
     a62:	0f be       	out	0x3f, r0	; 63
     a64:	cd bf       	out	0x3d, r28	; 61
     a66:	df 91       	pop	r29
     a68:	cf 91       	pop	r28
     a6a:	1f 91       	pop	r17
     a6c:	0f 91       	pop	r16
     a6e:	ff 90       	pop	r15
     a70:	ef 90       	pop	r14
     a72:	df 90       	pop	r13
     a74:	cf 90       	pop	r12
     a76:	bf 90       	pop	r11
     a78:	af 90       	pop	r10
     a7a:	9f 90       	pop	r9
     a7c:	8f 90       	pop	r8
     a7e:	7f 90       	pop	r7
     a80:	6f 90       	pop	r6
     a82:	5f 90       	pop	r5
     a84:	4f 90       	pop	r4
     a86:	3f 90       	pop	r3
     a88:	2f 90       	pop	r2
     a8a:	08 95       	ret

00000a8c <main>:
/*================================================================*/
int main() {
     a8c:	cf 93       	push	r28
     a8e:	df 93       	push	r29
     a90:	cd b7       	in	r28, 0x3d	; 61
     a92:	de b7       	in	r29, 0x3e	; 62
     a94:	60 97       	sbiw	r28, 0x10	; 16
     a96:	0f b6       	in	r0, 0x3f	; 63
     a98:	f8 94       	cli
     a9a:	de bf       	out	0x3e, r29	; 62
     a9c:	0f be       	out	0x3f, r0	; 63
     a9e:	cd bf       	out	0x3d, r28	; 61
	lcd_init();
     aa0:	0e 94 76 01 	call	0x2ec	; 0x2ec <lcd_init>
	lcd_hideCursor();
     aa4:	0e 94 6e 01 	call	0x2dc	; 0x2dc <lcd_hideCursor>
	lcd_gotoxy(1, 1);
     aa8:	61 e0       	ldi	r22, 0x01	; 1
     aaa:	81 e0       	ldi	r24, 0x01	; 1
     aac:	0e 94 97 01 	call	0x32e	; 0x32e <lcd_gotoxy>
	keyboard_init();
     ab0:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <keyboard_init>

	char expression[MAX_EXPRESSION_LENGTH];
	int expressionIndex = 0;
     ab4:	00 e0       	ldi	r16, 0x00	; 0
     ab6:	10 e0       	ldi	r17, 0x00	; 0

	while (1) {
		keyboard();
     ab8:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <keyboard>

		if ((keyvalue >= '0' && keyvalue <= '9') || keyvalue == '.' || keyvalue == '+' || keyvalue == '-' || keyvalue == '*' || keyvalue == '/' || keyvalue == '^') {
     abc:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
     ac0:	90 ed       	ldi	r25, 0xD0	; 208
     ac2:	98 0f       	add	r25, r24
     ac4:	9a 30       	cpi	r25, 0x0A	; 10
     ac6:	60 f0       	brcs	.+24     	; 0xae0 <main+0x54>
     ac8:	8e 32       	cpi	r24, 0x2E	; 46
     aca:	51 f0       	breq	.+20     	; 0xae0 <main+0x54>
     acc:	8b 32       	cpi	r24, 0x2B	; 43
     ace:	41 f0       	breq	.+16     	; 0xae0 <main+0x54>
     ad0:	8d 32       	cpi	r24, 0x2D	; 45
     ad2:	31 f0       	breq	.+12     	; 0xae0 <main+0x54>
     ad4:	8a 32       	cpi	r24, 0x2A	; 42
     ad6:	21 f0       	breq	.+8      	; 0xae0 <main+0x54>
     ad8:	8f 32       	cpi	r24, 0x2F	; 47
     ada:	11 f0       	breq	.+4      	; 0xae0 <main+0x54>
     adc:	8e 35       	cpi	r24, 0x5E	; 94
     ade:	69 f4       	brne	.+26     	; 0xafa <main+0x6e>
			lcdData(keyvalue);
     ae0:	0e 94 5e 01 	call	0x2bc	; 0x2bc <lcdData>
			expression[expressionIndex++] = keyvalue;
     ae4:	e1 e0       	ldi	r30, 0x01	; 1
     ae6:	f0 e0       	ldi	r31, 0x00	; 0
     ae8:	ec 0f       	add	r30, r28
     aea:	fd 1f       	adc	r31, r29
     aec:	e0 0f       	add	r30, r16
     aee:	f1 1f       	adc	r31, r17
     af0:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
     af4:	80 83       	st	Z, r24
     af6:	0f 5f       	subi	r16, 0xFF	; 255
     af8:	1f 4f       	sbci	r17, 0xFF	; 255
		}
		if (keyvalue == '=') {
     afa:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
     afe:	8d 33       	cpi	r24, 0x3D	; 61
     b00:	69 f4       	brne	.+26     	; 0xb1c <main+0x90>
			expression[expressionIndex] = '\0';
     b02:	e1 e0       	ldi	r30, 0x01	; 1
     b04:	f0 e0       	ldi	r31, 0x00	; 0
     b06:	ec 0f       	add	r30, r28
     b08:	fd 1f       	adc	r31, r29
     b0a:	e0 0f       	add	r30, r16
     b0c:	f1 1f       	adc	r31, r17
     b0e:	10 82       	st	Z, r1
			evaluateExpression(expression);
     b10:	ce 01       	movw	r24, r28
     b12:	01 96       	adiw	r24, 0x01	; 1
     b14:	0e 94 45 03 	call	0x68a	; 0x68a <evaluateExpression>
			expressionIndex = 0;
     b18:	00 e0       	ldi	r16, 0x00	; 0
     b1a:	10 e0       	ldi	r17, 0x00	; 0
     b1c:	87 ea       	ldi	r24, 0xA7	; 167
     b1e:	91 e6       	ldi	r25, 0x61	; 97
     b20:	01 97       	sbiw	r24, 0x01	; 1
     b22:	f1 f7       	brne	.-4      	; 0xb20 <main+0x94>
     b24:	00 c0       	rjmp	.+0      	; 0xb26 <main+0x9a>
     b26:	00 00       	nop
     b28:	c7 cf       	rjmp	.-114    	; 0xab8 <main+0x2c>

00000b2a <__fixsfdi>:
     b2a:	be e3       	ldi	r27, 0x3E	; 62
     b2c:	04 d0       	rcall	.+8      	; 0xb36 <__fixunssfdi+0x2>
     b2e:	08 f4       	brcc	.+2      	; 0xb32 <__fixsfdi+0x8>
     b30:	90 e8       	ldi	r25, 0x80	; 128
     b32:	08 95       	ret

00000b34 <__fixunssfdi>:
     b34:	bf e3       	ldi	r27, 0x3F	; 63
     b36:	22 27       	eor	r18, r18
     b38:	33 27       	eor	r19, r19
     b3a:	a9 01       	movw	r20, r18
     b3c:	0e 94 2d 06 	call	0xc5a	; 0xc5a <__fp_splitA>
     b40:	60 f1       	brcs	.+88     	; 0xb9a <__fixunssfdi+0x66>
     b42:	9f 57       	subi	r25, 0x7F	; 127
     b44:	48 f1       	brcs	.+82     	; 0xb98 <__fixunssfdi+0x64>
     b46:	b9 17       	cp	r27, r25
     b48:	40 f1       	brcs	.+80     	; 0xb9a <__fixunssfdi+0x66>
     b4a:	bf e3       	ldi	r27, 0x3F	; 63
     b4c:	b9 1b       	sub	r27, r25
     b4e:	99 27       	eor	r25, r25
     b50:	b8 50       	subi	r27, 0x08	; 8
     b52:	3a f4       	brpl	.+14     	; 0xb62 <__fixunssfdi+0x2e>
     b54:	66 0f       	add	r22, r22
     b56:	77 1f       	adc	r23, r23
     b58:	88 1f       	adc	r24, r24
     b5a:	99 1f       	adc	r25, r25
     b5c:	b3 95       	inc	r27
     b5e:	d2 f3       	brmi	.-12     	; 0xb54 <__fixunssfdi+0x20>
     b60:	16 c0       	rjmp	.+44     	; 0xb8e <__fixunssfdi+0x5a>
     b62:	b8 50       	subi	r27, 0x08	; 8
     b64:	4a f0       	brmi	.+18     	; 0xb78 <__fixunssfdi+0x44>
     b66:	23 2f       	mov	r18, r19
     b68:	34 2f       	mov	r19, r20
     b6a:	45 2f       	mov	r20, r21
     b6c:	56 2f       	mov	r21, r22
     b6e:	67 2f       	mov	r22, r23
     b70:	78 2f       	mov	r23, r24
     b72:	88 27       	eor	r24, r24
     b74:	b8 50       	subi	r27, 0x08	; 8
     b76:	ba f7       	brpl	.-18     	; 0xb66 <__fixunssfdi+0x32>
     b78:	b8 5f       	subi	r27, 0xF8	; 248
     b7a:	49 f0       	breq	.+18     	; 0xb8e <__fixunssfdi+0x5a>
     b7c:	86 95       	lsr	r24
     b7e:	77 95       	ror	r23
     b80:	67 95       	ror	r22
     b82:	57 95       	ror	r21
     b84:	47 95       	ror	r20
     b86:	37 95       	ror	r19
     b88:	27 95       	ror	r18
     b8a:	ba 95       	dec	r27
     b8c:	b9 f7       	brne	.-18     	; 0xb7c <__fixunssfdi+0x48>
     b8e:	16 f4       	brtc	.+4      	; 0xb94 <__fixunssfdi+0x60>
     b90:	0e 94 15 06 	call	0xc2a	; 0xc2a <__fp_negdi>
     b94:	88 94       	clc
     b96:	08 95       	ret
     b98:	88 94       	clc
     b9a:	60 e0       	ldi	r22, 0x00	; 0
     b9c:	70 e0       	ldi	r23, 0x00	; 0
     b9e:	cb 01       	movw	r24, r22
     ba0:	08 95       	ret

00000ba2 <__floatdisf>:
     ba2:	97 fb       	bst	r25, 7
     ba4:	16 f4       	brtc	.+4      	; 0xbaa <__floatdisf+0x8>
     ba6:	0e 94 15 06 	call	0xc2a	; 0xc2a <__fp_negdi>
     baa:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__fp_di2sf>

00000bae <__floatundisf>:
     bae:	e8 94       	clt

00000bb0 <__fp_di2sf>:
     bb0:	f9 2f       	mov	r31, r25
     bb2:	96 eb       	ldi	r25, 0xB6	; 182
     bb4:	ff 23       	and	r31, r31
     bb6:	81 f0       	breq	.+32     	; 0xbd8 <__fp_di2sf+0x28>
     bb8:	12 16       	cp	r1, r18
     bba:	13 06       	cpc	r1, r19
     bbc:	14 06       	cpc	r1, r20
     bbe:	44 0b       	sbc	r20, r20
     bc0:	93 95       	inc	r25
     bc2:	f6 95       	lsr	r31
     bc4:	87 95       	ror	r24
     bc6:	77 95       	ror	r23
     bc8:	67 95       	ror	r22
     bca:	57 95       	ror	r21
     bcc:	40 40       	sbci	r20, 0x00	; 0
     bce:	ff 23       	and	r31, r31
     bd0:	b9 f7       	brne	.-18     	; 0xbc0 <__fp_di2sf+0x10>
     bd2:	1b c0       	rjmp	.+54     	; 0xc0a <__fp_di2sf+0x5a>
     bd4:	99 27       	eor	r25, r25
     bd6:	08 95       	ret
     bd8:	88 23       	and	r24, r24
     bda:	51 f4       	brne	.+20     	; 0xbf0 <__fp_di2sf+0x40>
     bdc:	98 50       	subi	r25, 0x08	; 8
     bde:	d2 f7       	brpl	.-12     	; 0xbd4 <__fp_di2sf+0x24>
     be0:	87 2b       	or	r24, r23
     be2:	76 2f       	mov	r23, r22
     be4:	65 2f       	mov	r22, r21
     be6:	54 2f       	mov	r21, r20
     be8:	43 2f       	mov	r20, r19
     bea:	32 2f       	mov	r19, r18
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	b1 f3       	breq	.-20     	; 0xbdc <__fp_di2sf+0x2c>
     bf0:	12 16       	cp	r1, r18
     bf2:	13 06       	cpc	r1, r19
     bf4:	14 06       	cpc	r1, r20
     bf6:	44 0b       	sbc	r20, r20
     bf8:	88 23       	and	r24, r24
     bfa:	3a f0       	brmi	.+14     	; 0xc0a <__fp_di2sf+0x5a>
     bfc:	9a 95       	dec	r25
     bfe:	44 0f       	add	r20, r20
     c00:	55 1f       	adc	r21, r21
     c02:	66 1f       	adc	r22, r22
     c04:	77 1f       	adc	r23, r23
     c06:	88 1f       	adc	r24, r24
     c08:	ca f7       	brpl	.-14     	; 0xbfc <__fp_di2sf+0x4c>
     c0a:	55 23       	and	r21, r21
     c0c:	4a f4       	brpl	.+18     	; 0xc20 <__fp_di2sf+0x70>
     c0e:	44 0f       	add	r20, r20
     c10:	55 1f       	adc	r21, r21
     c12:	11 f4       	brne	.+4      	; 0xc18 <__fp_di2sf+0x68>
     c14:	60 ff       	sbrs	r22, 0
     c16:	04 c0       	rjmp	.+8      	; 0xc20 <__fp_di2sf+0x70>
     c18:	6f 5f       	subi	r22, 0xFF	; 255
     c1a:	7f 4f       	sbci	r23, 0xFF	; 255
     c1c:	8f 4f       	sbci	r24, 0xFF	; 255
     c1e:	9f 4f       	sbci	r25, 0xFF	; 255
     c20:	88 0f       	add	r24, r24
     c22:	96 95       	lsr	r25
     c24:	87 95       	ror	r24
     c26:	97 f9       	bld	r25, 7
     c28:	08 95       	ret

00000c2a <__fp_negdi>:
     c2a:	90 95       	com	r25
     c2c:	80 95       	com	r24
     c2e:	70 95       	com	r23
     c30:	60 95       	com	r22
     c32:	50 95       	com	r21
     c34:	40 95       	com	r20
     c36:	30 95       	com	r19
     c38:	21 95       	neg	r18
     c3a:	3f 4f       	sbci	r19, 0xFF	; 255
     c3c:	4f 4f       	sbci	r20, 0xFF	; 255
     c3e:	5f 4f       	sbci	r21, 0xFF	; 255
     c40:	6f 4f       	sbci	r22, 0xFF	; 255
     c42:	7f 4f       	sbci	r23, 0xFF	; 255
     c44:	8f 4f       	sbci	r24, 0xFF	; 255
     c46:	9f 4f       	sbci	r25, 0xFF	; 255
     c48:	08 95       	ret

00000c4a <__fp_split3>:
     c4a:	57 fd       	sbrc	r21, 7
     c4c:	90 58       	subi	r25, 0x80	; 128
     c4e:	44 0f       	add	r20, r20
     c50:	55 1f       	adc	r21, r21
     c52:	59 f0       	breq	.+22     	; 0xc6a <__fp_splitA+0x10>
     c54:	5f 3f       	cpi	r21, 0xFF	; 255
     c56:	71 f0       	breq	.+28     	; 0xc74 <__fp_splitA+0x1a>
     c58:	47 95       	ror	r20

00000c5a <__fp_splitA>:
     c5a:	88 0f       	add	r24, r24
     c5c:	97 fb       	bst	r25, 7
     c5e:	99 1f       	adc	r25, r25
     c60:	61 f0       	breq	.+24     	; 0xc7a <__fp_splitA+0x20>
     c62:	9f 3f       	cpi	r25, 0xFF	; 255
     c64:	79 f0       	breq	.+30     	; 0xc84 <__fp_splitA+0x2a>
     c66:	87 95       	ror	r24
     c68:	08 95       	ret
     c6a:	12 16       	cp	r1, r18
     c6c:	13 06       	cpc	r1, r19
     c6e:	14 06       	cpc	r1, r20
     c70:	55 1f       	adc	r21, r21
     c72:	f2 cf       	rjmp	.-28     	; 0xc58 <__fp_split3+0xe>
     c74:	46 95       	lsr	r20
     c76:	f1 df       	rcall	.-30     	; 0xc5a <__fp_splitA>
     c78:	08 c0       	rjmp	.+16     	; 0xc8a <__fp_splitA+0x30>
     c7a:	16 16       	cp	r1, r22
     c7c:	17 06       	cpc	r1, r23
     c7e:	18 06       	cpc	r1, r24
     c80:	99 1f       	adc	r25, r25
     c82:	f1 cf       	rjmp	.-30     	; 0xc66 <__fp_splitA+0xc>
     c84:	86 95       	lsr	r24
     c86:	71 05       	cpc	r23, r1
     c88:	61 05       	cpc	r22, r1
     c8a:	08 94       	sec
     c8c:	08 95       	ret

00000c8e <pow>:
     c8e:	fa 01       	movw	r30, r20
     c90:	ee 0f       	add	r30, r30
     c92:	ff 1f       	adc	r31, r31
     c94:	30 96       	adiw	r30, 0x00	; 0
     c96:	21 05       	cpc	r18, r1
     c98:	31 05       	cpc	r19, r1
     c9a:	a1 f1       	breq	.+104    	; 0xd04 <pow+0x76>
     c9c:	61 15       	cp	r22, r1
     c9e:	71 05       	cpc	r23, r1
     ca0:	61 f4       	brne	.+24     	; 0xcba <pow+0x2c>
     ca2:	80 38       	cpi	r24, 0x80	; 128
     ca4:	bf e3       	ldi	r27, 0x3F	; 63
     ca6:	9b 07       	cpc	r25, r27
     ca8:	49 f1       	breq	.+82     	; 0xcfc <pow+0x6e>
     caa:	68 94       	set
     cac:	90 38       	cpi	r25, 0x80	; 128
     cae:	81 05       	cpc	r24, r1
     cb0:	61 f0       	breq	.+24     	; 0xcca <pow+0x3c>
     cb2:	80 38       	cpi	r24, 0x80	; 128
     cb4:	bf ef       	ldi	r27, 0xFF	; 255
     cb6:	9b 07       	cpc	r25, r27
     cb8:	41 f0       	breq	.+16     	; 0xcca <pow+0x3c>
     cba:	99 23       	and	r25, r25
     cbc:	4a f5       	brpl	.+82     	; 0xd10 <pow+0x82>
     cbe:	ff 3f       	cpi	r31, 0xFF	; 255
     cc0:	e1 05       	cpc	r30, r1
     cc2:	31 05       	cpc	r19, r1
     cc4:	21 05       	cpc	r18, r1
     cc6:	19 f1       	breq	.+70     	; 0xd0e <pow+0x80>
     cc8:	e8 94       	clt
     cca:	08 94       	sec
     ccc:	e7 95       	ror	r30
     cce:	d9 01       	movw	r26, r18
     cd0:	aa 23       	and	r26, r26
     cd2:	29 f4       	brne	.+10     	; 0xcde <pow+0x50>
     cd4:	ab 2f       	mov	r26, r27
     cd6:	be 2f       	mov	r27, r30
     cd8:	f8 5f       	subi	r31, 0xF8	; 248
     cda:	d0 f3       	brcs	.-12     	; 0xcd0 <pow+0x42>
     cdc:	10 c0       	rjmp	.+32     	; 0xcfe <pow+0x70>
     cde:	ff 5f       	subi	r31, 0xFF	; 255
     ce0:	70 f4       	brcc	.+28     	; 0xcfe <pow+0x70>
     ce2:	a6 95       	lsr	r26
     ce4:	e0 f7       	brcc	.-8      	; 0xcde <pow+0x50>
     ce6:	f7 39       	cpi	r31, 0x97	; 151
     ce8:	50 f0       	brcs	.+20     	; 0xcfe <pow+0x70>
     cea:	19 f0       	breq	.+6      	; 0xcf2 <pow+0x64>
     cec:	ff 3a       	cpi	r31, 0xAF	; 175
     cee:	38 f4       	brcc	.+14     	; 0xcfe <pow+0x70>
     cf0:	9f 77       	andi	r25, 0x7F	; 127
     cf2:	9f 93       	push	r25
     cf4:	0d d0       	rcall	.+26     	; 0xd10 <pow+0x82>
     cf6:	0f 90       	pop	r0
     cf8:	07 fc       	sbrc	r0, 7
     cfa:	90 58       	subi	r25, 0x80	; 128
     cfc:	08 95       	ret
     cfe:	46 f0       	brts	.+16     	; 0xd10 <pow+0x82>
     d00:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_nan>
     d04:	60 e0       	ldi	r22, 0x00	; 0
     d06:	70 e0       	ldi	r23, 0x00	; 0
     d08:	80 e8       	ldi	r24, 0x80	; 128
     d0a:	9f e3       	ldi	r25, 0x3F	; 63
     d0c:	08 95       	ret
     d0e:	4f e7       	ldi	r20, 0x7F	; 127
     d10:	9f 77       	andi	r25, 0x7F	; 127
     d12:	5f 93       	push	r21
     d14:	4f 93       	push	r20
     d16:	3f 93       	push	r19
     d18:	2f 93       	push	r18
     d1a:	0e 94 52 07 	call	0xea4	; 0xea4 <log>
     d1e:	2f 91       	pop	r18
     d20:	3f 91       	pop	r19
     d22:	4f 91       	pop	r20
     d24:	5f 91       	pop	r21
     d26:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__mulsf3>
     d2a:	0c 94 9f 06 	jmp	0xd3e	; 0xd3e <exp>
     d2e:	29 f4       	brne	.+10     	; 0xd3a <pow+0xac>
     d30:	16 f0       	brts	.+4      	; 0xd36 <pow+0xa8>
     d32:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__fp_inf>
     d36:	0c 94 01 07 	jmp	0xe02	; 0xe02 <__fp_zero>
     d3a:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_nan>

00000d3e <exp>:
     d3e:	0e 94 2d 06 	call	0xc5a	; 0xc5a <__fp_splitA>
     d42:	a8 f3       	brcs	.-22     	; 0xd2e <pow+0xa0>
     d44:	96 38       	cpi	r25, 0x86	; 134
     d46:	a0 f7       	brcc	.-24     	; 0xd30 <pow+0xa2>
     d48:	07 f8       	bld	r0, 7
     d4a:	0f 92       	push	r0
     d4c:	e8 94       	clt
     d4e:	2b e3       	ldi	r18, 0x3B	; 59
     d50:	3a ea       	ldi	r19, 0xAA	; 170
     d52:	48 eb       	ldi	r20, 0xB8	; 184
     d54:	5f e7       	ldi	r21, 0x7F	; 127
     d56:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3_pse>
     d5a:	0f 92       	push	r0
     d5c:	0f 92       	push	r0
     d5e:	0f 92       	push	r0
     d60:	4d b7       	in	r20, 0x3d	; 61
     d62:	5e b7       	in	r21, 0x3e	; 62
     d64:	0f 92       	push	r0
     d66:	0e 94 9a 07 	call	0xf34	; 0xf34 <modf>
     d6a:	e8 e6       	ldi	r30, 0x68	; 104
     d6c:	f0 e0       	ldi	r31, 0x00	; 0
     d6e:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__fp_powser>
     d72:	4f 91       	pop	r20
     d74:	5f 91       	pop	r21
     d76:	ef 91       	pop	r30
     d78:	ff 91       	pop	r31
     d7a:	e5 95       	asr	r30
     d7c:	ee 1f       	adc	r30, r30
     d7e:	ff 1f       	adc	r31, r31
     d80:	49 f0       	breq	.+18     	; 0xd94 <exp+0x56>
     d82:	fe 57       	subi	r31, 0x7E	; 126
     d84:	e0 68       	ori	r30, 0x80	; 128
     d86:	44 27       	eor	r20, r20
     d88:	ee 0f       	add	r30, r30
     d8a:	44 1f       	adc	r20, r20
     d8c:	fa 95       	dec	r31
     d8e:	e1 f7       	brne	.-8      	; 0xd88 <exp+0x4a>
     d90:	41 95       	neg	r20
     d92:	55 0b       	sbc	r21, r21
     d94:	0e 94 14 07 	call	0xe28	; 0xe28 <ldexp>
     d98:	0f 90       	pop	r0
     d9a:	07 fe       	sbrs	r0, 7
     d9c:	0c 94 08 07 	jmp	0xe10	; 0xe10 <inverse>
     da0:	08 95       	ret

00000da2 <__fp_inf>:
     da2:	97 f9       	bld	r25, 7
     da4:	9f 67       	ori	r25, 0x7F	; 127
     da6:	80 e8       	ldi	r24, 0x80	; 128
     da8:	70 e0       	ldi	r23, 0x00	; 0
     daa:	60 e0       	ldi	r22, 0x00	; 0
     dac:	08 95       	ret

00000dae <__fp_nan>:
     dae:	9f ef       	ldi	r25, 0xFF	; 255
     db0:	80 ec       	ldi	r24, 0xC0	; 192
     db2:	08 95       	ret

00000db4 <__fp_powser>:
     db4:	df 93       	push	r29
     db6:	cf 93       	push	r28
     db8:	1f 93       	push	r17
     dba:	0f 93       	push	r16
     dbc:	ff 92       	push	r15
     dbe:	ef 92       	push	r14
     dc0:	df 92       	push	r13
     dc2:	7b 01       	movw	r14, r22
     dc4:	8c 01       	movw	r16, r24
     dc6:	68 94       	set
     dc8:	06 c0       	rjmp	.+12     	; 0xdd6 <__fp_powser+0x22>
     dca:	da 2e       	mov	r13, r26
     dcc:	ef 01       	movw	r28, r30
     dce:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <__mulsf3x>
     dd2:	fe 01       	movw	r30, r28
     dd4:	e8 94       	clt
     dd6:	a5 91       	lpm	r26, Z+
     dd8:	25 91       	lpm	r18, Z+
     dda:	35 91       	lpm	r19, Z+
     ddc:	45 91       	lpm	r20, Z+
     dde:	55 91       	lpm	r21, Z+
     de0:	a6 f3       	brts	.-24     	; 0xdca <__fp_powser+0x16>
     de2:	ef 01       	movw	r28, r30
     de4:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__addsf3x>
     de8:	fe 01       	movw	r30, r28
     dea:	97 01       	movw	r18, r14
     dec:	a8 01       	movw	r20, r16
     dee:	da 94       	dec	r13
     df0:	69 f7       	brne	.-38     	; 0xdcc <__fp_powser+0x18>
     df2:	df 90       	pop	r13
     df4:	ef 90       	pop	r14
     df6:	ff 90       	pop	r15
     df8:	0f 91       	pop	r16
     dfa:	1f 91       	pop	r17
     dfc:	cf 91       	pop	r28
     dfe:	df 91       	pop	r29
     e00:	08 95       	ret

00000e02 <__fp_zero>:
     e02:	e8 94       	clt

00000e04 <__fp_szero>:
     e04:	bb 27       	eor	r27, r27
     e06:	66 27       	eor	r22, r22
     e08:	77 27       	eor	r23, r23
     e0a:	cb 01       	movw	r24, r22
     e0c:	97 f9       	bld	r25, 7
     e0e:	08 95       	ret

00000e10 <inverse>:
     e10:	9b 01       	movw	r18, r22
     e12:	ac 01       	movw	r20, r24
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	80 e8       	ldi	r24, 0x80	; 128
     e1a:	9f e3       	ldi	r25, 0x3F	; 63
     e1c:	0c 94 a8 08 	jmp	0x1150	; 0x1150 <__divsf3>
     e20:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__fp_inf>
     e24:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__fp_mpack>

00000e28 <ldexp>:
     e28:	0e 94 2d 06 	call	0xc5a	; 0xc5a <__fp_splitA>
     e2c:	d8 f3       	brcs	.-10     	; 0xe24 <inverse+0x14>
     e2e:	99 23       	and	r25, r25
     e30:	c9 f3       	breq	.-14     	; 0xe24 <inverse+0x14>
     e32:	94 0f       	add	r25, r20
     e34:	51 1d       	adc	r21, r1
     e36:	a3 f3       	brvs	.-24     	; 0xe20 <inverse+0x10>
     e38:	91 50       	subi	r25, 0x01	; 1
     e3a:	50 40       	sbci	r21, 0x00	; 0
     e3c:	94 f0       	brlt	.+36     	; 0xe62 <ldexp+0x3a>
     e3e:	59 f0       	breq	.+22     	; 0xe56 <ldexp+0x2e>
     e40:	88 23       	and	r24, r24
     e42:	32 f0       	brmi	.+12     	; 0xe50 <ldexp+0x28>
     e44:	66 0f       	add	r22, r22
     e46:	77 1f       	adc	r23, r23
     e48:	88 1f       	adc	r24, r24
     e4a:	91 50       	subi	r25, 0x01	; 1
     e4c:	50 40       	sbci	r21, 0x00	; 0
     e4e:	c1 f7       	brne	.-16     	; 0xe40 <ldexp+0x18>
     e50:	9e 3f       	cpi	r25, 0xFE	; 254
     e52:	51 05       	cpc	r21, r1
     e54:	2c f7       	brge	.-54     	; 0xe20 <inverse+0x10>
     e56:	88 0f       	add	r24, r24
     e58:	91 1d       	adc	r25, r1
     e5a:	96 95       	lsr	r25
     e5c:	87 95       	ror	r24
     e5e:	97 f9       	bld	r25, 7
     e60:	08 95       	ret
     e62:	5f 3f       	cpi	r21, 0xFF	; 255
     e64:	ac f0       	brlt	.+42     	; 0xe90 <ldexp+0x68>
     e66:	98 3e       	cpi	r25, 0xE8	; 232
     e68:	9c f0       	brlt	.+38     	; 0xe90 <ldexp+0x68>
     e6a:	bb 27       	eor	r27, r27
     e6c:	86 95       	lsr	r24
     e6e:	77 95       	ror	r23
     e70:	67 95       	ror	r22
     e72:	b7 95       	ror	r27
     e74:	08 f4       	brcc	.+2      	; 0xe78 <ldexp+0x50>
     e76:	b1 60       	ori	r27, 0x01	; 1
     e78:	93 95       	inc	r25
     e7a:	c1 f7       	brne	.-16     	; 0xe6c <ldexp+0x44>
     e7c:	bb 0f       	add	r27, r27
     e7e:	58 f7       	brcc	.-42     	; 0xe56 <ldexp+0x2e>
     e80:	11 f4       	brne	.+4      	; 0xe86 <ldexp+0x5e>
     e82:	60 ff       	sbrs	r22, 0
     e84:	e8 cf       	rjmp	.-48     	; 0xe56 <ldexp+0x2e>
     e86:	6f 5f       	subi	r22, 0xFF	; 255
     e88:	7f 4f       	sbci	r23, 0xFF	; 255
     e8a:	8f 4f       	sbci	r24, 0xFF	; 255
     e8c:	9f 4f       	sbci	r25, 0xFF	; 255
     e8e:	e3 cf       	rjmp	.-58     	; 0xe56 <ldexp+0x2e>
     e90:	0c 94 02 07 	jmp	0xe04	; 0xe04 <__fp_szero>
     e94:	16 f0       	brts	.+4      	; 0xe9a <ldexp+0x72>
     e96:	0c 94 57 09 	jmp	0x12ae	; 0x12ae <__fp_mpack>
     e9a:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_nan>
     e9e:	68 94       	set
     ea0:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__fp_inf>

00000ea4 <log>:
     ea4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <__fp_splitA>
     ea8:	a8 f3       	brcs	.-22     	; 0xe94 <ldexp+0x6c>
     eaa:	99 23       	and	r25, r25
     eac:	c1 f3       	breq	.-16     	; 0xe9e <ldexp+0x76>
     eae:	ae f3       	brts	.-22     	; 0xe9a <ldexp+0x72>
     eb0:	df 93       	push	r29
     eb2:	cf 93       	push	r28
     eb4:	1f 93       	push	r17
     eb6:	0f 93       	push	r16
     eb8:	ff 92       	push	r15
     eba:	c9 2f       	mov	r28, r25
     ebc:	dd 27       	eor	r29, r29
     ebe:	88 23       	and	r24, r24
     ec0:	2a f0       	brmi	.+10     	; 0xecc <log+0x28>
     ec2:	21 97       	sbiw	r28, 0x01	; 1
     ec4:	66 0f       	add	r22, r22
     ec6:	77 1f       	adc	r23, r23
     ec8:	88 1f       	adc	r24, r24
     eca:	da f7       	brpl	.-10     	; 0xec2 <log+0x1e>
     ecc:	20 e0       	ldi	r18, 0x00	; 0
     ece:	30 e0       	ldi	r19, 0x00	; 0
     ed0:	40 e8       	ldi	r20, 0x80	; 128
     ed2:	5f eb       	ldi	r21, 0xBF	; 191
     ed4:	9f e3       	ldi	r25, 0x3F	; 63
     ed6:	88 39       	cpi	r24, 0x98	; 152
     ed8:	20 f0       	brcs	.+8      	; 0xee2 <log+0x3e>
     eda:	80 3e       	cpi	r24, 0xE0	; 224
     edc:	38 f0       	brcs	.+14     	; 0xeec <log+0x48>
     ede:	21 96       	adiw	r28, 0x01	; 1
     ee0:	8f 77       	andi	r24, 0x7F	; 127
     ee2:	0e 94 3c 08 	call	0x1078	; 0x1078 <__addsf3>
     ee6:	e0 e9       	ldi	r30, 0x90	; 144
     ee8:	f0 e0       	ldi	r31, 0x00	; 0
     eea:	04 c0       	rjmp	.+8      	; 0xef4 <log+0x50>
     eec:	0e 94 3c 08 	call	0x1078	; 0x1078 <__addsf3>
     ef0:	ed eb       	ldi	r30, 0xBD	; 189
     ef2:	f0 e0       	ldi	r31, 0x00	; 0
     ef4:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__fp_powser>
     ef8:	8b 01       	movw	r16, r22
     efa:	be 01       	movw	r22, r28
     efc:	ec 01       	movw	r28, r24
     efe:	fb 2e       	mov	r15, r27
     f00:	6f 57       	subi	r22, 0x7F	; 127
     f02:	71 09       	sbc	r23, r1
     f04:	75 95       	asr	r23
     f06:	77 1f       	adc	r23, r23
     f08:	88 0b       	sbc	r24, r24
     f0a:	99 0b       	sbc	r25, r25
     f0c:	0e 94 1c 09 	call	0x1238	; 0x1238 <__floatsisf>
     f10:	28 e1       	ldi	r18, 0x18	; 24
     f12:	32 e7       	ldi	r19, 0x72	; 114
     f14:	41 e3       	ldi	r20, 0x31	; 49
     f16:	5f e3       	ldi	r21, 0x3F	; 63
     f18:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <__mulsf3x>
     f1c:	af 2d       	mov	r26, r15
     f1e:	98 01       	movw	r18, r16
     f20:	ae 01       	movw	r20, r28
     f22:	ff 90       	pop	r15
     f24:	0f 91       	pop	r16
     f26:	1f 91       	pop	r17
     f28:	cf 91       	pop	r28
     f2a:	df 91       	pop	r29
     f2c:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__addsf3x>
     f30:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <__fp_round>

00000f34 <modf>:
     f34:	fa 01       	movw	r30, r20
     f36:	dc 01       	movw	r26, r24
     f38:	aa 0f       	add	r26, r26
     f3a:	bb 1f       	adc	r27, r27
     f3c:	9b 01       	movw	r18, r22
     f3e:	ac 01       	movw	r20, r24
     f40:	bf 57       	subi	r27, 0x7F	; 127
     f42:	28 f4       	brcc	.+10     	; 0xf4e <modf+0x1a>
     f44:	22 27       	eor	r18, r18
     f46:	33 27       	eor	r19, r19
     f48:	44 27       	eor	r20, r20
     f4a:	50 78       	andi	r21, 0x80	; 128
     f4c:	20 c0       	rjmp	.+64     	; 0xf8e <modf+0x5a>
     f4e:	b7 51       	subi	r27, 0x17	; 23
     f50:	90 f4       	brcc	.+36     	; 0xf76 <modf+0x42>
     f52:	ab 2f       	mov	r26, r27
     f54:	00 24       	eor	r0, r0
     f56:	46 95       	lsr	r20
     f58:	37 95       	ror	r19
     f5a:	27 95       	ror	r18
     f5c:	01 1c       	adc	r0, r1
     f5e:	a3 95       	inc	r26
     f60:	d2 f3       	brmi	.-12     	; 0xf56 <modf+0x22>
     f62:	00 20       	and	r0, r0
     f64:	71 f0       	breq	.+28     	; 0xf82 <modf+0x4e>
     f66:	22 0f       	add	r18, r18
     f68:	33 1f       	adc	r19, r19
     f6a:	44 1f       	adc	r20, r20
     f6c:	b3 95       	inc	r27
     f6e:	da f3       	brmi	.-10     	; 0xf66 <modf+0x32>
     f70:	0e d0       	rcall	.+28     	; 0xf8e <modf+0x5a>
     f72:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__subsf3>
     f76:	61 30       	cpi	r22, 0x01	; 1
     f78:	71 05       	cpc	r23, r1
     f7a:	a0 e8       	ldi	r26, 0x80	; 128
     f7c:	8a 07       	cpc	r24, r26
     f7e:	b9 46       	sbci	r27, 0x69	; 105
     f80:	30 f4       	brcc	.+12     	; 0xf8e <modf+0x5a>
     f82:	9b 01       	movw	r18, r22
     f84:	ac 01       	movw	r20, r24
     f86:	66 27       	eor	r22, r22
     f88:	77 27       	eor	r23, r23
     f8a:	88 27       	eor	r24, r24
     f8c:	90 78       	andi	r25, 0x80	; 128
     f8e:	30 96       	adiw	r30, 0x00	; 0
     f90:	21 f0       	breq	.+8      	; 0xf9a <modf+0x66>
     f92:	20 83       	st	Z, r18
     f94:	31 83       	std	Z+1, r19	; 0x01
     f96:	42 83       	std	Z+2, r20	; 0x02
     f98:	53 83       	std	Z+3, r21	; 0x03
     f9a:	08 95       	ret

00000f9c <__mulsf3>:
     f9c:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <__mulsf3x>
     fa0:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <__fp_round>
     fa4:	0e 94 65 09 	call	0x12ca	; 0x12ca <__fp_pscA>
     fa8:	38 f0       	brcs	.+14     	; 0xfb8 <__mulsf3+0x1c>
     faa:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__fp_pscB>
     fae:	20 f0       	brcs	.+8      	; 0xfb8 <__mulsf3+0x1c>
     fb0:	95 23       	and	r25, r21
     fb2:	11 f0       	breq	.+4      	; 0xfb8 <__mulsf3+0x1c>
     fb4:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__fp_inf>
     fb8:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_nan>
     fbc:	11 24       	eor	r1, r1
     fbe:	0c 94 02 07 	jmp	0xe04	; 0xe04 <__fp_szero>

00000fc2 <__mulsf3x>:
     fc2:	0e 94 25 06 	call	0xc4a	; 0xc4a <__fp_split3>
     fc6:	70 f3       	brcs	.-36     	; 0xfa4 <__mulsf3+0x8>

00000fc8 <__mulsf3_pse>:
     fc8:	95 9f       	mul	r25, r21
     fca:	c1 f3       	breq	.-16     	; 0xfbc <__mulsf3+0x20>
     fcc:	95 0f       	add	r25, r21
     fce:	50 e0       	ldi	r21, 0x00	; 0
     fd0:	55 1f       	adc	r21, r21
     fd2:	62 9f       	mul	r22, r18
     fd4:	f0 01       	movw	r30, r0
     fd6:	72 9f       	mul	r23, r18
     fd8:	bb 27       	eor	r27, r27
     fda:	f0 0d       	add	r31, r0
     fdc:	b1 1d       	adc	r27, r1
     fde:	63 9f       	mul	r22, r19
     fe0:	aa 27       	eor	r26, r26
     fe2:	f0 0d       	add	r31, r0
     fe4:	b1 1d       	adc	r27, r1
     fe6:	aa 1f       	adc	r26, r26
     fe8:	64 9f       	mul	r22, r20
     fea:	66 27       	eor	r22, r22
     fec:	b0 0d       	add	r27, r0
     fee:	a1 1d       	adc	r26, r1
     ff0:	66 1f       	adc	r22, r22
     ff2:	82 9f       	mul	r24, r18
     ff4:	22 27       	eor	r18, r18
     ff6:	b0 0d       	add	r27, r0
     ff8:	a1 1d       	adc	r26, r1
     ffa:	62 1f       	adc	r22, r18
     ffc:	73 9f       	mul	r23, r19
     ffe:	b0 0d       	add	r27, r0
    1000:	a1 1d       	adc	r26, r1
    1002:	62 1f       	adc	r22, r18
    1004:	83 9f       	mul	r24, r19
    1006:	a0 0d       	add	r26, r0
    1008:	61 1d       	adc	r22, r1
    100a:	22 1f       	adc	r18, r18
    100c:	74 9f       	mul	r23, r20
    100e:	33 27       	eor	r19, r19
    1010:	a0 0d       	add	r26, r0
    1012:	61 1d       	adc	r22, r1
    1014:	23 1f       	adc	r18, r19
    1016:	84 9f       	mul	r24, r20
    1018:	60 0d       	add	r22, r0
    101a:	21 1d       	adc	r18, r1
    101c:	82 2f       	mov	r24, r18
    101e:	76 2f       	mov	r23, r22
    1020:	6a 2f       	mov	r22, r26
    1022:	11 24       	eor	r1, r1
    1024:	9f 57       	subi	r25, 0x7F	; 127
    1026:	50 40       	sbci	r21, 0x00	; 0
    1028:	9a f0       	brmi	.+38     	; 0x1050 <__mulsf3_pse+0x88>
    102a:	f1 f0       	breq	.+60     	; 0x1068 <__mulsf3_pse+0xa0>
    102c:	88 23       	and	r24, r24
    102e:	4a f0       	brmi	.+18     	; 0x1042 <__mulsf3_pse+0x7a>
    1030:	ee 0f       	add	r30, r30
    1032:	ff 1f       	adc	r31, r31
    1034:	bb 1f       	adc	r27, r27
    1036:	66 1f       	adc	r22, r22
    1038:	77 1f       	adc	r23, r23
    103a:	88 1f       	adc	r24, r24
    103c:	91 50       	subi	r25, 0x01	; 1
    103e:	50 40       	sbci	r21, 0x00	; 0
    1040:	a9 f7       	brne	.-22     	; 0x102c <__mulsf3_pse+0x64>
    1042:	9e 3f       	cpi	r25, 0xFE	; 254
    1044:	51 05       	cpc	r21, r1
    1046:	80 f0       	brcs	.+32     	; 0x1068 <__mulsf3_pse+0xa0>
    1048:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__fp_inf>
    104c:	0c 94 02 07 	jmp	0xe04	; 0xe04 <__fp_szero>
    1050:	5f 3f       	cpi	r21, 0xFF	; 255
    1052:	e4 f3       	brlt	.-8      	; 0x104c <__mulsf3_pse+0x84>
    1054:	98 3e       	cpi	r25, 0xE8	; 232
    1056:	d4 f3       	brlt	.-12     	; 0x104c <__mulsf3_pse+0x84>
    1058:	86 95       	lsr	r24
    105a:	77 95       	ror	r23
    105c:	67 95       	ror	r22
    105e:	b7 95       	ror	r27
    1060:	f7 95       	ror	r31
    1062:	e7 95       	ror	r30
    1064:	9f 5f       	subi	r25, 0xFF	; 255
    1066:	c1 f7       	brne	.-16     	; 0x1058 <__mulsf3_pse+0x90>
    1068:	fe 2b       	or	r31, r30
    106a:	88 0f       	add	r24, r24
    106c:	91 1d       	adc	r25, r1
    106e:	96 95       	lsr	r25
    1070:	87 95       	ror	r24
    1072:	97 f9       	bld	r25, 7
    1074:	08 95       	ret

00001076 <__subsf3>:
    1076:	50 58       	subi	r21, 0x80	; 128

00001078 <__addsf3>:
    1078:	bb 27       	eor	r27, r27
    107a:	aa 27       	eor	r26, r26
    107c:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__addsf3x>
    1080:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <__fp_round>
    1084:	0e 94 65 09 	call	0x12ca	; 0x12ca <__fp_pscA>
    1088:	38 f0       	brcs	.+14     	; 0x1098 <__addsf3+0x20>
    108a:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__fp_pscB>
    108e:	20 f0       	brcs	.+8      	; 0x1098 <__addsf3+0x20>
    1090:	39 f4       	brne	.+14     	; 0x10a0 <__addsf3+0x28>
    1092:	9f 3f       	cpi	r25, 0xFF	; 255
    1094:	19 f4       	brne	.+6      	; 0x109c <__addsf3+0x24>
    1096:	26 f4       	brtc	.+8      	; 0x10a0 <__addsf3+0x28>
    1098:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_nan>
    109c:	0e f4       	brtc	.+2      	; 0x10a0 <__addsf3+0x28>
    109e:	e0 95       	com	r30
    10a0:	e7 fb       	bst	r30, 7
    10a2:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__fp_inf>

000010a6 <__addsf3x>:
    10a6:	e9 2f       	mov	r30, r25
    10a8:	0e 94 25 06 	call	0xc4a	; 0xc4a <__fp_split3>
    10ac:	58 f3       	brcs	.-42     	; 0x1084 <__addsf3+0xc>
    10ae:	ba 17       	cp	r27, r26
    10b0:	62 07       	cpc	r22, r18
    10b2:	73 07       	cpc	r23, r19
    10b4:	84 07       	cpc	r24, r20
    10b6:	95 07       	cpc	r25, r21
    10b8:	20 f0       	brcs	.+8      	; 0x10c2 <__addsf3x+0x1c>
    10ba:	79 f4       	brne	.+30     	; 0x10da <__addsf3x+0x34>
    10bc:	a6 f5       	brtc	.+104    	; 0x1126 <__addsf3x+0x80>
    10be:	0c 94 01 07 	jmp	0xe02	; 0xe02 <__fp_zero>
    10c2:	0e f4       	brtc	.+2      	; 0x10c6 <__addsf3x+0x20>
    10c4:	e0 95       	com	r30
    10c6:	0b 2e       	mov	r0, r27
    10c8:	ba 2f       	mov	r27, r26
    10ca:	a0 2d       	mov	r26, r0
    10cc:	0b 01       	movw	r0, r22
    10ce:	b9 01       	movw	r22, r18
    10d0:	90 01       	movw	r18, r0
    10d2:	0c 01       	movw	r0, r24
    10d4:	ca 01       	movw	r24, r20
    10d6:	a0 01       	movw	r20, r0
    10d8:	11 24       	eor	r1, r1
    10da:	ff 27       	eor	r31, r31
    10dc:	59 1b       	sub	r21, r25
    10de:	99 f0       	breq	.+38     	; 0x1106 <__addsf3x+0x60>
    10e0:	59 3f       	cpi	r21, 0xF9	; 249
    10e2:	50 f4       	brcc	.+20     	; 0x10f8 <__addsf3x+0x52>
    10e4:	50 3e       	cpi	r21, 0xE0	; 224
    10e6:	68 f1       	brcs	.+90     	; 0x1142 <__addsf3x+0x9c>
    10e8:	1a 16       	cp	r1, r26
    10ea:	f0 40       	sbci	r31, 0x00	; 0
    10ec:	a2 2f       	mov	r26, r18
    10ee:	23 2f       	mov	r18, r19
    10f0:	34 2f       	mov	r19, r20
    10f2:	44 27       	eor	r20, r20
    10f4:	58 5f       	subi	r21, 0xF8	; 248
    10f6:	f3 cf       	rjmp	.-26     	; 0x10de <__addsf3x+0x38>
    10f8:	46 95       	lsr	r20
    10fa:	37 95       	ror	r19
    10fc:	27 95       	ror	r18
    10fe:	a7 95       	ror	r26
    1100:	f0 40       	sbci	r31, 0x00	; 0
    1102:	53 95       	inc	r21
    1104:	c9 f7       	brne	.-14     	; 0x10f8 <__addsf3x+0x52>
    1106:	7e f4       	brtc	.+30     	; 0x1126 <__addsf3x+0x80>
    1108:	1f 16       	cp	r1, r31
    110a:	ba 0b       	sbc	r27, r26
    110c:	62 0b       	sbc	r22, r18
    110e:	73 0b       	sbc	r23, r19
    1110:	84 0b       	sbc	r24, r20
    1112:	ba f0       	brmi	.+46     	; 0x1142 <__addsf3x+0x9c>
    1114:	91 50       	subi	r25, 0x01	; 1
    1116:	a1 f0       	breq	.+40     	; 0x1140 <__addsf3x+0x9a>
    1118:	ff 0f       	add	r31, r31
    111a:	bb 1f       	adc	r27, r27
    111c:	66 1f       	adc	r22, r22
    111e:	77 1f       	adc	r23, r23
    1120:	88 1f       	adc	r24, r24
    1122:	c2 f7       	brpl	.-16     	; 0x1114 <__addsf3x+0x6e>
    1124:	0e c0       	rjmp	.+28     	; 0x1142 <__addsf3x+0x9c>
    1126:	ba 0f       	add	r27, r26
    1128:	62 1f       	adc	r22, r18
    112a:	73 1f       	adc	r23, r19
    112c:	84 1f       	adc	r24, r20
    112e:	48 f4       	brcc	.+18     	; 0x1142 <__addsf3x+0x9c>
    1130:	87 95       	ror	r24
    1132:	77 95       	ror	r23
    1134:	67 95       	ror	r22
    1136:	b7 95       	ror	r27
    1138:	f7 95       	ror	r31
    113a:	9e 3f       	cpi	r25, 0xFE	; 254
    113c:	08 f0       	brcs	.+2      	; 0x1140 <__addsf3x+0x9a>
    113e:	b0 cf       	rjmp	.-160    	; 0x10a0 <__addsf3+0x28>
    1140:	93 95       	inc	r25
    1142:	88 0f       	add	r24, r24
    1144:	08 f0       	brcs	.+2      	; 0x1148 <__addsf3x+0xa2>
    1146:	99 27       	eor	r25, r25
    1148:	ee 0f       	add	r30, r30
    114a:	97 95       	ror	r25
    114c:	87 95       	ror	r24
    114e:	08 95       	ret

00001150 <__divsf3>:
    1150:	0e 94 bc 08 	call	0x1178	; 0x1178 <__divsf3x>
    1154:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <__fp_round>
    1158:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__fp_pscB>
    115c:	58 f0       	brcs	.+22     	; 0x1174 <__divsf3+0x24>
    115e:	0e 94 65 09 	call	0x12ca	; 0x12ca <__fp_pscA>
    1162:	40 f0       	brcs	.+16     	; 0x1174 <__divsf3+0x24>
    1164:	29 f4       	brne	.+10     	; 0x1170 <__divsf3+0x20>
    1166:	5f 3f       	cpi	r21, 0xFF	; 255
    1168:	29 f0       	breq	.+10     	; 0x1174 <__divsf3+0x24>
    116a:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__fp_inf>
    116e:	51 11       	cpse	r21, r1
    1170:	0c 94 02 07 	jmp	0xe04	; 0xe04 <__fp_szero>
    1174:	0c 94 d7 06 	jmp	0xdae	; 0xdae <__fp_nan>

00001178 <__divsf3x>:
    1178:	0e 94 25 06 	call	0xc4a	; 0xc4a <__fp_split3>
    117c:	68 f3       	brcs	.-38     	; 0x1158 <__divsf3+0x8>

0000117e <__divsf3_pse>:
    117e:	99 23       	and	r25, r25
    1180:	b1 f3       	breq	.-20     	; 0x116e <__divsf3+0x1e>
    1182:	55 23       	and	r21, r21
    1184:	91 f3       	breq	.-28     	; 0x116a <__divsf3+0x1a>
    1186:	95 1b       	sub	r25, r21
    1188:	55 0b       	sbc	r21, r21
    118a:	bb 27       	eor	r27, r27
    118c:	aa 27       	eor	r26, r26
    118e:	62 17       	cp	r22, r18
    1190:	73 07       	cpc	r23, r19
    1192:	84 07       	cpc	r24, r20
    1194:	38 f0       	brcs	.+14     	; 0x11a4 <__divsf3_pse+0x26>
    1196:	9f 5f       	subi	r25, 0xFF	; 255
    1198:	5f 4f       	sbci	r21, 0xFF	; 255
    119a:	22 0f       	add	r18, r18
    119c:	33 1f       	adc	r19, r19
    119e:	44 1f       	adc	r20, r20
    11a0:	aa 1f       	adc	r26, r26
    11a2:	a9 f3       	breq	.-22     	; 0x118e <__divsf3_pse+0x10>
    11a4:	35 d0       	rcall	.+106    	; 0x1210 <__divsf3_pse+0x92>
    11a6:	0e 2e       	mov	r0, r30
    11a8:	3a f0       	brmi	.+14     	; 0x11b8 <__divsf3_pse+0x3a>
    11aa:	e0 e8       	ldi	r30, 0x80	; 128
    11ac:	32 d0       	rcall	.+100    	; 0x1212 <__divsf3_pse+0x94>
    11ae:	91 50       	subi	r25, 0x01	; 1
    11b0:	50 40       	sbci	r21, 0x00	; 0
    11b2:	e6 95       	lsr	r30
    11b4:	00 1c       	adc	r0, r0
    11b6:	ca f7       	brpl	.-14     	; 0x11aa <__divsf3_pse+0x2c>
    11b8:	2b d0       	rcall	.+86     	; 0x1210 <__divsf3_pse+0x92>
    11ba:	fe 2f       	mov	r31, r30
    11bc:	29 d0       	rcall	.+82     	; 0x1210 <__divsf3_pse+0x92>
    11be:	66 0f       	add	r22, r22
    11c0:	77 1f       	adc	r23, r23
    11c2:	88 1f       	adc	r24, r24
    11c4:	bb 1f       	adc	r27, r27
    11c6:	26 17       	cp	r18, r22
    11c8:	37 07       	cpc	r19, r23
    11ca:	48 07       	cpc	r20, r24
    11cc:	ab 07       	cpc	r26, r27
    11ce:	b0 e8       	ldi	r27, 0x80	; 128
    11d0:	09 f0       	breq	.+2      	; 0x11d4 <__divsf3_pse+0x56>
    11d2:	bb 0b       	sbc	r27, r27
    11d4:	80 2d       	mov	r24, r0
    11d6:	bf 01       	movw	r22, r30
    11d8:	ff 27       	eor	r31, r31
    11da:	93 58       	subi	r25, 0x83	; 131
    11dc:	5f 4f       	sbci	r21, 0xFF	; 255
    11de:	3a f0       	brmi	.+14     	; 0x11ee <__divsf3_pse+0x70>
    11e0:	9e 3f       	cpi	r25, 0xFE	; 254
    11e2:	51 05       	cpc	r21, r1
    11e4:	78 f0       	brcs	.+30     	; 0x1204 <__divsf3_pse+0x86>
    11e6:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__fp_inf>
    11ea:	0c 94 02 07 	jmp	0xe04	; 0xe04 <__fp_szero>
    11ee:	5f 3f       	cpi	r21, 0xFF	; 255
    11f0:	e4 f3       	brlt	.-8      	; 0x11ea <__divsf3_pse+0x6c>
    11f2:	98 3e       	cpi	r25, 0xE8	; 232
    11f4:	d4 f3       	brlt	.-12     	; 0x11ea <__divsf3_pse+0x6c>
    11f6:	86 95       	lsr	r24
    11f8:	77 95       	ror	r23
    11fa:	67 95       	ror	r22
    11fc:	b7 95       	ror	r27
    11fe:	f7 95       	ror	r31
    1200:	9f 5f       	subi	r25, 0xFF	; 255
    1202:	c9 f7       	brne	.-14     	; 0x11f6 <__divsf3_pse+0x78>
    1204:	88 0f       	add	r24, r24
    1206:	91 1d       	adc	r25, r1
    1208:	96 95       	lsr	r25
    120a:	87 95       	ror	r24
    120c:	97 f9       	bld	r25, 7
    120e:	08 95       	ret
    1210:	e1 e0       	ldi	r30, 0x01	; 1
    1212:	66 0f       	add	r22, r22
    1214:	77 1f       	adc	r23, r23
    1216:	88 1f       	adc	r24, r24
    1218:	bb 1f       	adc	r27, r27
    121a:	62 17       	cp	r22, r18
    121c:	73 07       	cpc	r23, r19
    121e:	84 07       	cpc	r24, r20
    1220:	ba 07       	cpc	r27, r26
    1222:	20 f0       	brcs	.+8      	; 0x122c <__divsf3_pse+0xae>
    1224:	62 1b       	sub	r22, r18
    1226:	73 0b       	sbc	r23, r19
    1228:	84 0b       	sbc	r24, r20
    122a:	ba 0b       	sbc	r27, r26
    122c:	ee 1f       	adc	r30, r30
    122e:	88 f7       	brcc	.-30     	; 0x1212 <__divsf3_pse+0x94>
    1230:	e0 95       	com	r30
    1232:	08 95       	ret

00001234 <__floatunsisf>:
    1234:	e8 94       	clt
    1236:	09 c0       	rjmp	.+18     	; 0x124a <__floatsisf+0x12>

00001238 <__floatsisf>:
    1238:	97 fb       	bst	r25, 7
    123a:	3e f4       	brtc	.+14     	; 0x124a <__floatsisf+0x12>
    123c:	90 95       	com	r25
    123e:	80 95       	com	r24
    1240:	70 95       	com	r23
    1242:	61 95       	neg	r22
    1244:	7f 4f       	sbci	r23, 0xFF	; 255
    1246:	8f 4f       	sbci	r24, 0xFF	; 255
    1248:	9f 4f       	sbci	r25, 0xFF	; 255
    124a:	99 23       	and	r25, r25
    124c:	a9 f0       	breq	.+42     	; 0x1278 <__floatsisf+0x40>
    124e:	f9 2f       	mov	r31, r25
    1250:	96 e9       	ldi	r25, 0x96	; 150
    1252:	bb 27       	eor	r27, r27
    1254:	93 95       	inc	r25
    1256:	f6 95       	lsr	r31
    1258:	87 95       	ror	r24
    125a:	77 95       	ror	r23
    125c:	67 95       	ror	r22
    125e:	b7 95       	ror	r27
    1260:	f1 11       	cpse	r31, r1
    1262:	f8 cf       	rjmp	.-16     	; 0x1254 <__floatsisf+0x1c>
    1264:	fa f4       	brpl	.+62     	; 0x12a4 <__floatsisf+0x6c>
    1266:	bb 0f       	add	r27, r27
    1268:	11 f4       	brne	.+4      	; 0x126e <__floatsisf+0x36>
    126a:	60 ff       	sbrs	r22, 0
    126c:	1b c0       	rjmp	.+54     	; 0x12a4 <__floatsisf+0x6c>
    126e:	6f 5f       	subi	r22, 0xFF	; 255
    1270:	7f 4f       	sbci	r23, 0xFF	; 255
    1272:	8f 4f       	sbci	r24, 0xFF	; 255
    1274:	9f 4f       	sbci	r25, 0xFF	; 255
    1276:	16 c0       	rjmp	.+44     	; 0x12a4 <__floatsisf+0x6c>
    1278:	88 23       	and	r24, r24
    127a:	11 f0       	breq	.+4      	; 0x1280 <__floatsisf+0x48>
    127c:	96 e9       	ldi	r25, 0x96	; 150
    127e:	11 c0       	rjmp	.+34     	; 0x12a2 <__floatsisf+0x6a>
    1280:	77 23       	and	r23, r23
    1282:	21 f0       	breq	.+8      	; 0x128c <__floatsisf+0x54>
    1284:	9e e8       	ldi	r25, 0x8E	; 142
    1286:	87 2f       	mov	r24, r23
    1288:	76 2f       	mov	r23, r22
    128a:	05 c0       	rjmp	.+10     	; 0x1296 <__floatsisf+0x5e>
    128c:	66 23       	and	r22, r22
    128e:	71 f0       	breq	.+28     	; 0x12ac <__floatsisf+0x74>
    1290:	96 e8       	ldi	r25, 0x86	; 134
    1292:	86 2f       	mov	r24, r22
    1294:	70 e0       	ldi	r23, 0x00	; 0
    1296:	60 e0       	ldi	r22, 0x00	; 0
    1298:	2a f0       	brmi	.+10     	; 0x12a4 <__floatsisf+0x6c>
    129a:	9a 95       	dec	r25
    129c:	66 0f       	add	r22, r22
    129e:	77 1f       	adc	r23, r23
    12a0:	88 1f       	adc	r24, r24
    12a2:	da f7       	brpl	.-10     	; 0x129a <__floatsisf+0x62>
    12a4:	88 0f       	add	r24, r24
    12a6:	96 95       	lsr	r25
    12a8:	87 95       	ror	r24
    12aa:	97 f9       	bld	r25, 7
    12ac:	08 95       	ret

000012ae <__fp_mpack>:
    12ae:	9f 3f       	cpi	r25, 0xFF	; 255
    12b0:	31 f0       	breq	.+12     	; 0x12be <__fp_mpack_finite+0xc>

000012b2 <__fp_mpack_finite>:
    12b2:	91 50       	subi	r25, 0x01	; 1
    12b4:	20 f4       	brcc	.+8      	; 0x12be <__fp_mpack_finite+0xc>
    12b6:	87 95       	ror	r24
    12b8:	77 95       	ror	r23
    12ba:	67 95       	ror	r22
    12bc:	b7 95       	ror	r27
    12be:	88 0f       	add	r24, r24
    12c0:	91 1d       	adc	r25, r1
    12c2:	96 95       	lsr	r25
    12c4:	87 95       	ror	r24
    12c6:	97 f9       	bld	r25, 7
    12c8:	08 95       	ret

000012ca <__fp_pscA>:
    12ca:	00 24       	eor	r0, r0
    12cc:	0a 94       	dec	r0
    12ce:	16 16       	cp	r1, r22
    12d0:	17 06       	cpc	r1, r23
    12d2:	18 06       	cpc	r1, r24
    12d4:	09 06       	cpc	r0, r25
    12d6:	08 95       	ret

000012d8 <__fp_pscB>:
    12d8:	00 24       	eor	r0, r0
    12da:	0a 94       	dec	r0
    12dc:	12 16       	cp	r1, r18
    12de:	13 06       	cpc	r1, r19
    12e0:	14 06       	cpc	r1, r20
    12e2:	05 06       	cpc	r0, r21
    12e4:	08 95       	ret

000012e6 <__fp_round>:
    12e6:	09 2e       	mov	r0, r25
    12e8:	03 94       	inc	r0
    12ea:	00 0c       	add	r0, r0
    12ec:	11 f4       	brne	.+4      	; 0x12f2 <__fp_round+0xc>
    12ee:	88 23       	and	r24, r24
    12f0:	52 f0       	brmi	.+20     	; 0x1306 <__fp_round+0x20>
    12f2:	bb 0f       	add	r27, r27
    12f4:	40 f4       	brcc	.+16     	; 0x1306 <__fp_round+0x20>
    12f6:	bf 2b       	or	r27, r31
    12f8:	11 f4       	brne	.+4      	; 0x12fe <__fp_round+0x18>
    12fa:	60 ff       	sbrs	r22, 0
    12fc:	04 c0       	rjmp	.+8      	; 0x1306 <__fp_round+0x20>
    12fe:	6f 5f       	subi	r22, 0xFF	; 255
    1300:	7f 4f       	sbci	r23, 0xFF	; 255
    1302:	8f 4f       	sbci	r24, 0xFF	; 255
    1304:	9f 4f       	sbci	r25, 0xFF	; 255
    1306:	08 95       	ret

00001308 <__muldi3>:
    1308:	df 93       	push	r29
    130a:	cf 93       	push	r28
    130c:	1f 93       	push	r17
    130e:	0f 93       	push	r16
    1310:	9a 9d       	mul	r25, r10
    1312:	f0 2d       	mov	r31, r0
    1314:	21 9f       	mul	r18, r17
    1316:	f0 0d       	add	r31, r0
    1318:	8b 9d       	mul	r24, r11
    131a:	f0 0d       	add	r31, r0
    131c:	8a 9d       	mul	r24, r10
    131e:	e0 2d       	mov	r30, r0
    1320:	f1 0d       	add	r31, r1
    1322:	03 9f       	mul	r16, r19
    1324:	f0 0d       	add	r31, r0
    1326:	02 9f       	mul	r16, r18
    1328:	e0 0d       	add	r30, r0
    132a:	f1 1d       	adc	r31, r1
    132c:	4e 9d       	mul	r20, r14
    132e:	e0 0d       	add	r30, r0
    1330:	f1 1d       	adc	r31, r1
    1332:	5e 9d       	mul	r21, r14
    1334:	f0 0d       	add	r31, r0
    1336:	4f 9d       	mul	r20, r15
    1338:	f0 0d       	add	r31, r0
    133a:	7f 93       	push	r23
    133c:	6f 93       	push	r22
    133e:	bf 92       	push	r11
    1340:	af 92       	push	r10
    1342:	5f 93       	push	r21
    1344:	4f 93       	push	r20
    1346:	d5 01       	movw	r26, r10
    1348:	0e 94 d2 0a 	call	0x15a4	; 0x15a4 <__umulhisi3>
    134c:	8b 01       	movw	r16, r22
    134e:	ac 01       	movw	r20, r24
    1350:	d7 01       	movw	r26, r14
    1352:	0e 94 d2 0a 	call	0x15a4	; 0x15a4 <__umulhisi3>
    1356:	eb 01       	movw	r28, r22
    1358:	e8 0f       	add	r30, r24
    135a:	f9 1f       	adc	r31, r25
    135c:	d6 01       	movw	r26, r12
    135e:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <__muldi3_6>
    1362:	2f 91       	pop	r18
    1364:	3f 91       	pop	r19
    1366:	d6 01       	movw	r26, r12
    1368:	0e 94 d2 0a 	call	0x15a4	; 0x15a4 <__umulhisi3>
    136c:	c6 0f       	add	r28, r22
    136e:	d7 1f       	adc	r29, r23
    1370:	e8 1f       	adc	r30, r24
    1372:	f9 1f       	adc	r31, r25
    1374:	af 91       	pop	r26
    1376:	bf 91       	pop	r27
    1378:	0e 94 d4 09 	call	0x13a8	; 0x13a8 <__muldi3_6>
    137c:	2f 91       	pop	r18
    137e:	3f 91       	pop	r19
    1380:	0e 94 d2 0a 	call	0x15a4	; 0x15a4 <__umulhisi3>
    1384:	c6 0f       	add	r28, r22
    1386:	d7 1f       	adc	r29, r23
    1388:	e8 1f       	adc	r30, r24
    138a:	f9 1f       	adc	r31, r25
    138c:	d6 01       	movw	r26, r12
    138e:	0e 94 d2 0a 	call	0x15a4	; 0x15a4 <__umulhisi3>
    1392:	e6 0f       	add	r30, r22
    1394:	f7 1f       	adc	r31, r23
    1396:	98 01       	movw	r18, r16
    1398:	be 01       	movw	r22, r28
    139a:	cf 01       	movw	r24, r30
    139c:	11 24       	eor	r1, r1
    139e:	0f 91       	pop	r16
    13a0:	1f 91       	pop	r17
    13a2:	cf 91       	pop	r28
    13a4:	df 91       	pop	r29
    13a6:	08 95       	ret

000013a8 <__muldi3_6>:
    13a8:	0e 94 d2 0a 	call	0x15a4	; 0x15a4 <__umulhisi3>
    13ac:	46 0f       	add	r20, r22
    13ae:	57 1f       	adc	r21, r23
    13b0:	c8 1f       	adc	r28, r24
    13b2:	d9 1f       	adc	r29, r25
    13b4:	08 f4       	brcc	.+2      	; 0x13b8 <__muldi3_6+0x10>
    13b6:	31 96       	adiw	r30, 0x01	; 1
    13b8:	08 95       	ret

000013ba <__moddi3>:
    13ba:	68 94       	set
    13bc:	01 c0       	rjmp	.+2      	; 0x13c0 <__divdi3_moddi3>

000013be <__divdi3>:
    13be:	e8 94       	clt

000013c0 <__divdi3_moddi3>:
    13c0:	f9 2f       	mov	r31, r25
    13c2:	f1 2b       	or	r31, r17
    13c4:	12 f0       	brmi	.+4      	; 0x13ca <__divdi3_moddi3+0xa>
    13c6:	0c 94 11 0a 	jmp	0x1422	; 0x1422 <__udivdi3_umoddi3>
    13ca:	a0 e0       	ldi	r26, 0x00	; 0
    13cc:	b0 e0       	ldi	r27, 0x00	; 0
    13ce:	eb ee       	ldi	r30, 0xEB	; 235
    13d0:	f9 e0       	ldi	r31, 0x09	; 9
    13d2:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <__prologue_saves__+0xc>
    13d6:	09 2e       	mov	r0, r25
    13d8:	05 94       	asr	r0
    13da:	22 f4       	brpl	.+8      	; 0x13e4 <__divdi3_moddi3+0x24>
    13dc:	0e 94 6d 0a 	call	0x14da	; 0x14da <__negdi2>
    13e0:	11 23       	and	r17, r17
    13e2:	92 f4       	brpl	.+36     	; 0x1408 <__divdi3_moddi3+0x48>
    13e4:	f0 e8       	ldi	r31, 0x80	; 128
    13e6:	0f 26       	eor	r0, r31
    13e8:	ff ef       	ldi	r31, 0xFF	; 255
    13ea:	e0 94       	com	r14
    13ec:	f0 94       	com	r15
    13ee:	00 95       	com	r16
    13f0:	10 95       	com	r17
    13f2:	b0 94       	com	r11
    13f4:	c0 94       	com	r12
    13f6:	d0 94       	com	r13
    13f8:	a1 94       	neg	r10
    13fa:	bf 0a       	sbc	r11, r31
    13fc:	cf 0a       	sbc	r12, r31
    13fe:	df 0a       	sbc	r13, r31
    1400:	ef 0a       	sbc	r14, r31
    1402:	ff 0a       	sbc	r15, r31
    1404:	0f 0b       	sbc	r16, r31
    1406:	1f 0b       	sbc	r17, r31
    1408:	0e 94 1c 0a 	call	0x1438	; 0x1438 <__udivmod64>
    140c:	07 fc       	sbrc	r0, 7
    140e:	0e 94 6d 0a 	call	0x14da	; 0x14da <__negdi2>
    1412:	cd b7       	in	r28, 0x3d	; 61
    1414:	de b7       	in	r29, 0x3e	; 62
    1416:	ec e0       	ldi	r30, 0x0C	; 12
    1418:	0c 94 9f 0a 	jmp	0x153e	; 0x153e <__epilogue_restores__+0xc>

0000141c <__umoddi3>:
    141c:	68 94       	set
    141e:	01 c0       	rjmp	.+2      	; 0x1422 <__udivdi3_umoddi3>

00001420 <__udivdi3>:
    1420:	e8 94       	clt

00001422 <__udivdi3_umoddi3>:
    1422:	8f 92       	push	r8
    1424:	9f 92       	push	r9
    1426:	cf 93       	push	r28
    1428:	df 93       	push	r29
    142a:	0e 94 1c 0a 	call	0x1438	; 0x1438 <__udivmod64>
    142e:	df 91       	pop	r29
    1430:	cf 91       	pop	r28
    1432:	9f 90       	pop	r9
    1434:	8f 90       	pop	r8
    1436:	08 95       	ret

00001438 <__udivmod64>:
    1438:	88 24       	eor	r8, r8
    143a:	99 24       	eor	r9, r9
    143c:	f4 01       	movw	r30, r8
    143e:	e4 01       	movw	r28, r8
    1440:	b0 e4       	ldi	r27, 0x40	; 64
    1442:	9f 93       	push	r25
    1444:	aa 27       	eor	r26, r26
    1446:	9a 15       	cp	r25, r10
    1448:	8b 04       	cpc	r8, r11
    144a:	9c 04       	cpc	r9, r12
    144c:	ed 05       	cpc	r30, r13
    144e:	fe 05       	cpc	r31, r14
    1450:	cf 05       	cpc	r28, r15
    1452:	d0 07       	cpc	r29, r16
    1454:	a1 07       	cpc	r26, r17
    1456:	98 f4       	brcc	.+38     	; 0x147e <__udivmod64+0x46>
    1458:	ad 2f       	mov	r26, r29
    145a:	dc 2f       	mov	r29, r28
    145c:	cf 2f       	mov	r28, r31
    145e:	fe 2f       	mov	r31, r30
    1460:	e9 2d       	mov	r30, r9
    1462:	98 2c       	mov	r9, r8
    1464:	89 2e       	mov	r8, r25
    1466:	98 2f       	mov	r25, r24
    1468:	87 2f       	mov	r24, r23
    146a:	76 2f       	mov	r23, r22
    146c:	65 2f       	mov	r22, r21
    146e:	54 2f       	mov	r21, r20
    1470:	43 2f       	mov	r20, r19
    1472:	32 2f       	mov	r19, r18
    1474:	22 27       	eor	r18, r18
    1476:	b8 50       	subi	r27, 0x08	; 8
    1478:	31 f7       	brne	.-52     	; 0x1446 <__udivmod64+0xe>
    147a:	bf 91       	pop	r27
    147c:	27 c0       	rjmp	.+78     	; 0x14cc <__udivmod64+0x94>
    147e:	1b 2e       	mov	r1, r27
    1480:	bf 91       	pop	r27
    1482:	bb 27       	eor	r27, r27
    1484:	22 0f       	add	r18, r18
    1486:	33 1f       	adc	r19, r19
    1488:	44 1f       	adc	r20, r20
    148a:	55 1f       	adc	r21, r21
    148c:	66 1f       	adc	r22, r22
    148e:	77 1f       	adc	r23, r23
    1490:	88 1f       	adc	r24, r24
    1492:	99 1f       	adc	r25, r25
    1494:	88 1c       	adc	r8, r8
    1496:	99 1c       	adc	r9, r9
    1498:	ee 1f       	adc	r30, r30
    149a:	ff 1f       	adc	r31, r31
    149c:	cc 1f       	adc	r28, r28
    149e:	dd 1f       	adc	r29, r29
    14a0:	aa 1f       	adc	r26, r26
    14a2:	bb 1f       	adc	r27, r27
    14a4:	8a 14       	cp	r8, r10
    14a6:	9b 04       	cpc	r9, r11
    14a8:	ec 05       	cpc	r30, r12
    14aa:	fd 05       	cpc	r31, r13
    14ac:	ce 05       	cpc	r28, r14
    14ae:	df 05       	cpc	r29, r15
    14b0:	a0 07       	cpc	r26, r16
    14b2:	b1 07       	cpc	r27, r17
    14b4:	48 f0       	brcs	.+18     	; 0x14c8 <__udivmod64+0x90>
    14b6:	8a 18       	sub	r8, r10
    14b8:	9b 08       	sbc	r9, r11
    14ba:	ec 09       	sbc	r30, r12
    14bc:	fd 09       	sbc	r31, r13
    14be:	ce 09       	sbc	r28, r14
    14c0:	df 09       	sbc	r29, r15
    14c2:	a0 0b       	sbc	r26, r16
    14c4:	b1 0b       	sbc	r27, r17
    14c6:	21 60       	ori	r18, 0x01	; 1
    14c8:	1a 94       	dec	r1
    14ca:	e1 f6       	brne	.-72     	; 0x1484 <__udivmod64+0x4c>
    14cc:	2e f4       	brtc	.+10     	; 0x14d8 <__udivmod64+0xa0>
    14ce:	94 01       	movw	r18, r8
    14d0:	af 01       	movw	r20, r30
    14d2:	be 01       	movw	r22, r28
    14d4:	cd 01       	movw	r24, r26
    14d6:	00 0c       	add	r0, r0
    14d8:	08 95       	ret

000014da <__negdi2>:
    14da:	60 95       	com	r22
    14dc:	70 95       	com	r23
    14de:	80 95       	com	r24
    14e0:	90 95       	com	r25
    14e2:	30 95       	com	r19
    14e4:	40 95       	com	r20
    14e6:	50 95       	com	r21
    14e8:	21 95       	neg	r18
    14ea:	3f 4f       	sbci	r19, 0xFF	; 255
    14ec:	4f 4f       	sbci	r20, 0xFF	; 255
    14ee:	5f 4f       	sbci	r21, 0xFF	; 255
    14f0:	6f 4f       	sbci	r22, 0xFF	; 255
    14f2:	7f 4f       	sbci	r23, 0xFF	; 255
    14f4:	8f 4f       	sbci	r24, 0xFF	; 255
    14f6:	9f 4f       	sbci	r25, 0xFF	; 255
    14f8:	08 95       	ret

000014fa <__prologue_saves__>:
    14fa:	2f 92       	push	r2
    14fc:	3f 92       	push	r3
    14fe:	4f 92       	push	r4
    1500:	5f 92       	push	r5
    1502:	6f 92       	push	r6
    1504:	7f 92       	push	r7
    1506:	8f 92       	push	r8
    1508:	9f 92       	push	r9
    150a:	af 92       	push	r10
    150c:	bf 92       	push	r11
    150e:	cf 92       	push	r12
    1510:	df 92       	push	r13
    1512:	ef 92       	push	r14
    1514:	ff 92       	push	r15
    1516:	0f 93       	push	r16
    1518:	1f 93       	push	r17
    151a:	cf 93       	push	r28
    151c:	df 93       	push	r29
    151e:	cd b7       	in	r28, 0x3d	; 61
    1520:	de b7       	in	r29, 0x3e	; 62
    1522:	ca 1b       	sub	r28, r26
    1524:	db 0b       	sbc	r29, r27
    1526:	0f b6       	in	r0, 0x3f	; 63
    1528:	f8 94       	cli
    152a:	de bf       	out	0x3e, r29	; 62
    152c:	0f be       	out	0x3f, r0	; 63
    152e:	cd bf       	out	0x3d, r28	; 61
    1530:	09 94       	ijmp

00001532 <__epilogue_restores__>:
    1532:	2a 88       	ldd	r2, Y+18	; 0x12
    1534:	39 88       	ldd	r3, Y+17	; 0x11
    1536:	48 88       	ldd	r4, Y+16	; 0x10
    1538:	5f 84       	ldd	r5, Y+15	; 0x0f
    153a:	6e 84       	ldd	r6, Y+14	; 0x0e
    153c:	7d 84       	ldd	r7, Y+13	; 0x0d
    153e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1540:	9b 84       	ldd	r9, Y+11	; 0x0b
    1542:	aa 84       	ldd	r10, Y+10	; 0x0a
    1544:	b9 84       	ldd	r11, Y+9	; 0x09
    1546:	c8 84       	ldd	r12, Y+8	; 0x08
    1548:	df 80       	ldd	r13, Y+7	; 0x07
    154a:	ee 80       	ldd	r14, Y+6	; 0x06
    154c:	fd 80       	ldd	r15, Y+5	; 0x05
    154e:	0c 81       	ldd	r16, Y+4	; 0x04
    1550:	1b 81       	ldd	r17, Y+3	; 0x03
    1552:	aa 81       	ldd	r26, Y+2	; 0x02
    1554:	b9 81       	ldd	r27, Y+1	; 0x01
    1556:	ce 0f       	add	r28, r30
    1558:	d1 1d       	adc	r29, r1
    155a:	0f b6       	in	r0, 0x3f	; 63
    155c:	f8 94       	cli
    155e:	de bf       	out	0x3e, r29	; 62
    1560:	0f be       	out	0x3f, r0	; 63
    1562:	cd bf       	out	0x3d, r28	; 61
    1564:	ed 01       	movw	r28, r26
    1566:	08 95       	ret

00001568 <__adddi3>:
    1568:	2a 0d       	add	r18, r10
    156a:	3b 1d       	adc	r19, r11
    156c:	4c 1d       	adc	r20, r12
    156e:	5d 1d       	adc	r21, r13
    1570:	6e 1d       	adc	r22, r14
    1572:	7f 1d       	adc	r23, r15
    1574:	80 1f       	adc	r24, r16
    1576:	91 1f       	adc	r25, r17
    1578:	08 95       	ret

0000157a <__subdi3>:
    157a:	2a 19       	sub	r18, r10
    157c:	3b 09       	sbc	r19, r11
    157e:	4c 09       	sbc	r20, r12
    1580:	5d 09       	sbc	r21, r13
    1582:	6e 09       	sbc	r22, r14
    1584:	7f 09       	sbc	r23, r15
    1586:	80 0b       	sbc	r24, r16
    1588:	91 0b       	sbc	r25, r17
    158a:	08 95       	ret

0000158c <__cmpdi2_s8>:
    158c:	00 24       	eor	r0, r0
    158e:	a7 fd       	sbrc	r26, 7
    1590:	00 94       	com	r0
    1592:	2a 17       	cp	r18, r26
    1594:	30 05       	cpc	r19, r0
    1596:	40 05       	cpc	r20, r0
    1598:	50 05       	cpc	r21, r0
    159a:	60 05       	cpc	r22, r0
    159c:	70 05       	cpc	r23, r0
    159e:	80 05       	cpc	r24, r0
    15a0:	90 05       	cpc	r25, r0
    15a2:	08 95       	ret

000015a4 <__umulhisi3>:
    15a4:	a2 9f       	mul	r26, r18
    15a6:	b0 01       	movw	r22, r0
    15a8:	b3 9f       	mul	r27, r19
    15aa:	c0 01       	movw	r24, r0
    15ac:	a3 9f       	mul	r26, r19
    15ae:	70 0d       	add	r23, r0
    15b0:	81 1d       	adc	r24, r1
    15b2:	11 24       	eor	r1, r1
    15b4:	91 1d       	adc	r25, r1
    15b6:	b2 9f       	mul	r27, r18
    15b8:	70 0d       	add	r23, r0
    15ba:	81 1d       	adc	r24, r1
    15bc:	11 24       	eor	r1, r1
    15be:	91 1d       	adc	r25, r1
    15c0:	08 95       	ret

000015c2 <dtostrf>:
    15c2:	ef 92       	push	r14
    15c4:	0f 93       	push	r16
    15c6:	1f 93       	push	r17
    15c8:	cf 93       	push	r28
    15ca:	df 93       	push	r29
    15cc:	e8 01       	movw	r28, r16
    15ce:	47 fd       	sbrc	r20, 7
    15d0:	02 c0       	rjmp	.+4      	; 0x15d6 <dtostrf+0x14>
    15d2:	34 e0       	ldi	r19, 0x04	; 4
    15d4:	01 c0       	rjmp	.+2      	; 0x15d8 <dtostrf+0x16>
    15d6:	34 e1       	ldi	r19, 0x14	; 20
    15d8:	04 2e       	mov	r0, r20
    15da:	00 0c       	add	r0, r0
    15dc:	55 0b       	sbc	r21, r21
    15de:	57 ff       	sbrs	r21, 7
    15e0:	03 c0       	rjmp	.+6      	; 0x15e8 <dtostrf+0x26>
    15e2:	51 95       	neg	r21
    15e4:	41 95       	neg	r20
    15e6:	51 09       	sbc	r21, r1
    15e8:	e3 2e       	mov	r14, r19
    15ea:	02 2f       	mov	r16, r18
    15ec:	24 2f       	mov	r18, r20
    15ee:	ae 01       	movw	r20, r28
    15f0:	0e 94 05 0b 	call	0x160a	; 0x160a <dtoa_prf>
    15f4:	ce 01       	movw	r24, r28
    15f6:	df 91       	pop	r29
    15f8:	cf 91       	pop	r28
    15fa:	1f 91       	pop	r17
    15fc:	0f 91       	pop	r16
    15fe:	ef 90       	pop	r14
    1600:	08 95       	ret

00001602 <atof>:
    1602:	66 27       	eor	r22, r22
    1604:	77 27       	eor	r23, r23
    1606:	0c 94 5f 0c 	jmp	0x18be	; 0x18be <strtod>

0000160a <dtoa_prf>:
    160a:	a9 e0       	ldi	r26, 0x09	; 9
    160c:	b0 e0       	ldi	r27, 0x00	; 0
    160e:	eb e0       	ldi	r30, 0x0B	; 11
    1610:	fb e0       	ldi	r31, 0x0B	; 11
    1612:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <__prologue_saves__+0xc>
    1616:	6a 01       	movw	r12, r20
    1618:	12 2f       	mov	r17, r18
    161a:	b0 2e       	mov	r11, r16
    161c:	2b e3       	ldi	r18, 0x3B	; 59
    161e:	20 17       	cp	r18, r16
    1620:	20 f0       	brcs	.+8      	; 0x162a <dtoa_prf+0x20>
    1622:	ff 24       	eor	r15, r15
    1624:	f3 94       	inc	r15
    1626:	f0 0e       	add	r15, r16
    1628:	02 c0       	rjmp	.+4      	; 0x162e <dtoa_prf+0x24>
    162a:	2c e3       	ldi	r18, 0x3C	; 60
    162c:	f2 2e       	mov	r15, r18
    162e:	0f 2d       	mov	r16, r15
    1630:	27 e0       	ldi	r18, 0x07	; 7
    1632:	ae 01       	movw	r20, r28
    1634:	4f 5f       	subi	r20, 0xFF	; 255
    1636:	5f 4f       	sbci	r21, 0xFF	; 255
    1638:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <__ftoa_engine>
    163c:	bc 01       	movw	r22, r24
    163e:	49 81       	ldd	r20, Y+1	; 0x01
    1640:	84 2f       	mov	r24, r20
    1642:	89 70       	andi	r24, 0x09	; 9
    1644:	81 30       	cpi	r24, 0x01	; 1
    1646:	31 f0       	breq	.+12     	; 0x1654 <dtoa_prf+0x4a>
    1648:	e1 fc       	sbrc	r14, 1
    164a:	06 c0       	rjmp	.+12     	; 0x1658 <dtoa_prf+0x4e>
    164c:	e0 fe       	sbrs	r14, 0
    164e:	06 c0       	rjmp	.+12     	; 0x165c <dtoa_prf+0x52>
    1650:	90 e2       	ldi	r25, 0x20	; 32
    1652:	05 c0       	rjmp	.+10     	; 0x165e <dtoa_prf+0x54>
    1654:	9d e2       	ldi	r25, 0x2D	; 45
    1656:	03 c0       	rjmp	.+6      	; 0x165e <dtoa_prf+0x54>
    1658:	9b e2       	ldi	r25, 0x2B	; 43
    165a:	01 c0       	rjmp	.+2      	; 0x165e <dtoa_prf+0x54>
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	5e 2d       	mov	r21, r14
    1660:	50 71       	andi	r21, 0x10	; 16
    1662:	43 ff       	sbrs	r20, 3
    1664:	3c c0       	rjmp	.+120    	; 0x16de <dtoa_prf+0xd4>
    1666:	91 11       	cpse	r25, r1
    1668:	02 c0       	rjmp	.+4      	; 0x166e <dtoa_prf+0x64>
    166a:	83 e0       	ldi	r24, 0x03	; 3
    166c:	01 c0       	rjmp	.+2      	; 0x1670 <dtoa_prf+0x66>
    166e:	84 e0       	ldi	r24, 0x04	; 4
    1670:	81 17       	cp	r24, r17
    1672:	18 f4       	brcc	.+6      	; 0x167a <dtoa_prf+0x70>
    1674:	21 2f       	mov	r18, r17
    1676:	28 1b       	sub	r18, r24
    1678:	01 c0       	rjmp	.+2      	; 0x167c <dtoa_prf+0x72>
    167a:	20 e0       	ldi	r18, 0x00	; 0
    167c:	51 11       	cpse	r21, r1
    167e:	0b c0       	rjmp	.+22     	; 0x1696 <dtoa_prf+0x8c>
    1680:	f6 01       	movw	r30, r12
    1682:	82 2f       	mov	r24, r18
    1684:	30 e2       	ldi	r19, 0x20	; 32
    1686:	88 23       	and	r24, r24
    1688:	19 f0       	breq	.+6      	; 0x1690 <dtoa_prf+0x86>
    168a:	31 93       	st	Z+, r19
    168c:	81 50       	subi	r24, 0x01	; 1
    168e:	fb cf       	rjmp	.-10     	; 0x1686 <dtoa_prf+0x7c>
    1690:	c2 0e       	add	r12, r18
    1692:	d1 1c       	adc	r13, r1
    1694:	20 e0       	ldi	r18, 0x00	; 0
    1696:	99 23       	and	r25, r25
    1698:	29 f0       	breq	.+10     	; 0x16a4 <dtoa_prf+0x9a>
    169a:	d6 01       	movw	r26, r12
    169c:	9c 93       	st	X, r25
    169e:	f6 01       	movw	r30, r12
    16a0:	31 96       	adiw	r30, 0x01	; 1
    16a2:	6f 01       	movw	r12, r30
    16a4:	c6 01       	movw	r24, r12
    16a6:	03 96       	adiw	r24, 0x03	; 3
    16a8:	e2 fe       	sbrs	r14, 2
    16aa:	0a c0       	rjmp	.+20     	; 0x16c0 <dtoa_prf+0xb6>
    16ac:	3e e4       	ldi	r19, 0x4E	; 78
    16ae:	d6 01       	movw	r26, r12
    16b0:	3c 93       	st	X, r19
    16b2:	41 e4       	ldi	r20, 0x41	; 65
    16b4:	11 96       	adiw	r26, 0x01	; 1
    16b6:	4c 93       	st	X, r20
    16b8:	11 97       	sbiw	r26, 0x01	; 1
    16ba:	12 96       	adiw	r26, 0x02	; 2
    16bc:	3c 93       	st	X, r19
    16be:	06 c0       	rjmp	.+12     	; 0x16cc <dtoa_prf+0xc2>
    16c0:	3e e6       	ldi	r19, 0x6E	; 110
    16c2:	f6 01       	movw	r30, r12
    16c4:	30 83       	st	Z, r19
    16c6:	41 e6       	ldi	r20, 0x61	; 97
    16c8:	41 83       	std	Z+1, r20	; 0x01
    16ca:	32 83       	std	Z+2, r19	; 0x02
    16cc:	fc 01       	movw	r30, r24
    16ce:	32 2f       	mov	r19, r18
    16d0:	40 e2       	ldi	r20, 0x20	; 32
    16d2:	33 23       	and	r19, r19
    16d4:	09 f4       	brne	.+2      	; 0x16d8 <dtoa_prf+0xce>
    16d6:	42 c0       	rjmp	.+132    	; 0x175c <dtoa_prf+0x152>
    16d8:	41 93       	st	Z+, r20
    16da:	31 50       	subi	r19, 0x01	; 1
    16dc:	fa cf       	rjmp	.-12     	; 0x16d2 <dtoa_prf+0xc8>
    16de:	42 ff       	sbrs	r20, 2
    16e0:	44 c0       	rjmp	.+136    	; 0x176a <dtoa_prf+0x160>
    16e2:	91 11       	cpse	r25, r1
    16e4:	02 c0       	rjmp	.+4      	; 0x16ea <dtoa_prf+0xe0>
    16e6:	83 e0       	ldi	r24, 0x03	; 3
    16e8:	01 c0       	rjmp	.+2      	; 0x16ec <dtoa_prf+0xe2>
    16ea:	84 e0       	ldi	r24, 0x04	; 4
    16ec:	81 17       	cp	r24, r17
    16ee:	18 f4       	brcc	.+6      	; 0x16f6 <dtoa_prf+0xec>
    16f0:	21 2f       	mov	r18, r17
    16f2:	28 1b       	sub	r18, r24
    16f4:	01 c0       	rjmp	.+2      	; 0x16f8 <dtoa_prf+0xee>
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	51 11       	cpse	r21, r1
    16fa:	0b c0       	rjmp	.+22     	; 0x1712 <dtoa_prf+0x108>
    16fc:	f6 01       	movw	r30, r12
    16fe:	82 2f       	mov	r24, r18
    1700:	30 e2       	ldi	r19, 0x20	; 32
    1702:	88 23       	and	r24, r24
    1704:	19 f0       	breq	.+6      	; 0x170c <dtoa_prf+0x102>
    1706:	31 93       	st	Z+, r19
    1708:	81 50       	subi	r24, 0x01	; 1
    170a:	fb cf       	rjmp	.-10     	; 0x1702 <dtoa_prf+0xf8>
    170c:	c2 0e       	add	r12, r18
    170e:	d1 1c       	adc	r13, r1
    1710:	20 e0       	ldi	r18, 0x00	; 0
    1712:	99 23       	and	r25, r25
    1714:	29 f0       	breq	.+10     	; 0x1720 <dtoa_prf+0x116>
    1716:	d6 01       	movw	r26, r12
    1718:	9c 93       	st	X, r25
    171a:	f6 01       	movw	r30, r12
    171c:	31 96       	adiw	r30, 0x01	; 1
    171e:	6f 01       	movw	r12, r30
    1720:	c6 01       	movw	r24, r12
    1722:	03 96       	adiw	r24, 0x03	; 3
    1724:	e2 fe       	sbrs	r14, 2
    1726:	0b c0       	rjmp	.+22     	; 0x173e <dtoa_prf+0x134>
    1728:	39 e4       	ldi	r19, 0x49	; 73
    172a:	d6 01       	movw	r26, r12
    172c:	3c 93       	st	X, r19
    172e:	3e e4       	ldi	r19, 0x4E	; 78
    1730:	11 96       	adiw	r26, 0x01	; 1
    1732:	3c 93       	st	X, r19
    1734:	11 97       	sbiw	r26, 0x01	; 1
    1736:	36 e4       	ldi	r19, 0x46	; 70
    1738:	12 96       	adiw	r26, 0x02	; 2
    173a:	3c 93       	st	X, r19
    173c:	07 c0       	rjmp	.+14     	; 0x174c <dtoa_prf+0x142>
    173e:	39 e6       	ldi	r19, 0x69	; 105
    1740:	f6 01       	movw	r30, r12
    1742:	30 83       	st	Z, r19
    1744:	3e e6       	ldi	r19, 0x6E	; 110
    1746:	31 83       	std	Z+1, r19	; 0x01
    1748:	36 e6       	ldi	r19, 0x66	; 102
    174a:	32 83       	std	Z+2, r19	; 0x02
    174c:	fc 01       	movw	r30, r24
    174e:	32 2f       	mov	r19, r18
    1750:	40 e2       	ldi	r20, 0x20	; 32
    1752:	33 23       	and	r19, r19
    1754:	19 f0       	breq	.+6      	; 0x175c <dtoa_prf+0x152>
    1756:	41 93       	st	Z+, r20
    1758:	31 50       	subi	r19, 0x01	; 1
    175a:	fb cf       	rjmp	.-10     	; 0x1752 <dtoa_prf+0x148>
    175c:	fc 01       	movw	r30, r24
    175e:	e2 0f       	add	r30, r18
    1760:	f1 1d       	adc	r31, r1
    1762:	10 82       	st	Z, r1
    1764:	8e ef       	ldi	r24, 0xFE	; 254
    1766:	9f ef       	ldi	r25, 0xFF	; 255
    1768:	a6 c0       	rjmp	.+332    	; 0x18b6 <dtoa_prf+0x2ac>
    176a:	21 e0       	ldi	r18, 0x01	; 1
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	91 11       	cpse	r25, r1
    1770:	02 c0       	rjmp	.+4      	; 0x1776 <dtoa_prf+0x16c>
    1772:	20 e0       	ldi	r18, 0x00	; 0
    1774:	30 e0       	ldi	r19, 0x00	; 0
    1776:	16 16       	cp	r1, r22
    1778:	17 06       	cpc	r1, r23
    177a:	1c f4       	brge	.+6      	; 0x1782 <dtoa_prf+0x178>
    177c:	fb 01       	movw	r30, r22
    177e:	31 96       	adiw	r30, 0x01	; 1
    1780:	02 c0       	rjmp	.+4      	; 0x1786 <dtoa_prf+0x17c>
    1782:	e1 e0       	ldi	r30, 0x01	; 1
    1784:	f0 e0       	ldi	r31, 0x00	; 0
    1786:	2e 0f       	add	r18, r30
    1788:	3f 1f       	adc	r19, r31
    178a:	bb 20       	and	r11, r11
    178c:	21 f0       	breq	.+8      	; 0x1796 <dtoa_prf+0x18c>
    178e:	eb 2d       	mov	r30, r11
    1790:	f0 e0       	ldi	r31, 0x00	; 0
    1792:	31 96       	adiw	r30, 0x01	; 1
    1794:	02 c0       	rjmp	.+4      	; 0x179a <dtoa_prf+0x190>
    1796:	e0 e0       	ldi	r30, 0x00	; 0
    1798:	f0 e0       	ldi	r31, 0x00	; 0
    179a:	2e 0f       	add	r18, r30
    179c:	3f 1f       	adc	r19, r31
    179e:	e1 2f       	mov	r30, r17
    17a0:	f0 e0       	ldi	r31, 0x00	; 0
    17a2:	2e 17       	cp	r18, r30
    17a4:	3f 07       	cpc	r19, r31
    17a6:	1c f4       	brge	.+6      	; 0x17ae <dtoa_prf+0x1a4>
    17a8:	12 1b       	sub	r17, r18
    17aa:	21 2f       	mov	r18, r17
    17ac:	01 c0       	rjmp	.+2      	; 0x17b0 <dtoa_prf+0x1a6>
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	8e 2d       	mov	r24, r14
    17b2:	88 71       	andi	r24, 0x18	; 24
    17b4:	59 f4       	brne	.+22     	; 0x17cc <dtoa_prf+0x1c2>
    17b6:	f6 01       	movw	r30, r12
    17b8:	82 2f       	mov	r24, r18
    17ba:	30 e2       	ldi	r19, 0x20	; 32
    17bc:	88 23       	and	r24, r24
    17be:	19 f0       	breq	.+6      	; 0x17c6 <dtoa_prf+0x1bc>
    17c0:	31 93       	st	Z+, r19
    17c2:	81 50       	subi	r24, 0x01	; 1
    17c4:	fb cf       	rjmp	.-10     	; 0x17bc <dtoa_prf+0x1b2>
    17c6:	c2 0e       	add	r12, r18
    17c8:	d1 1c       	adc	r13, r1
    17ca:	20 e0       	ldi	r18, 0x00	; 0
    17cc:	99 23       	and	r25, r25
    17ce:	29 f0       	breq	.+10     	; 0x17da <dtoa_prf+0x1d0>
    17d0:	d6 01       	movw	r26, r12
    17d2:	9c 93       	st	X, r25
    17d4:	f6 01       	movw	r30, r12
    17d6:	31 96       	adiw	r30, 0x01	; 1
    17d8:	6f 01       	movw	r12, r30
    17da:	51 11       	cpse	r21, r1
    17dc:	0b c0       	rjmp	.+22     	; 0x17f4 <dtoa_prf+0x1ea>
    17de:	f6 01       	movw	r30, r12
    17e0:	82 2f       	mov	r24, r18
    17e2:	90 e3       	ldi	r25, 0x30	; 48
    17e4:	88 23       	and	r24, r24
    17e6:	19 f0       	breq	.+6      	; 0x17ee <dtoa_prf+0x1e4>
    17e8:	91 93       	st	Z+, r25
    17ea:	81 50       	subi	r24, 0x01	; 1
    17ec:	fb cf       	rjmp	.-10     	; 0x17e4 <dtoa_prf+0x1da>
    17ee:	c2 0e       	add	r12, r18
    17f0:	d1 1c       	adc	r13, r1
    17f2:	20 e0       	ldi	r18, 0x00	; 0
    17f4:	0f 2d       	mov	r16, r15
    17f6:	06 0f       	add	r16, r22
    17f8:	9a 81       	ldd	r25, Y+2	; 0x02
    17fa:	34 2f       	mov	r19, r20
    17fc:	30 71       	andi	r19, 0x10	; 16
    17fe:	44 ff       	sbrs	r20, 4
    1800:	03 c0       	rjmp	.+6      	; 0x1808 <dtoa_prf+0x1fe>
    1802:	91 33       	cpi	r25, 0x31	; 49
    1804:	09 f4       	brne	.+2      	; 0x1808 <dtoa_prf+0x1fe>
    1806:	01 50       	subi	r16, 0x01	; 1
    1808:	10 16       	cp	r1, r16
    180a:	24 f4       	brge	.+8      	; 0x1814 <dtoa_prf+0x20a>
    180c:	09 30       	cpi	r16, 0x09	; 9
    180e:	18 f0       	brcs	.+6      	; 0x1816 <dtoa_prf+0x20c>
    1810:	08 e0       	ldi	r16, 0x08	; 8
    1812:	01 c0       	rjmp	.+2      	; 0x1816 <dtoa_prf+0x20c>
    1814:	01 e0       	ldi	r16, 0x01	; 1
    1816:	ab 01       	movw	r20, r22
    1818:	77 ff       	sbrs	r23, 7
    181a:	02 c0       	rjmp	.+4      	; 0x1820 <dtoa_prf+0x216>
    181c:	40 e0       	ldi	r20, 0x00	; 0
    181e:	50 e0       	ldi	r21, 0x00	; 0
    1820:	fb 01       	movw	r30, r22
    1822:	e4 1b       	sub	r30, r20
    1824:	f5 0b       	sbc	r31, r21
    1826:	a1 e0       	ldi	r26, 0x01	; 1
    1828:	b0 e0       	ldi	r27, 0x00	; 0
    182a:	ac 0f       	add	r26, r28
    182c:	bd 1f       	adc	r27, r29
    182e:	ea 0f       	add	r30, r26
    1830:	fb 1f       	adc	r31, r27
    1832:	8e e2       	ldi	r24, 0x2E	; 46
    1834:	a8 2e       	mov	r10, r24
    1836:	4b 01       	movw	r8, r22
    1838:	80 1a       	sub	r8, r16
    183a:	91 08       	sbc	r9, r1
    183c:	0b 2d       	mov	r16, r11
    183e:	10 e0       	ldi	r17, 0x00	; 0
    1840:	11 95       	neg	r17
    1842:	01 95       	neg	r16
    1844:	11 09       	sbc	r17, r1
    1846:	4f 3f       	cpi	r20, 0xFF	; 255
    1848:	bf ef       	ldi	r27, 0xFF	; 255
    184a:	5b 07       	cpc	r21, r27
    184c:	21 f4       	brne	.+8      	; 0x1856 <dtoa_prf+0x24c>
    184e:	d6 01       	movw	r26, r12
    1850:	ac 92       	st	X, r10
    1852:	11 96       	adiw	r26, 0x01	; 1
    1854:	6d 01       	movw	r12, r26
    1856:	64 17       	cp	r22, r20
    1858:	75 07       	cpc	r23, r21
    185a:	2c f0       	brlt	.+10     	; 0x1866 <dtoa_prf+0x25c>
    185c:	84 16       	cp	r8, r20
    185e:	95 06       	cpc	r9, r21
    1860:	14 f4       	brge	.+4      	; 0x1866 <dtoa_prf+0x25c>
    1862:	81 81       	ldd	r24, Z+1	; 0x01
    1864:	01 c0       	rjmp	.+2      	; 0x1868 <dtoa_prf+0x25e>
    1866:	80 e3       	ldi	r24, 0x30	; 48
    1868:	41 50       	subi	r20, 0x01	; 1
    186a:	51 09       	sbc	r21, r1
    186c:	31 96       	adiw	r30, 0x01	; 1
    186e:	d6 01       	movw	r26, r12
    1870:	11 96       	adiw	r26, 0x01	; 1
    1872:	7d 01       	movw	r14, r26
    1874:	40 17       	cp	r20, r16
    1876:	51 07       	cpc	r21, r17
    1878:	24 f0       	brlt	.+8      	; 0x1882 <dtoa_prf+0x278>
    187a:	d6 01       	movw	r26, r12
    187c:	8c 93       	st	X, r24
    187e:	67 01       	movw	r12, r14
    1880:	e2 cf       	rjmp	.-60     	; 0x1846 <dtoa_prf+0x23c>
    1882:	64 17       	cp	r22, r20
    1884:	75 07       	cpc	r23, r21
    1886:	39 f4       	brne	.+14     	; 0x1896 <dtoa_prf+0x28c>
    1888:	96 33       	cpi	r25, 0x36	; 54
    188a:	20 f4       	brcc	.+8      	; 0x1894 <dtoa_prf+0x28a>
    188c:	95 33       	cpi	r25, 0x35	; 53
    188e:	19 f4       	brne	.+6      	; 0x1896 <dtoa_prf+0x28c>
    1890:	31 11       	cpse	r19, r1
    1892:	01 c0       	rjmp	.+2      	; 0x1896 <dtoa_prf+0x28c>
    1894:	81 e3       	ldi	r24, 0x31	; 49
    1896:	f6 01       	movw	r30, r12
    1898:	80 83       	st	Z, r24
    189a:	f7 01       	movw	r30, r14
    189c:	82 2f       	mov	r24, r18
    189e:	90 e2       	ldi	r25, 0x20	; 32
    18a0:	88 23       	and	r24, r24
    18a2:	19 f0       	breq	.+6      	; 0x18aa <dtoa_prf+0x2a0>
    18a4:	91 93       	st	Z+, r25
    18a6:	81 50       	subi	r24, 0x01	; 1
    18a8:	fb cf       	rjmp	.-10     	; 0x18a0 <dtoa_prf+0x296>
    18aa:	f7 01       	movw	r30, r14
    18ac:	e2 0f       	add	r30, r18
    18ae:	f1 1d       	adc	r31, r1
    18b0:	10 82       	st	Z, r1
    18b2:	80 e0       	ldi	r24, 0x00	; 0
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	29 96       	adiw	r28, 0x09	; 9
    18b8:	ec e0       	ldi	r30, 0x0C	; 12
    18ba:	0c 94 9f 0a 	jmp	0x153e	; 0x153e <__epilogue_restores__+0xc>

000018be <strtod>:
    18be:	a0 e0       	ldi	r26, 0x00	; 0
    18c0:	b0 e0       	ldi	r27, 0x00	; 0
    18c2:	e5 e6       	ldi	r30, 0x65	; 101
    18c4:	fc e0       	ldi	r31, 0x0C	; 12
    18c6:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <__prologue_saves__+0xc>
    18ca:	ec 01       	movw	r28, r24
    18cc:	6b 01       	movw	r12, r22
    18ce:	61 15       	cp	r22, r1
    18d0:	71 05       	cpc	r23, r1
    18d2:	19 f0       	breq	.+6      	; 0x18da <strtod+0x1c>
    18d4:	fb 01       	movw	r30, r22
    18d6:	91 83       	std	Z+1, r25	; 0x01
    18d8:	80 83       	st	Z, r24
    18da:	7e 01       	movw	r14, r28
    18dc:	ff ef       	ldi	r31, 0xFF	; 255
    18de:	ef 1a       	sub	r14, r31
    18e0:	ff 0a       	sbc	r15, r31
    18e2:	08 81       	ld	r16, Y
    18e4:	80 2f       	mov	r24, r16
    18e6:	90 e0       	ldi	r25, 0x00	; 0
    18e8:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <isspace>
    18ec:	89 2b       	or	r24, r25
    18ee:	11 f0       	breq	.+4      	; 0x18f4 <strtod+0x36>
    18f0:	e7 01       	movw	r28, r14
    18f2:	f3 cf       	rjmp	.-26     	; 0x18da <strtod+0x1c>
    18f4:	0d 32       	cpi	r16, 0x2D	; 45
    18f6:	39 f4       	brne	.+14     	; 0x1906 <strtod+0x48>
    18f8:	7e 01       	movw	r14, r28
    18fa:	82 e0       	ldi	r24, 0x02	; 2
    18fc:	e8 0e       	add	r14, r24
    18fe:	f1 1c       	adc	r15, r1
    1900:	09 81       	ldd	r16, Y+1	; 0x01
    1902:	11 e0       	ldi	r17, 0x01	; 1
    1904:	08 c0       	rjmp	.+16     	; 0x1916 <strtod+0x58>
    1906:	0b 32       	cpi	r16, 0x2B	; 43
    1908:	29 f4       	brne	.+10     	; 0x1914 <strtod+0x56>
    190a:	7e 01       	movw	r14, r28
    190c:	92 e0       	ldi	r25, 0x02	; 2
    190e:	e9 0e       	add	r14, r25
    1910:	f1 1c       	adc	r15, r1
    1912:	09 81       	ldd	r16, Y+1	; 0x01
    1914:	10 e0       	ldi	r17, 0x00	; 0
    1916:	e7 01       	movw	r28, r14
    1918:	21 97       	sbiw	r28, 0x01	; 1
    191a:	43 e0       	ldi	r20, 0x03	; 3
    191c:	50 e0       	ldi	r21, 0x00	; 0
    191e:	62 ef       	ldi	r22, 0xF2	; 242
    1920:	70 e0       	ldi	r23, 0x00	; 0
    1922:	ce 01       	movw	r24, r28
    1924:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <strncasecmp_P>
    1928:	89 2b       	or	r24, r25
    192a:	c1 f4       	brne	.+48     	; 0x195c <strtod+0x9e>
    192c:	23 96       	adiw	r28, 0x03	; 3
    192e:	45 e0       	ldi	r20, 0x05	; 5
    1930:	50 e0       	ldi	r21, 0x00	; 0
    1932:	6d ee       	ldi	r22, 0xED	; 237
    1934:	70 e0       	ldi	r23, 0x00	; 0
    1936:	ce 01       	movw	r24, r28
    1938:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <strncasecmp_P>
    193c:	89 2b       	or	r24, r25
    193e:	09 f4       	brne	.+2      	; 0x1942 <strtod+0x84>
    1940:	25 96       	adiw	r28, 0x05	; 5
    1942:	c1 14       	cp	r12, r1
    1944:	d1 04       	cpc	r13, r1
    1946:	19 f0       	breq	.+6      	; 0x194e <strtod+0x90>
    1948:	f6 01       	movw	r30, r12
    194a:	d1 83       	std	Z+1, r29	; 0x01
    194c:	c0 83       	st	Z, r28
    194e:	11 11       	cpse	r17, r1
    1950:	f6 c0       	rjmp	.+492    	; 0x1b3e <strtod+0x280>
    1952:	60 e0       	ldi	r22, 0x00	; 0
    1954:	70 e0       	ldi	r23, 0x00	; 0
    1956:	80 e8       	ldi	r24, 0x80	; 128
    1958:	9f e7       	ldi	r25, 0x7F	; 127
    195a:	fa c0       	rjmp	.+500    	; 0x1b50 <strtod+0x292>
    195c:	43 e0       	ldi	r20, 0x03	; 3
    195e:	50 e0       	ldi	r21, 0x00	; 0
    1960:	6a ee       	ldi	r22, 0xEA	; 234
    1962:	70 e0       	ldi	r23, 0x00	; 0
    1964:	ce 01       	movw	r24, r28
    1966:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <strncasecmp_P>
    196a:	89 2b       	or	r24, r25
    196c:	59 f4       	brne	.+22     	; 0x1984 <strtod+0xc6>
    196e:	c1 14       	cp	r12, r1
    1970:	d1 04       	cpc	r13, r1
    1972:	09 f4       	brne	.+2      	; 0x1976 <strtod+0xb8>
    1974:	e9 c0       	rjmp	.+466    	; 0x1b48 <strtod+0x28a>
    1976:	f2 e0       	ldi	r31, 0x02	; 2
    1978:	ef 0e       	add	r14, r31
    197a:	f1 1c       	adc	r15, r1
    197c:	f6 01       	movw	r30, r12
    197e:	f1 82       	std	Z+1, r15	; 0x01
    1980:	e0 82       	st	Z, r14
    1982:	e2 c0       	rjmp	.+452    	; 0x1b48 <strtod+0x28a>
    1984:	20 e0       	ldi	r18, 0x00	; 0
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	a9 01       	movw	r20, r18
    198a:	c0 e0       	ldi	r28, 0x00	; 0
    198c:	d0 e0       	ldi	r29, 0x00	; 0
    198e:	f7 01       	movw	r30, r14
    1990:	80 ed       	ldi	r24, 0xD0	; 208
    1992:	a8 2e       	mov	r10, r24
    1994:	a0 0e       	add	r10, r16
    1996:	89 e0       	ldi	r24, 0x09	; 9
    1998:	8a 15       	cp	r24, r10
    199a:	30 f1       	brcs	.+76     	; 0x19e8 <strtod+0x12a>
    199c:	91 2f       	mov	r25, r17
    199e:	92 60       	ori	r25, 0x02	; 2
    19a0:	b9 2e       	mov	r11, r25
    19a2:	81 2f       	mov	r24, r17
    19a4:	88 70       	andi	r24, 0x08	; 8
    19a6:	12 ff       	sbrs	r17, 2
    19a8:	04 c0       	rjmp	.+8      	; 0x19b2 <strtod+0xf4>
    19aa:	81 11       	cpse	r24, r1
    19ac:	24 c0       	rjmp	.+72     	; 0x19f6 <strtod+0x138>
    19ae:	21 96       	adiw	r28, 0x01	; 1
    19b0:	22 c0       	rjmp	.+68     	; 0x19f6 <strtod+0x138>
    19b2:	81 11       	cpse	r24, r1
    19b4:	21 97       	sbiw	r28, 0x01	; 1
    19b6:	a5 e0       	ldi	r26, 0x05	; 5
    19b8:	b0 e0       	ldi	r27, 0x00	; 0
    19ba:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <__muluhisi3>
    19be:	dc 01       	movw	r26, r24
    19c0:	cb 01       	movw	r24, r22
    19c2:	88 0f       	add	r24, r24
    19c4:	99 1f       	adc	r25, r25
    19c6:	aa 1f       	adc	r26, r26
    19c8:	bb 1f       	adc	r27, r27
    19ca:	9c 01       	movw	r18, r24
    19cc:	ad 01       	movw	r20, r26
    19ce:	2a 0d       	add	r18, r10
    19d0:	31 1d       	adc	r19, r1
    19d2:	41 1d       	adc	r20, r1
    19d4:	51 1d       	adc	r21, r1
    19d6:	28 39       	cpi	r18, 0x98	; 152
    19d8:	89 e9       	ldi	r24, 0x99	; 153
    19da:	38 07       	cpc	r19, r24
    19dc:	48 07       	cpc	r20, r24
    19de:	89 e1       	ldi	r24, 0x19	; 25
    19e0:	58 07       	cpc	r21, r24
    19e2:	48 f0       	brcs	.+18     	; 0x19f6 <strtod+0x138>
    19e4:	16 60       	ori	r17, 0x06	; 6
    19e6:	06 c0       	rjmp	.+12     	; 0x19f4 <strtod+0x136>
    19e8:	9e ef       	ldi	r25, 0xFE	; 254
    19ea:	a9 12       	cpse	r10, r25
    19ec:	0a c0       	rjmp	.+20     	; 0x1a02 <strtod+0x144>
    19ee:	13 fd       	sbrc	r17, 3
    19f0:	40 c0       	rjmp	.+128    	; 0x1a72 <strtod+0x1b4>
    19f2:	18 60       	ori	r17, 0x08	; 8
    19f4:	b1 2e       	mov	r11, r17
    19f6:	8f ef       	ldi	r24, 0xFF	; 255
    19f8:	e8 1a       	sub	r14, r24
    19fa:	f8 0a       	sbc	r15, r24
    19fc:	00 81       	ld	r16, Z
    19fe:	1b 2d       	mov	r17, r11
    1a00:	c6 cf       	rjmp	.-116    	; 0x198e <strtod+0xd0>
    1a02:	80 2f       	mov	r24, r16
    1a04:	8f 7d       	andi	r24, 0xDF	; 223
    1a06:	85 34       	cpi	r24, 0x45	; 69
    1a08:	a1 f5       	brne	.+104    	; 0x1a72 <strtod+0x1b4>
    1a0a:	80 81       	ld	r24, Z
    1a0c:	8d 32       	cpi	r24, 0x2D	; 45
    1a0e:	11 f4       	brne	.+4      	; 0x1a14 <strtod+0x156>
    1a10:	10 61       	ori	r17, 0x10	; 16
    1a12:	06 c0       	rjmp	.+12     	; 0x1a20 <strtod+0x162>
    1a14:	8b 32       	cpi	r24, 0x2B	; 43
    1a16:	21 f0       	breq	.+8      	; 0x1a20 <strtod+0x162>
    1a18:	31 96       	adiw	r30, 0x01	; 1
    1a1a:	61 e0       	ldi	r22, 0x01	; 1
    1a1c:	70 e0       	ldi	r23, 0x00	; 0
    1a1e:	04 c0       	rjmp	.+8      	; 0x1a28 <strtod+0x16a>
    1a20:	81 81       	ldd	r24, Z+1	; 0x01
    1a22:	32 96       	adiw	r30, 0x02	; 2
    1a24:	62 e0       	ldi	r22, 0x02	; 2
    1a26:	70 e0       	ldi	r23, 0x00	; 0
    1a28:	80 53       	subi	r24, 0x30	; 48
    1a2a:	8a 30       	cpi	r24, 0x0A	; 10
    1a2c:	18 f0       	brcs	.+6      	; 0x1a34 <strtod+0x176>
    1a2e:	e6 1b       	sub	r30, r22
    1a30:	f7 0b       	sbc	r31, r23
    1a32:	1f c0       	rjmp	.+62     	; 0x1a72 <strtod+0x1b4>
    1a34:	60 e0       	ldi	r22, 0x00	; 0
    1a36:	70 e0       	ldi	r23, 0x00	; 0
    1a38:	60 38       	cpi	r22, 0x80	; 128
    1a3a:	9c e0       	ldi	r25, 0x0C	; 12
    1a3c:	79 07       	cpc	r23, r25
    1a3e:	5c f4       	brge	.+22     	; 0x1a56 <strtod+0x198>
    1a40:	db 01       	movw	r26, r22
    1a42:	aa 0f       	add	r26, r26
    1a44:	bb 1f       	adc	r27, r27
    1a46:	aa 0f       	add	r26, r26
    1a48:	bb 1f       	adc	r27, r27
    1a4a:	6a 0f       	add	r22, r26
    1a4c:	7b 1f       	adc	r23, r27
    1a4e:	66 0f       	add	r22, r22
    1a50:	77 1f       	adc	r23, r23
    1a52:	68 0f       	add	r22, r24
    1a54:	71 1d       	adc	r23, r1
    1a56:	31 96       	adiw	r30, 0x01	; 1
    1a58:	df 01       	movw	r26, r30
    1a5a:	11 97       	sbiw	r26, 0x01	; 1
    1a5c:	8c 91       	ld	r24, X
    1a5e:	80 53       	subi	r24, 0x30	; 48
    1a60:	8a 30       	cpi	r24, 0x0A	; 10
    1a62:	50 f3       	brcs	.-44     	; 0x1a38 <strtod+0x17a>
    1a64:	14 ff       	sbrs	r17, 4
    1a66:	03 c0       	rjmp	.+6      	; 0x1a6e <strtod+0x1b0>
    1a68:	71 95       	neg	r23
    1a6a:	61 95       	neg	r22
    1a6c:	71 09       	sbc	r23, r1
    1a6e:	c6 0f       	add	r28, r22
    1a70:	d7 1f       	adc	r29, r23
    1a72:	11 ff       	sbrs	r17, 1
    1a74:	08 c0       	rjmp	.+16     	; 0x1a86 <strtod+0x1c8>
    1a76:	c1 14       	cp	r12, r1
    1a78:	d1 04       	cpc	r13, r1
    1a7a:	29 f0       	breq	.+10     	; 0x1a86 <strtod+0x1c8>
    1a7c:	cf 01       	movw	r24, r30
    1a7e:	01 97       	sbiw	r24, 0x01	; 1
    1a80:	f6 01       	movw	r30, r12
    1a82:	91 83       	std	Z+1, r25	; 0x01
    1a84:	80 83       	st	Z, r24
    1a86:	ca 01       	movw	r24, r20
    1a88:	b9 01       	movw	r22, r18
    1a8a:	0e 94 1a 09 	call	0x1234	; 0x1234 <__floatunsisf>
    1a8e:	21 2f       	mov	r18, r17
    1a90:	23 70       	andi	r18, 0x03	; 3
    1a92:	23 30       	cpi	r18, 0x03	; 3
    1a94:	19 f0       	breq	.+6      	; 0x1a9c <strtod+0x1de>
    1a96:	4b 01       	movw	r8, r22
    1a98:	5c 01       	movw	r10, r24
    1a9a:	06 c0       	rjmp	.+12     	; 0x1aa8 <strtod+0x1ea>
    1a9c:	4b 01       	movw	r8, r22
    1a9e:	5c 01       	movw	r10, r24
    1aa0:	b7 fa       	bst	r11, 7
    1aa2:	b0 94       	com	r11
    1aa4:	b7 f8       	bld	r11, 7
    1aa6:	b0 94       	com	r11
    1aa8:	20 e0       	ldi	r18, 0x00	; 0
    1aaa:	30 e0       	ldi	r19, 0x00	; 0
    1aac:	a9 01       	movw	r20, r18
    1aae:	c5 01       	movw	r24, r10
    1ab0:	b4 01       	movw	r22, r8
    1ab2:	0e 94 a6 0e 	call	0x1d4c	; 0x1d4c <__cmpsf2>
    1ab6:	88 23       	and	r24, r24
    1ab8:	09 f4       	brne	.+2      	; 0x1abc <strtod+0x1fe>
    1aba:	3e c0       	rjmp	.+124    	; 0x1b38 <strtod+0x27a>
    1abc:	d7 ff       	sbrs	r29, 7
    1abe:	06 c0       	rjmp	.+12     	; 0x1acc <strtod+0x20e>
    1ac0:	d1 95       	neg	r29
    1ac2:	c1 95       	neg	r28
    1ac4:	d1 09       	sbc	r29, r1
    1ac6:	09 e0       	ldi	r16, 0x09	; 9
    1ac8:	11 e0       	ldi	r17, 0x01	; 1
    1aca:	02 c0       	rjmp	.+4      	; 0x1ad0 <strtod+0x212>
    1acc:	01 e2       	ldi	r16, 0x21	; 33
    1ace:	11 e0       	ldi	r17, 0x01	; 1
    1ad0:	68 01       	movw	r12, r16
    1ad2:	f8 e1       	ldi	r31, 0x18	; 24
    1ad4:	cf 1a       	sub	r12, r31
    1ad6:	d1 08       	sbc	r13, r1
    1ad8:	90 e2       	ldi	r25, 0x20	; 32
    1ada:	e9 2e       	mov	r14, r25
    1adc:	f1 2c       	mov	r15, r1
    1ade:	ce 15       	cp	r28, r14
    1ae0:	df 05       	cpc	r29, r15
    1ae2:	74 f0       	brlt	.+28     	; 0x1b00 <strtod+0x242>
    1ae4:	f8 01       	movw	r30, r16
    1ae6:	25 91       	lpm	r18, Z+
    1ae8:	35 91       	lpm	r19, Z+
    1aea:	45 91       	lpm	r20, Z+
    1aec:	54 91       	lpm	r21, Z
    1aee:	c5 01       	movw	r24, r10
    1af0:	b4 01       	movw	r22, r8
    1af2:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__mulsf3>
    1af6:	4b 01       	movw	r8, r22
    1af8:	5c 01       	movw	r10, r24
    1afa:	ce 19       	sub	r28, r14
    1afc:	df 09       	sbc	r29, r15
    1afe:	ef cf       	rjmp	.-34     	; 0x1ade <strtod+0x220>
    1b00:	04 50       	subi	r16, 0x04	; 4
    1b02:	11 09       	sbc	r17, r1
    1b04:	f5 94       	asr	r15
    1b06:	e7 94       	ror	r14
    1b08:	0c 15       	cp	r16, r12
    1b0a:	1d 05       	cpc	r17, r13
    1b0c:	41 f7       	brne	.-48     	; 0x1ade <strtod+0x220>
    1b0e:	8a 2d       	mov	r24, r10
    1b10:	88 0f       	add	r24, r24
    1b12:	8b 2d       	mov	r24, r11
    1b14:	88 1f       	adc	r24, r24
    1b16:	8f 3f       	cpi	r24, 0xFF	; 255
    1b18:	49 f0       	breq	.+18     	; 0x1b2c <strtod+0x26e>
    1b1a:	20 e0       	ldi	r18, 0x00	; 0
    1b1c:	30 e0       	ldi	r19, 0x00	; 0
    1b1e:	a9 01       	movw	r20, r18
    1b20:	c5 01       	movw	r24, r10
    1b22:	b4 01       	movw	r22, r8
    1b24:	0e 94 a6 0e 	call	0x1d4c	; 0x1d4c <__cmpsf2>
    1b28:	81 11       	cpse	r24, r1
    1b2a:	06 c0       	rjmp	.+12     	; 0x1b38 <strtod+0x27a>
    1b2c:	82 e2       	ldi	r24, 0x22	; 34
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <errno+0x1>
    1b34:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <errno>
    1b38:	c5 01       	movw	r24, r10
    1b3a:	b4 01       	movw	r22, r8
    1b3c:	09 c0       	rjmp	.+18     	; 0x1b50 <strtod+0x292>
    1b3e:	60 e0       	ldi	r22, 0x00	; 0
    1b40:	70 e0       	ldi	r23, 0x00	; 0
    1b42:	80 e8       	ldi	r24, 0x80	; 128
    1b44:	9f ef       	ldi	r25, 0xFF	; 255
    1b46:	04 c0       	rjmp	.+8      	; 0x1b50 <strtod+0x292>
    1b48:	60 e0       	ldi	r22, 0x00	; 0
    1b4a:	70 e0       	ldi	r23, 0x00	; 0
    1b4c:	80 ec       	ldi	r24, 0xC0	; 192
    1b4e:	9f e7       	ldi	r25, 0x7F	; 127
    1b50:	cd b7       	in	r28, 0x3d	; 61
    1b52:	de b7       	in	r29, 0x3e	; 62
    1b54:	ec e0       	ldi	r30, 0x0C	; 12
    1b56:	0c 94 9f 0a 	jmp	0x153e	; 0x153e <__epilogue_restores__+0xc>

00001b5a <__ftoa_engine>:
    1b5a:	28 30       	cpi	r18, 0x08	; 8
    1b5c:	08 f0       	brcs	.+2      	; 0x1b60 <__ftoa_engine+0x6>
    1b5e:	27 e0       	ldi	r18, 0x07	; 7
    1b60:	33 27       	eor	r19, r19
    1b62:	da 01       	movw	r26, r20
    1b64:	99 0f       	add	r25, r25
    1b66:	31 1d       	adc	r19, r1
    1b68:	87 fd       	sbrc	r24, 7
    1b6a:	91 60       	ori	r25, 0x01	; 1
    1b6c:	00 96       	adiw	r24, 0x00	; 0
    1b6e:	61 05       	cpc	r22, r1
    1b70:	71 05       	cpc	r23, r1
    1b72:	39 f4       	brne	.+14     	; 0x1b82 <__ftoa_engine+0x28>
    1b74:	32 60       	ori	r19, 0x02	; 2
    1b76:	2e 5f       	subi	r18, 0xFE	; 254
    1b78:	3d 93       	st	X+, r19
    1b7a:	30 e3       	ldi	r19, 0x30	; 48
    1b7c:	2a 95       	dec	r18
    1b7e:	e1 f7       	brne	.-8      	; 0x1b78 <__ftoa_engine+0x1e>
    1b80:	08 95       	ret
    1b82:	9f 3f       	cpi	r25, 0xFF	; 255
    1b84:	30 f0       	brcs	.+12     	; 0x1b92 <__ftoa_engine+0x38>
    1b86:	80 38       	cpi	r24, 0x80	; 128
    1b88:	71 05       	cpc	r23, r1
    1b8a:	61 05       	cpc	r22, r1
    1b8c:	09 f0       	breq	.+2      	; 0x1b90 <__ftoa_engine+0x36>
    1b8e:	3c 5f       	subi	r19, 0xFC	; 252
    1b90:	3c 5f       	subi	r19, 0xFC	; 252
    1b92:	3d 93       	st	X+, r19
    1b94:	91 30       	cpi	r25, 0x01	; 1
    1b96:	08 f0       	brcs	.+2      	; 0x1b9a <__ftoa_engine+0x40>
    1b98:	80 68       	ori	r24, 0x80	; 128
    1b9a:	91 1d       	adc	r25, r1
    1b9c:	df 93       	push	r29
    1b9e:	cf 93       	push	r28
    1ba0:	1f 93       	push	r17
    1ba2:	0f 93       	push	r16
    1ba4:	ff 92       	push	r15
    1ba6:	ef 92       	push	r14
    1ba8:	19 2f       	mov	r17, r25
    1baa:	98 7f       	andi	r25, 0xF8	; 248
    1bac:	96 95       	lsr	r25
    1bae:	e9 2f       	mov	r30, r25
    1bb0:	96 95       	lsr	r25
    1bb2:	96 95       	lsr	r25
    1bb4:	e9 0f       	add	r30, r25
    1bb6:	ff 27       	eor	r31, r31
    1bb8:	e1 58       	subi	r30, 0x81	; 129
    1bba:	fe 4f       	sbci	r31, 0xFE	; 254
    1bbc:	99 27       	eor	r25, r25
    1bbe:	33 27       	eor	r19, r19
    1bc0:	ee 24       	eor	r14, r14
    1bc2:	ff 24       	eor	r15, r15
    1bc4:	a7 01       	movw	r20, r14
    1bc6:	e7 01       	movw	r28, r14
    1bc8:	05 90       	lpm	r0, Z+
    1bca:	08 94       	sec
    1bcc:	07 94       	ror	r0
    1bce:	28 f4       	brcc	.+10     	; 0x1bda <__ftoa_engine+0x80>
    1bd0:	36 0f       	add	r19, r22
    1bd2:	e7 1e       	adc	r14, r23
    1bd4:	f8 1e       	adc	r15, r24
    1bd6:	49 1f       	adc	r20, r25
    1bd8:	51 1d       	adc	r21, r1
    1bda:	66 0f       	add	r22, r22
    1bdc:	77 1f       	adc	r23, r23
    1bde:	88 1f       	adc	r24, r24
    1be0:	99 1f       	adc	r25, r25
    1be2:	06 94       	lsr	r0
    1be4:	a1 f7       	brne	.-24     	; 0x1bce <__ftoa_engine+0x74>
    1be6:	05 90       	lpm	r0, Z+
    1be8:	07 94       	ror	r0
    1bea:	28 f4       	brcc	.+10     	; 0x1bf6 <__ftoa_engine+0x9c>
    1bec:	e7 0e       	add	r14, r23
    1bee:	f8 1e       	adc	r15, r24
    1bf0:	49 1f       	adc	r20, r25
    1bf2:	56 1f       	adc	r21, r22
    1bf4:	c1 1d       	adc	r28, r1
    1bf6:	77 0f       	add	r23, r23
    1bf8:	88 1f       	adc	r24, r24
    1bfa:	99 1f       	adc	r25, r25
    1bfc:	66 1f       	adc	r22, r22
    1bfe:	06 94       	lsr	r0
    1c00:	a1 f7       	brne	.-24     	; 0x1bea <__ftoa_engine+0x90>
    1c02:	05 90       	lpm	r0, Z+
    1c04:	07 94       	ror	r0
    1c06:	28 f4       	brcc	.+10     	; 0x1c12 <__ftoa_engine+0xb8>
    1c08:	f8 0e       	add	r15, r24
    1c0a:	49 1f       	adc	r20, r25
    1c0c:	56 1f       	adc	r21, r22
    1c0e:	c7 1f       	adc	r28, r23
    1c10:	d1 1d       	adc	r29, r1
    1c12:	88 0f       	add	r24, r24
    1c14:	99 1f       	adc	r25, r25
    1c16:	66 1f       	adc	r22, r22
    1c18:	77 1f       	adc	r23, r23
    1c1a:	06 94       	lsr	r0
    1c1c:	a1 f7       	brne	.-24     	; 0x1c06 <__ftoa_engine+0xac>
    1c1e:	05 90       	lpm	r0, Z+
    1c20:	07 94       	ror	r0
    1c22:	20 f4       	brcc	.+8      	; 0x1c2c <__ftoa_engine+0xd2>
    1c24:	49 0f       	add	r20, r25
    1c26:	56 1f       	adc	r21, r22
    1c28:	c7 1f       	adc	r28, r23
    1c2a:	d8 1f       	adc	r29, r24
    1c2c:	99 0f       	add	r25, r25
    1c2e:	66 1f       	adc	r22, r22
    1c30:	77 1f       	adc	r23, r23
    1c32:	88 1f       	adc	r24, r24
    1c34:	06 94       	lsr	r0
    1c36:	a9 f7       	brne	.-22     	; 0x1c22 <__ftoa_engine+0xc8>
    1c38:	84 91       	lpm	r24, Z
    1c3a:	10 95       	com	r17
    1c3c:	17 70       	andi	r17, 0x07	; 7
    1c3e:	41 f0       	breq	.+16     	; 0x1c50 <__ftoa_engine+0xf6>
    1c40:	d6 95       	lsr	r29
    1c42:	c7 95       	ror	r28
    1c44:	57 95       	ror	r21
    1c46:	47 95       	ror	r20
    1c48:	f7 94       	ror	r15
    1c4a:	e7 94       	ror	r14
    1c4c:	1a 95       	dec	r17
    1c4e:	c1 f7       	brne	.-16     	; 0x1c40 <__ftoa_engine+0xe6>
    1c50:	e5 e2       	ldi	r30, 0x25	; 37
    1c52:	f1 e0       	ldi	r31, 0x01	; 1
    1c54:	68 94       	set
    1c56:	15 90       	lpm	r1, Z+
    1c58:	15 91       	lpm	r17, Z+
    1c5a:	35 91       	lpm	r19, Z+
    1c5c:	65 91       	lpm	r22, Z+
    1c5e:	95 91       	lpm	r25, Z+
    1c60:	05 90       	lpm	r0, Z+
    1c62:	7f e2       	ldi	r23, 0x2F	; 47
    1c64:	73 95       	inc	r23
    1c66:	e1 18       	sub	r14, r1
    1c68:	f1 0a       	sbc	r15, r17
    1c6a:	43 0b       	sbc	r20, r19
    1c6c:	56 0b       	sbc	r21, r22
    1c6e:	c9 0b       	sbc	r28, r25
    1c70:	d0 09       	sbc	r29, r0
    1c72:	c0 f7       	brcc	.-16     	; 0x1c64 <__ftoa_engine+0x10a>
    1c74:	e1 0c       	add	r14, r1
    1c76:	f1 1e       	adc	r15, r17
    1c78:	43 1f       	adc	r20, r19
    1c7a:	56 1f       	adc	r21, r22
    1c7c:	c9 1f       	adc	r28, r25
    1c7e:	d0 1d       	adc	r29, r0
    1c80:	7e f4       	brtc	.+30     	; 0x1ca0 <__ftoa_engine+0x146>
    1c82:	70 33       	cpi	r23, 0x30	; 48
    1c84:	11 f4       	brne	.+4      	; 0x1c8a <__ftoa_engine+0x130>
    1c86:	8a 95       	dec	r24
    1c88:	e6 cf       	rjmp	.-52     	; 0x1c56 <__ftoa_engine+0xfc>
    1c8a:	e8 94       	clt
    1c8c:	01 50       	subi	r16, 0x01	; 1
    1c8e:	30 f0       	brcs	.+12     	; 0x1c9c <__ftoa_engine+0x142>
    1c90:	08 0f       	add	r16, r24
    1c92:	0a f4       	brpl	.+2      	; 0x1c96 <__ftoa_engine+0x13c>
    1c94:	00 27       	eor	r16, r16
    1c96:	02 17       	cp	r16, r18
    1c98:	08 f4       	brcc	.+2      	; 0x1c9c <__ftoa_engine+0x142>
    1c9a:	20 2f       	mov	r18, r16
    1c9c:	23 95       	inc	r18
    1c9e:	02 2f       	mov	r16, r18
    1ca0:	7a 33       	cpi	r23, 0x3A	; 58
    1ca2:	28 f0       	brcs	.+10     	; 0x1cae <__ftoa_engine+0x154>
    1ca4:	79 e3       	ldi	r23, 0x39	; 57
    1ca6:	7d 93       	st	X+, r23
    1ca8:	2a 95       	dec	r18
    1caa:	e9 f7       	brne	.-6      	; 0x1ca6 <__ftoa_engine+0x14c>
    1cac:	10 c0       	rjmp	.+32     	; 0x1cce <__ftoa_engine+0x174>
    1cae:	7d 93       	st	X+, r23
    1cb0:	2a 95       	dec	r18
    1cb2:	89 f6       	brne	.-94     	; 0x1c56 <__ftoa_engine+0xfc>
    1cb4:	06 94       	lsr	r0
    1cb6:	97 95       	ror	r25
    1cb8:	67 95       	ror	r22
    1cba:	37 95       	ror	r19
    1cbc:	17 95       	ror	r17
    1cbe:	17 94       	ror	r1
    1cc0:	e1 18       	sub	r14, r1
    1cc2:	f1 0a       	sbc	r15, r17
    1cc4:	43 0b       	sbc	r20, r19
    1cc6:	56 0b       	sbc	r21, r22
    1cc8:	c9 0b       	sbc	r28, r25
    1cca:	d0 09       	sbc	r29, r0
    1ccc:	98 f0       	brcs	.+38     	; 0x1cf4 <__ftoa_engine+0x19a>
    1cce:	23 95       	inc	r18
    1cd0:	7e 91       	ld	r23, -X
    1cd2:	73 95       	inc	r23
    1cd4:	7a 33       	cpi	r23, 0x3A	; 58
    1cd6:	08 f0       	brcs	.+2      	; 0x1cda <__ftoa_engine+0x180>
    1cd8:	70 e3       	ldi	r23, 0x30	; 48
    1cda:	7c 93       	st	X, r23
    1cdc:	20 13       	cpse	r18, r16
    1cde:	b8 f7       	brcc	.-18     	; 0x1cce <__ftoa_engine+0x174>
    1ce0:	7e 91       	ld	r23, -X
    1ce2:	70 61       	ori	r23, 0x10	; 16
    1ce4:	7d 93       	st	X+, r23
    1ce6:	30 f0       	brcs	.+12     	; 0x1cf4 <__ftoa_engine+0x19a>
    1ce8:	83 95       	inc	r24
    1cea:	71 e3       	ldi	r23, 0x31	; 49
    1cec:	7d 93       	st	X+, r23
    1cee:	70 e3       	ldi	r23, 0x30	; 48
    1cf0:	2a 95       	dec	r18
    1cf2:	e1 f7       	brne	.-8      	; 0x1cec <__ftoa_engine+0x192>
    1cf4:	11 24       	eor	r1, r1
    1cf6:	ef 90       	pop	r14
    1cf8:	ff 90       	pop	r15
    1cfa:	0f 91       	pop	r16
    1cfc:	1f 91       	pop	r17
    1cfe:	cf 91       	pop	r28
    1d00:	df 91       	pop	r29
    1d02:	99 27       	eor	r25, r25
    1d04:	87 fd       	sbrc	r24, 7
    1d06:	90 95       	com	r25
    1d08:	08 95       	ret

00001d0a <isspace>:
    1d0a:	91 11       	cpse	r25, r1
    1d0c:	0c 94 cf 0e 	jmp	0x1d9e	; 0x1d9e <__ctype_isfalse>
    1d10:	80 32       	cpi	r24, 0x20	; 32
    1d12:	19 f0       	breq	.+6      	; 0x1d1a <isspace+0x10>
    1d14:	89 50       	subi	r24, 0x09	; 9
    1d16:	85 50       	subi	r24, 0x05	; 5
    1d18:	c8 f7       	brcc	.-14     	; 0x1d0c <isspace+0x2>
    1d1a:	08 95       	ret

00001d1c <strncasecmp_P>:
    1d1c:	fb 01       	movw	r30, r22
    1d1e:	dc 01       	movw	r26, r24
    1d20:	41 50       	subi	r20, 0x01	; 1
    1d22:	50 40       	sbci	r21, 0x00	; 0
    1d24:	88 f0       	brcs	.+34     	; 0x1d48 <strncasecmp_P+0x2c>
    1d26:	8d 91       	ld	r24, X+
    1d28:	81 34       	cpi	r24, 0x41	; 65
    1d2a:	1c f0       	brlt	.+6      	; 0x1d32 <strncasecmp_P+0x16>
    1d2c:	8b 35       	cpi	r24, 0x5B	; 91
    1d2e:	0c f4       	brge	.+2      	; 0x1d32 <strncasecmp_P+0x16>
    1d30:	80 5e       	subi	r24, 0xE0	; 224
    1d32:	65 91       	lpm	r22, Z+
    1d34:	61 34       	cpi	r22, 0x41	; 65
    1d36:	1c f0       	brlt	.+6      	; 0x1d3e <strncasecmp_P+0x22>
    1d38:	6b 35       	cpi	r22, 0x5B	; 91
    1d3a:	0c f4       	brge	.+2      	; 0x1d3e <strncasecmp_P+0x22>
    1d3c:	60 5e       	subi	r22, 0xE0	; 224
    1d3e:	86 1b       	sub	r24, r22
    1d40:	61 11       	cpse	r22, r1
    1d42:	71 f3       	breq	.-36     	; 0x1d20 <strncasecmp_P+0x4>
    1d44:	99 0b       	sbc	r25, r25
    1d46:	08 95       	ret
    1d48:	88 1b       	sub	r24, r24
    1d4a:	fc cf       	rjmp	.-8      	; 0x1d44 <strncasecmp_P+0x28>

00001d4c <__cmpsf2>:
    1d4c:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <__fp_cmp>
    1d50:	08 f4       	brcc	.+2      	; 0x1d54 <__cmpsf2+0x8>
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	08 95       	ret

00001d56 <__fp_cmp>:
    1d56:	99 0f       	add	r25, r25
    1d58:	00 08       	sbc	r0, r0
    1d5a:	55 0f       	add	r21, r21
    1d5c:	aa 0b       	sbc	r26, r26
    1d5e:	e0 e8       	ldi	r30, 0x80	; 128
    1d60:	fe ef       	ldi	r31, 0xFE	; 254
    1d62:	16 16       	cp	r1, r22
    1d64:	17 06       	cpc	r1, r23
    1d66:	e8 07       	cpc	r30, r24
    1d68:	f9 07       	cpc	r31, r25
    1d6a:	c0 f0       	brcs	.+48     	; 0x1d9c <__fp_cmp+0x46>
    1d6c:	12 16       	cp	r1, r18
    1d6e:	13 06       	cpc	r1, r19
    1d70:	e4 07       	cpc	r30, r20
    1d72:	f5 07       	cpc	r31, r21
    1d74:	98 f0       	brcs	.+38     	; 0x1d9c <__fp_cmp+0x46>
    1d76:	62 1b       	sub	r22, r18
    1d78:	73 0b       	sbc	r23, r19
    1d7a:	84 0b       	sbc	r24, r20
    1d7c:	95 0b       	sbc	r25, r21
    1d7e:	39 f4       	brne	.+14     	; 0x1d8e <__fp_cmp+0x38>
    1d80:	0a 26       	eor	r0, r26
    1d82:	61 f0       	breq	.+24     	; 0x1d9c <__fp_cmp+0x46>
    1d84:	23 2b       	or	r18, r19
    1d86:	24 2b       	or	r18, r20
    1d88:	25 2b       	or	r18, r21
    1d8a:	21 f4       	brne	.+8      	; 0x1d94 <__fp_cmp+0x3e>
    1d8c:	08 95       	ret
    1d8e:	0a 26       	eor	r0, r26
    1d90:	09 f4       	brne	.+2      	; 0x1d94 <__fp_cmp+0x3e>
    1d92:	a1 40       	sbci	r26, 0x01	; 1
    1d94:	a6 95       	lsr	r26
    1d96:	8f ef       	ldi	r24, 0xFF	; 255
    1d98:	81 1d       	adc	r24, r1
    1d9a:	81 1d       	adc	r24, r1
    1d9c:	08 95       	ret

00001d9e <__ctype_isfalse>:
    1d9e:	99 27       	eor	r25, r25
    1da0:	88 27       	eor	r24, r24

00001da2 <__ctype_istrue>:
    1da2:	08 95       	ret

00001da4 <__muluhisi3>:
    1da4:	0e 94 d2 0a 	call	0x15a4	; 0x15a4 <__umulhisi3>
    1da8:	a5 9f       	mul	r26, r21
    1daa:	90 0d       	add	r25, r0
    1dac:	b4 9f       	mul	r27, r20
    1dae:	90 0d       	add	r25, r0
    1db0:	a4 9f       	mul	r26, r20
    1db2:	80 0d       	add	r24, r0
    1db4:	91 1d       	adc	r25, r1
    1db6:	11 24       	eor	r1, r1
    1db8:	08 95       	ret

00001dba <_exit>:
    1dba:	f8 94       	cli

00001dbc <__stop_program>:
    1dbc:	ff cf       	rjmp	.-2      	; 0x1dbc <__stop_program>
